<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>DevExpress.Xpo.v19.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Xpo">
      <summary>
        <para>Contains classes that support the infrastructure of the eXpress Persistent Objects.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.AggregatedAttribute">
      <summary>
        <para>Indicates that persistent objects referenced by the target property are aggregated.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.AggregatedAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.AggregatedAttribute"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.AssociationAttribute">
      <summary>
        <para>Identifies the end of an association that is involved in an object relationship.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.AssociationAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.AssociationAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> class with the specified association name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the association name for the member. This value is assigned to the <see cref="P:DevExpress.Xpo.AssociationAttribute.Name"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the member&#39;s association name. This value is assigned to the <see cref="P:DevExpress.Xpo.AssociationAttribute.Name"/> property.</param>
      <param name="elementAssemblyName">A <see cref="T:System.String"/> value which specifies the name of the assembly where the type associated with the object at the opposite end of the association is declared. This value is assigned to the <see cref="P:DevExpress.Xpo.AssociationAttribute.AssemblyName"/> property.</param>
      <param name="elementTypeName">A <see cref="T:System.String"/> value which specifies the full name of the type that describes the object on the opposite end of the association. This value is assigned to the <see cref="P:DevExpress.Xpo.AssociationAttribute.ElementTypeName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.AssociationAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> class with the specified association name and type.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the association name for the member. This value is assigned to the <see cref="P:DevExpress.Xpo.AssociationAttribute.Name"/> property.</param>
      <param name="elementType">A <see cref="T:System.Type"/> descendant representing the type which is associated with the object on the opposite end of the association.</param>
    </member>
    <member name="M:DevExpress.Xpo.AssociationAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> class with the specified type which describes the object on the opposite end of the association.</para>
      </summary>
      <param name="elementType">The <see cref="T:System.Type"/> that describes the object on the opposite end of the association.</param>
    </member>
    <member name="P:DevExpress.Xpo.AssociationAttribute.AssemblyName">
      <summary>
        <para>Gets or sets the assembly name where the type which is associated with the object at the opposite end of the association is declared.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the name of the assembly where the type associated with the object at the opposite end of the association is declared.</value>
    </member>
    <member name="P:DevExpress.Xpo.AssociationAttribute.ElementTypeName">
      <summary>
        <para>Gets or sets the full name of the type which describes the object on the opposite end of the association.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the full name of the type that describes the object on the opposite end of the association.</value>
    </member>
    <member name="P:DevExpress.Xpo.AssociationAttribute.Name">
      <summary>
        <para>Gets the name of the association.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the member&#39;s association name.</value>
    </member>
    <member name="P:DevExpress.Xpo.AssociationAttribute.UseAssociationNameAsIntermediateTableName">
      <summary>
        <para>Gets or sets whether the association&#39;s name is used as the name of a junction table in a many-to-many relationship.</para>
      </summary>
      <value>true to use the association&#39;s name as the name of a junction table; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.AsyncBehavior">
      <summary>
        <para>Contains values that determine how asynchronous operations behave.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.AsyncBehavior.Default">
      <summary>
        <para>The asynchronous method exhibits the default behavior. Currently, this value is set to ThrowIfNotSupported.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.AsyncBehavior.ThrowIfNotSupported">
      <summary>
        <para>If an asynchronous method is not supported, XPO throws the InvalidOperationException.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.AsyncBehavior.WrapAlways">
      <summary>
        <para>XPO calls a corresponding synchronous method and wraps it in Task.Run(()=&gt;...).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.AsyncBehavior.WrapIfNotSupported">
      <summary>
        <para>If an asynchronous method is not supported, XPO wraps the method in Task.Run(()=&gt;...).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.AsyncCommitCallback">
      <summary>
        <para>Represents a method that will handle asynchronous COMMIT operations.</para>
      </summary>
      <param name="ex">A <see cref="T:System.Exception"/> object containing the exception information related to an asynchronous COMMIT operation.</param>
    </member>
    <member name="T:DevExpress.Xpo.AsyncSelectDataCallback">
      <summary>
        <para>Represents a method that will handle operations that asynchronously retrieve objects from a data store.</para>
      </summary>
      <param name="result">A list of retrieved objects.</param>
      <param name="ex">A <see cref="T:System.Exception"/> object containing the exception information related to an operation that asynchronously retrieved the objects.</param>
    </member>
    <member name="T:DevExpress.Xpo.CacheBehavior">
      <summary>
        <para>Defines how references to instances of persistent objects are stored in a session&#39;s cache.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.CacheBehavior.Default">
      <summary>
        <para>The behavior is determined by XPO. For instance, in XPO version 8.1 this is equal to CacheBehavior.Weak.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.CacheBehavior.Strong">
      <summary>
        <para>Direct references to objects are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.CacheBehavior.Weak">
      <summary>
        <para>Instances of the System.WeakReference class are used.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.CollectionBindingBehavior">
      <summary>
        <para>Contains values that specify which operations can be performed on a collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.CollectionBindingBehavior.AllowNew">
      <summary>
        <para>Specifies that new items can be added to a collection by a bound control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.CollectionBindingBehavior.AllowNone">
      <summary>
        <para>Specifies that items are not allowed to be added to or removed from a collection by a bound control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.CollectionBindingBehavior.AllowRemove">
      <summary>
        <para>Specifies that items can be removed from a collection by a bound control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.ColumnDbDefaultValueAttribute">
      <summary>
        <para>Applied to persistent class&#39; fields or properties. Specifies the SQL expression representing the default value of the database column mapped to the target property/field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ColumnDbDefaultValueAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ColumnDbDefaultValueAttribute"/> class.</para>
      </summary>
      <param name="dbDefaultValue">A string specifying the default value of the database column mapped to the target property/field.</param>
    </member>
    <member name="P:DevExpress.Xpo.ColumnDbDefaultValueAttribute.DbDefaultValue">
      <summary>
        <para>Specifies the default value of the database column mapped to the target property/field.</para>
      </summary>
      <value>A string specifying the default value of the database column mapped to the target property/field.</value>
    </member>
    <member name="T:DevExpress.Xpo.ColumnDefaultValueAttribute">
      <summary>
        <para>Applied to persistent class&#39; fields or properties. Specifies the default value of the database column mapped to the target property/field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ColumnDefaultValueAttribute.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ColumnDefaultValueAttribute"/> class.</para>
      </summary>
      <param name="guidPartA">An Int32 value specifying the &#39;A&#39; part of the GUID value.</param>
      <param name="guidPartB">An Int16 value specifying the &#39;B&#39; part of the GUID value.</param>
      <param name="guidPartC">An Int16 value specifying the &#39;C&#39; part of the GUID value.</param>
      <param name="guidPartD">A Byte value specifying the &#39;D&#39; part of the GUID value.</param>
      <param name="guidPartE">A Byte value specifying the &#39;E&#39; part of the GUID value.</param>
      <param name="guidPartF">A Byte value specifying the &#39;F&#39; part of the GUID value.</param>
      <param name="guidPartG">A Byte value specifying the &#39;G&#39; part of the GUID value.</param>
      <param name="guidPartH">A Byte value specifying the &#39;H&#39; part of the GUID value.</param>
      <param name="guidPartI">A Byte value specifying the &#39;I&#39; part of the GUID value.</param>
      <param name="guidPartJ">A Byte value specifying the &#39;J&#39; part of the GUID value.</param>
      <param name="guidPartK">A Byte value specifying the &#39;K&#39; part of the GUID value.</param>
    </member>
    <member name="M:DevExpress.Xpo.ColumnDefaultValueAttribute.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ColumnDefaultValueAttribute"/> class.</para>
      </summary>
      <param name="dateYear">An integer specifying the year part of the date-time value.</param>
      <param name="dateMonth">An integer specifying the month part of the date-time value.</param>
      <param name="dateDay">An integer specifying the day part of the date-time value.</param>
      <param name="dateHour">An integer specifying the hour part of the date-time value.</param>
      <param name="dateMinute">An integer specifying the minute part of the date-time value.</param>
      <param name="dateSecond">An integer specifying the second part of the date-time value.</param>
      <param name="dateMillisecond">An integer specifying the millisecond part of the date-time value.</param>
    </member>
    <member name="M:DevExpress.Xpo.ColumnDefaultValueAttribute.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ColumnDefaultValueAttribute"/> class.</para>
      </summary>
      <param name="defaultValue">An object specifying the default value of the database column mapped to the target property/field.</param>
    </member>
    <member name="P:DevExpress.Xpo.ColumnDefaultValueAttribute.DefaultValue">
      <summary>
        <para>Specifies the default value of the database column mapped to the target property/field.</para>
      </summary>
      <value>An object specifying the default value of the database column mapped to the target property/field.</value>
    </member>
    <member name="T:DevExpress.Xpo.CommitObjectStubsResult">
      <summary>
        <para>Results of object saving performed via <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.CommitObjectStubsResult.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.CommitObjectStubsResult.#ctor(System.Object,System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="key"></param>
      <param name="optimisticLockField"></param>
    </member>
    <member name="P:DevExpress.Xpo.CommitObjectStubsResult.Key">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.CommitObjectStubsResult.OptimisticLockField">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.CustomAttribute">
      <summary>
        <para>Specifies a custom attribute for a class or a class member.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.CustomAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.CustomAttribute"/> class with the specified name and value.</para>
      </summary>
      <param name="theName">The name of the attribute. This value is assigned to the <see cref="P:DevExpress.Xpo.CustomAttribute.Name"/> property.</param>
      <param name="theValue">The value of the attribute. This value is assigned to the <see cref="P:DevExpress.Xpo.CustomAttribute.Value"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.CustomAttribute.Name">
      <summary>
        <para>Gets the attribute&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the attribute&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.CustomAttribute.Value">
      <summary>
        <para>Gets the attribute&#39;s value.</para>
      </summary>
      <value>The <see cref="T:System.String"/> that specifies the attribute&#39;s value.</value>
    </member>
    <member name="T:DevExpress.Xpo.CustomCriteriaManager">
      <summary>
        <para>A manager for custom criteria used in LINQ to XPO expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.CustomCriteriaManager.GetCriteria(System.Reflection.MethodInfo)">
      <summary>
        <para>Searches custom criteria registered in an application via the <see cref="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriterion(DevExpress.Xpo.ICustomCriteriaOperatorQueryable)"/> and <see cref="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriteria(System.Collections.Generic.IEnumerable{DevExpress.Xpo.ICustomCriteriaOperatorQueryable})"/> method calls for a criterion associated with a specified method.</para>
      </summary>
      <param name="methodInfo">A <see cref="T:System.Reflection.MethodInfo"/> object identifying a method associated with a custom criterion to search.</param>
      <returns>An <see cref="T:DevExpress.Xpo.ICustomCriteriaOperatorQueryable"/> object that returns the methodInfo via the <see cref="M:DevExpress.Xpo.ICustomCriteriaOperatorQueryable.GetMethodInfo"/> method implementation, if found; otherwise, null (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:DevExpress.Xpo.CustomCriteriaManager.GetRegisteredCriteria">
      <summary>
        <para>Returns custom criteria registered in an application via the <see cref="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriterion(DevExpress.Xpo.ICustomCriteriaOperatorQueryable)"/> and <see cref="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriteria(System.Collections.Generic.IEnumerable{DevExpress.Xpo.ICustomCriteriaOperatorQueryable})"/> method calls.</para>
      </summary>
      <returns>A DevExpress.Xpo.CustomCriteriaCollection object containing all custom criteria registered via the methods mentioned above.</returns>
    </member>
    <member name="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriteria(System.Collections.Generic.IEnumerable{DevExpress.Xpo.ICustomCriteriaOperatorQueryable})">
      <summary>
        <para>Registers specified custom criteria to use in LINQ to XPO expressions.</para>
      </summary>
      <param name="customCriteria">A collection of <see cref="T:DevExpress.Xpo.ICustomCriteriaOperatorQueryable"/> objects implementing custom criteria to register.</param>
    </member>
    <member name="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriterion(DevExpress.Xpo.ICustomCriteriaOperatorQueryable)">
      <summary>
        <para>Registers a specified custom criterion to use in LINQ to XPO expressions.</para>
      </summary>
      <param name="customCriterion">An <see cref="T:DevExpress.Xpo.ICustomCriteriaOperatorQueryable"/> object implementing a custom criterion to register.</param>
    </member>
    <member name="P:DevExpress.Xpo.CustomCriteriaManager.RegisteredCriterionCount">
      <summary>
        <para>Returns custom criteria registered in an application via the <see cref="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriterion(DevExpress.Xpo.ICustomCriteriaOperatorQueryable)"/> and <see cref="M:DevExpress.Xpo.CustomCriteriaManager.RegisterCriteria(System.Collections.Generic.IEnumerable{DevExpress.Xpo.ICustomCriteriaOperatorQueryable})"/> method calls.</para>
      </summary>
      <value>A <see cref="T:System.Int32"/> object which containing all custom criteria registered via the methods mentioned above.</value>
    </member>
    <member name="M:DevExpress.Xpo.CustomCriteriaManager.UnregisterCriterion(DevExpress.Xpo.ICustomCriteriaOperatorQueryable)">
      <summary>
        <para>Unregisters a specified custom criterion from use in LINQ to XPO expressions in your application.</para>
      </summary>
      <param name="customCriterion">An <see cref="T:DevExpress.Xpo.ICustomCriteriaOperatorQueryable"/> object instance specifying a custom critrerion to unregister.</param>
      <returns>true if the customCriterion has successfully been removed from a collection returned by the <see cref="M:DevExpress.Xpo.CustomCriteriaManager.GetRegisteredCriteria"/> function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.CustomCriteriaManager.UnregisterCriterion(System.Reflection.MethodInfo)">
      <summary>
        <para>Unregisters a custom criterion associated with a specified method from use in LINQ to XPO expressions in your application.</para>
      </summary>
      <param name="methodInfo">A <see cref="T:System.Reflection.MethodInfo"/> object of a method associated with a custom criterion to unregister.</param>
      <returns>true if a custom criterion associated with the method whose metadata matches the methodInfo has successfully been removed from a collection returned by the <see cref="M:DevExpress.Xpo.CustomCriteriaManager.GetRegisteredCriteria"/> function; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DataViewPropertiesCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Xpo.DataViewProperty"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DataViewPropertiesCollection.#ctor(DevExpress.Xpo.XPDataView)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DataViewPropertiesCollection"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.XPDataView"/> object that represents the data view which owns this collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.DataViewPropertiesCollection.Add(DevExpress.Xpo.DataViewPropertiesCollection)">
      <summary>
        <para>Adds the objects in the specified collection to the current collection.</para>
      </summary>
      <param name="sortProperties">A <see cref="T:DevExpress.Xpo.DataViewPropertiesCollection"/> object which represents the collection whose elements are appended to the current collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.DataViewPropertiesCollection.Add(DevExpress.Xpo.DataViewProperty)">
      <summary>
        <para>Adds the specified object to the collection.</para>
      </summary>
      <param name="sortProperty">A <see cref="T:DevExpress.Xpo.DataViewProperty"/> object to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.DataViewPropertiesCollection.AddRange(DevExpress.Xpo.DataViewProperty[])">
      <summary>
        <para>Adds an array of <see cref="T:DevExpress.Xpo.ViewProperty"/> objects to the collection.</para>
      </summary>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.DataViewProperty"/> objects to add to the collection.</param>
    </member>
    <member name="P:DevExpress.Xpo.DataViewPropertiesCollection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to the collection&#39;s elements.</para>
      </summary>
      <param name="index">An integer value specifying the zero-based index that identifies an element.</param>
      <value>A <see cref="T:DevExpress.Xpo.DataViewProperty"/> object representing the collection&#39;s element.</value>
    </member>
    <member name="P:DevExpress.Xpo.DataViewPropertiesCollection.Item(System.String)">
      <summary>
        <para>Returns the collection&#39;s element with the specified name.</para>
      </summary>
      <param name="name">A string representing an element&#39;s name.</param>
      <value>A <see cref="T:DevExpress.Xpo.DataViewProperty"/> object with the specified name.</value>
    </member>
    <member name="T:DevExpress.Xpo.DataViewProperty">
      <summary>
        <para>A data view column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DataViewProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DataViewProperty"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DataViewProperty.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DataViewProperty"/> class with the specified column name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the column name. This value is assigned to the <see cref="P:DevExpress.Xpo.DataViewProperty.Name"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DataViewProperty.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DataViewProperty"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the column&#39;s name. This value is assigned to the <see cref="P:DevExpress.Xpo.DataViewProperty.Name"/> property.</param>
      <param name="valueType">A <see cref="T:System.Type"/> value which specifies the column&#39;s type. This value is assigned to the <see cref="P:DevExpress.Xpo.DataViewProperty.ValueType"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DataViewProperty.Name">
      <summary>
        <para>Gets or sets the column&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the column&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.DataViewProperty.ValueType">
      <summary>
        <para>Gets or sets the column&#39;s type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> value which specifies the type of values displayed within the column.</value>
    </member>
    <member name="T:DevExpress.Xpo.DataViewRecord">
      <summary>
        <para>A record within the <see cref="T:DevExpress.Xpo.XPDataView"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DataViewRecord.#ctor(DevExpress.Xpo.XPDataView,System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DataViewRecord"/> class.</para>
      </summary>
      <param name="view">An <see cref="T:DevExpress.Xpo.XPDataView"/> object that represents the data view to which the record belongs.</param>
      <param name="data">An array of objects that represent the record&#39;s data. The order of objects corresponds to columns providing values for the record.</param>
    </member>
    <member name="P:DevExpress.Xpo.DataViewRecord.Item(System.Int32)">
      <summary>
        <para>Gets the value of the column specified by its index.</para>
      </summary>
      <param name="index">An integer value which represents the column&#39;s index.</param>
      <value>An object which represents the value of the specified column.</value>
    </member>
    <member name="P:DevExpress.Xpo.DataViewRecord.Item(System.String)">
      <summary>
        <para>Gets the value of the column specified by its name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the column&#39;s name.</param>
      <value>An object which represents the value of the specified column.</value>
    </member>
    <member name="P:DevExpress.Xpo.DataViewRecord.View">
      <summary>
        <para>Gets the data view to which the current record belongs.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.XPDataView"/> object representing the data view that owns the current record.</value>
    </member>
    <member name="N:DevExpress.Xpo.DB">
      <summary>
        <para>Contains classes that handle operations on a data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.AccessConnectionProvider">
      <summary>
        <para>Implements data-aware operations for working with MS Access databases.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.#ctor(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.AccessConnectionProvider"/> class with the specified settings.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.CreateForeignKey(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBForeignKey)">
      <summary>
        <para>Creates a foreign key.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.</param>
      <param name="foreignKey">A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object that represents the foreign key.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.CreateProviderFromConnection(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connection"></param>
      <param name="autoCreateOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.CreateProviderFromString(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <param name="autoCreateOption"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatBinary(DevExpress.Data.Filtering.BinaryOperatorType,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="leftOperand"></param>
      <param name="rightOperand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatColumn(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatColumn(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatConstraint(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatDelete(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatFunction(DevExpress.Data.Filtering.FunctionOperatorType,System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatFunction(DevExpress.Xpo.DB.Helpers.ProcessParameter,DevExpress.Data.Filtering.FunctionOperatorType,System.Object[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="processParameter"></param>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatInsert(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="fields"></param>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatInsertDefaultValues(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="selectedPropertiesSql"></param>
      <param name="fromSql"></param>
      <param name="whereSql"></param>
      <param name="orderBySql"></param>
      <param name="groupBySql"></param>
      <param name="havingSql"></param>
      <param name="topSelectedRecords"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatTable(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatTable(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.FormatUpdate(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="sets"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetConnectionString(System.String)">
      <summary>
        <para>Returns a connection string to the specified MS Access data base using the default credentials.</para>
      </summary>
      <param name="database">A string that specifies the path and name of the data base to connect to.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetConnectionString(System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string to the specified MS Access database using the specified credentials.</para>
      </summary>
      <param name="database">A string that specifies the path and name of the database to connect to.</param>
      <param name="userId">A string that specifies the user&#39;s name. This is used to initialize the &quot;User ID&quot; field of the connection string.</param>
      <param name="password">A string that specifies the password. This is used to initialize the &quot;Password&quot; field of the connection string.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetConnectionStringACE(System.String,System.String)">
      <summary>
        <para>Returns a connection string to the specified MS Access 2007 database using the default credentials.</para>
      </summary>
      <param name="database">A string that specifies the path and name of the data base to connect to.</param>
      <param name="password">A string that specifies the password. This is used to initialize the &quot;Password&quot; field of the connection string.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetParameterName(DevExpress.Data.Filtering.OperandValue,System.Int32,System.Boolean@)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="parameter"></param>
      <param name="index"></param>
      <param name="createParameter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <param name="forTableCreate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of the available tables in the data store.</para>
      </summary>
      <param name="includeViews">true, to include available database views in the resulting array; otherwise, false.</param>
      <returns>An array which contains the table names in the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.GetStoredProcedures">
      <summary>
        <para>Returns an array of stored procedures available within the data store.</para>
      </summary>
      <returns>An array containing available stored procedures.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.AccessConnectionProvider.MaximumStringSize">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProvider.Register">
      <summary>
        <para>Registers the provider for use with XPO.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.AccessConnectionProvider.XpoProviderTypeString">
      <summary>
        <para>Gets the name of the current connection provider. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe">
      <summary>
        <para>Implements an MS Access connection provider that can be used in multi-user and multi-threaded applications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.#ctor(System.String,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe"/> class with the specified settings.</para>
      </summary>
      <param name="connectionString">A connection string. This parameter is used to initialize the <see cref="F:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.ConnectionString"/> property.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when the data store is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.AutoCreateOption"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.AutoCreateOption">
      <summary>
        <para>Returns which operations are performed when a session is connected to a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when a session is connected to a data store.</value>
    </member>
    <member name="F:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.ConnectionString">
      <summary>
        <para>Gets the connection string.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.CreateProviderFromString(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <param name="autoCreateOption"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.GetConnectionString(System.String)">
      <summary>
        <para>Returns a connection string to the specified MS Access data base.</para>
      </summary>
      <param name="database">A string that specifies the path and name of the data base to connect to.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.GetConnectionString(System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string to the specified MS Access data base using the specified credentials.</para>
      </summary>
      <param name="database">A string that specifies the path and name of the data base to connect to.</param>
      <param name="userId">A string that specifies the user&#39;s name. This is used to initialize the &quot;User ID&quot; field of the connection string.</param>
      <param name="password">A string that specifies the password. This is used to initialize the &quot;Password&quot; field of the connection string.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.GetStorageTables(System.String[])">
      <summary>
        <para>Returns information that describes the structures of the specified tables.</para>
      </summary>
      <param name="tables">An array of table names identifying the tables whose information should be retrieved.</param>
      <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structures of the requested tables.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of the available tables in the data store.</para>
      </summary>
      <param name="includeViews">true, to include available database views in the resulting array; otherwise, false.</param>
      <returns>An array of the table names in the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a data store using the specified modification statements.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>The result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.ModifyDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.Register">
      <summary>
        <para>Registers the provider for use with XPO.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Fetches data from a data store using the specified query statements.</para>
      </summary>
      <param name="selects">An array of statements to obtain data from the data store.</param>
      <returns>The data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.SelectDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>Updates the storage schema according to the specified class descriptions.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the tables array doesn&#39;t exist in the data store.</param>
      <param name="tables">An array of tables whose structure should be saved in the data store.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.AccessConnectionProviderMultiUserThreadSafe.XpoProviderTypeString">
      <summary>
        <para>Gets the name of the current connection provider. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.CachedDataStoreClient">
      <summary>
        <para>A cached data store provider (an <see cref="T:DevExpress.Xpo.DB.ICachedDataStore"/> implementation) for client applications transferring data via WCF.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreClient"/> class with specified settings.</para>
      </summary>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding"/> object specifying binding elements used for communication between the client and a service.</param>
      <param name="remoteAddress">A <see cref="T:System.ServiceModel.EndpointAddress"/> object specifying a unique network address that the client uses to communicate with a service endpoint.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreClient.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreClient"/> class using the configuration information specified in the client application&#39;s configuration file by confName.</para>
      </summary>
      <param name="configName">The name of the endpoint in the client application&#39;s configuration file.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.CachedDataStoreClientAsync">
      <summary>
        <para>A cached data store provider that client applications can use to asynchronously work with the data source via WCF.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreClientAsync.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.CachedDataStoreClient"/> class instance with specified settings.</para>
      </summary>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding"/> object that specifies binding elements. The client uses these binding elements to communicate with a service.</param>
      <param name="remoteAddress">The endpoint name in the client application&#39;s configuration file.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreClientAsync.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.CachedDataStoreClient"/> class instance according to the configuration information specified in the client application&#39;s configuration file.</para>
      </summary>
      <param name="configName">The name of the endpoint in the client application&#39;s configuration file.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.CachedDataStoreClientAsyncBase`1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreClientAsyncBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
        <para></para>
      </summary>
      <param name="binding"></param>
      <param name="remoteAddress"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreClientAsyncBase`1.#ctor(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="configName"></param>
    </member>
    <member name="T:DevExpress.Xpo.DB.CachedDataStoreService">
      <summary>
        <para>The base class for WCF services providing access to data via cached data stores (objects implementing the <see cref="T:DevExpress.Xpo.DB.ICachedDataStore"/> interface).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.#ctor(DevExpress.Xpo.DB.ICachedDataStore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/> class with a cached data store&#39;s element (Root or Node), which provides data for the service.</para>
      </summary>
      <param name="provider">An object implementing the <see cref="T:DevExpress.Xpo.DB.ICachedDataStore"/> interface, which provides data for the service.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.ModifyDataCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])"/> method of a cache element passed to the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="cookie"></param>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])"/> method of a cache element passed to the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="cookie"></param>
      <param name="dirtyTablesNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)"/> method of a cache element passed to the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="cookie"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.SelectDataCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])"/> method of a cache element passed to the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="cookie"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.UpdateSchemaCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)"/> method of a cache element passed to the <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="cookie"></param>
      <param name="tables"></param>
      <param name="doNotCreateIfFirstTableNotExist"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.CachedDataStoreService.WarpSelectDataCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Reserved for future use.</para>
      </summary>
      <param name="cookie"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataStoreClient">
      <summary>
        <para>A data store provider (an <see cref="T:DevExpress.Xpo.DB.IDataStore"/> implementation) for client applications transferring data via WCF.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataStoreClient"/> class with specified settings.</para>
      </summary>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding"/> object specifying binding elements used for communication between the client and a service.</param>
      <param name="remoteAddress">A <see cref="T:System.ServiceModel.EndpointAddress"/> object specifying a unique network address that the client uses to communicate with a service endpoint.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreClient.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataStoreClient"/> class using the configuration information specified in the client application&#39;s configuration file by confName.</para>
      </summary>
      <param name="configName">The name of the endpoint in the client application&#39;s configuration file.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataStoreClientAsync">
      <summary>
        <para>A data store provider that client applications can use to asynchronously work with the data source via WCF.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreClientAsync.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.DataStoreClientAsync"/> class instance with specified settings.</para>
      </summary>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding"/> object that specifies binding elements. The client uses these binding elements to communicate with a service.</param>
      <param name="remoteAddress">A unique network address the client uses to communicate with a service endpoint.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreClientAsync.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.DataStoreClientAsync"/> class instance, according to the configuration information retrieved from a client application&#39;s configuration file.</para>
      </summary>
      <param name="configName">The endpoint name in the client application&#39;s configuration file.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataStoreService">
      <summary>
        <para>The base class for WCF services providing access to data directly via data store providers (<see cref="T:DevExpress.Xpo.DB.IDataStore"/> implementors).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.#ctor(DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataStoreService"/> class with a data store provider, which supplies data for the service.</para>
      </summary>
      <param name="provider">An object implementing the <see cref="T:DevExpress.Xpo.DB.IDataStore"/> interface, which supplies data for the service.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.Do(System.String,System.Object)">
      <summary>
        <para>Executes a specified command with specific parameters and returns the operation result.</para>
      </summary>
      <param name="command">A <see cref="T:System.String"/> specifying the command to execute.</param>
      <param name="args">An object specifying the command&#39;s parameters.</param>
      <returns>An OperationResult&lt;<see cref="T:System.Object"/>&gt; denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.GetAutoCreateOption">
      <summary>
        <para>Returns which operations are performed when a data store is accessed for the first time. This method delegates its call to get the corresponding option value of a data store passed as provider to the constructor.</para>
      </summary>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/>&gt; denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a data store using specified modification statements and returns the operation result. This method delegates its call to the corresponding method of a data store passed as provider to the constructor.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.ModificationResult"/>&gt; denoting the result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Fetches data from a data store using specified query statements and returns the operation result. This method delegates its call to the corresponding method of a data store passed as provider to the constructor.</para>
      </summary>
      <param name="selects">An array of query statements.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.SelectedData"/>&gt; denoting the result of the data fetch.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>Updates a data store&#39;s schema according to specified settings and returns the operation result. This method delegates its call to the corresponding method of a data store passed as provider to the constructor.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the tables array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="tables">An array of tables whose structure should be saved in the data store.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/>&gt; denoting the result of the update operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreService.WarpSelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Reserved for future use.</para>
      </summary>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.FirebirdConnectionProvider">
      <summary>
        <para>Implements data-aware operations for working with a Firebird database.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.#ctor(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.FirebirdConnectionProvider"/> class with the specified settings.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.CollectTablesToCreate(System.Collections.ICollection)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.CreateConnection(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.CreateIndex(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBIndex)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="index"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.CreateProviderFromConnection(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="connection"></param>
      <param name="autoCreateOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.CreateProviderFromString(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <param name="autoCreateOption"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.CreateTable(DevExpress.Xpo.DB.DBTable)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.FirebirdConnectionProvider.DefaultCharacterSet">
      <summary>
        <para>Specifies the default character set for the current FirebirdConnectionProvider instance. When this field is not initialized (or set to null), the GlobalDefaultCharacterSet value is used. When both values are not specified, the UTF8 character set is used.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatBinary(DevExpress.Data.Filtering.BinaryOperatorType,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="leftOperand"></param>
      <param name="rightOperand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatColumn(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatColumn(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatConstraint(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatDelete(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatFunction(DevExpress.Data.Filtering.FunctionOperatorType,System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatFunction(DevExpress.Xpo.DB.Helpers.ProcessParameter,DevExpress.Data.Filtering.FunctionOperatorType,System.Object[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="processParameter"></param>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatInsert(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="fields"></param>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatInsertDefaultValues(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatOrder(System.String,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="sortProperty"></param>
      <param name="direction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="selectedPropertiesSql"></param>
      <param name="fromSql"></param>
      <param name="whereSql"></param>
      <param name="orderBySql"></param>
      <param name="groupBySql"></param>
      <param name="havingSql"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatTable(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatTable(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.FormatUpdate(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="sets"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetConnectionString(System.String,System.Int32,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified Firebird database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the server&#39;s name.</param>
      <param name="port">An integer that specifies the server&#39;s port number.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetConnectionString(System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified Firebird database using provided login credentials.</para>
      </summary>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetConnectionString(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified Firebird database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the server&#39;s name</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies a database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetConnectionString(System.String,System.String,System.String,System.String,DevExpress.Xpo.DB.FirebirdServerType,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified Firebird database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the server&#39;s name</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <param name="serverType">A string that specifies the server type.</param>
      <param name="charset">A string that specifies the database&#39;s character set.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetConnectionString(System.String,System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified Firebird database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the server&#39;s name.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <param name="charset">A string that specifies the database&#39;s character set.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetParameterName(DevExpress.Data.Filtering.OperandValue,System.Int32,System.Boolean@)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="parameter"></param>
      <param name="index"></param>
      <param name="createParameter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn,System.Boolean)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <param name="forTableCreate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of the available tables in the data store.</para>
      </summary>
      <param name="includeViews">true, to include available database views in the resulting array; otherwise, false.</param>
      <returns>An array of the table names in the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetStoredProcedures">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="checkIndexes"></param>
      <param name="checkForeignKeys"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.FirebirdConnectionProvider.GlobalDefaultCharacterSet">
      <summary>
        <para>Specifies the default character set for all FirebirdConnectionProvider instances. When this field is not initialized (or set to null), the UTF8 character set is used. To specify the character set for a specific FirebirdConnectionProvider instance, use the DefaultCharacterSet field instead.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.FirebirdConnectionProvider.MaximumStringSize">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.FirebirdConnectionProvider.NativeSkipTakeSupported">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.Register">
      <summary>
        <para>Registers the provider for use with XPO.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.FirebirdConnectionProvider.SetServerVersion(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="versionString"></param>
    </member>
    <member name="P:DevExpress.Xpo.DB.FirebirdConnectionProvider.SupportNamedParameters">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.FirebirdConnectionProvider.XpoProviderTypeString">
      <summary>
        <para>Gets the name of the current connection provider. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="N:DevExpress.Xpo.DB.Helpers">
      <summary>
        <para>Contains auxiliary (helper) classes that handle operations on data stores.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot">
      <summary>
        <para>The Root element that is used to connect Node elements to a data store being cached, tracking data store changes via SqlDependency notifications.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.AutoCreateOption">
      <summary>
        <para>Returns which operations are performed when a session connects a cached data store for the first time.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value specifying which operations are performed when a session connects a cached data store for the first time.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateProviderFromString_CacheRoot(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Returns a cached data store provider, created based on specified settings.</para>
      </summary>
      <param name="connectionString">A connection string. Use the  method to create valid connection strings.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.DataCacheNodeLocal"/> instance (an <see cref="T:DevExpress.Xpo.DB.IDataStore"/> implementation) which is connected to a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> associated with a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>, that is created based on specified settings.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateProviderFromString_WithCache(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Returns a cached data store provider, created based on specified settings.</para>
      </summary>
      <param name="connectionString">A connection string.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnecting from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.DataCacheNode"/> instance (an <see cref="T:DevExpress.Xpo.DB.IDataStore"/> implementation) which is connected to a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> associated with a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>, that is created based on specified settings.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.IDataStore,System.Data.SqlClient.SqlConnection,DevExpress.Xpo.DB.Helpers.ISqlGeneratorFormatter,DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.IDisposable[]@)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance associated with a specified MS SQL Server provider, which is used to access a database to be cached, based on specified settings.</para>
      </summary>
      <param name="nonCachedProvider">A MS SQL Server provider (an object implementing the <see cref="T:DevExpress.Xpo.DB.IDataStore"/>). Normally, you can pass a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> object as the parameter.</param>
      <param name="connection">An <see cref="T:System.Data.SqlClient.SqlConnection"/> object providing access to a database to be cached.</param>
      <param name="formatter">A SQL query formatter (an object implementing the ISqlGeneratorFormatter). Normally, you can pass a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> object as the parameter.</param>
      <param name="cacheConfiguration">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object providing cache configuration settings.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance (a <see cref="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore"/> implementation) ready to be used as the Root element in a cached hierarchy.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.IDataStore,System.Data.SqlClient.SqlConnection,DevExpress.Xpo.DB.Helpers.ISqlGeneratorFormatter,System.IDisposable[]@)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance associated with a specified MS SQL Server provider, which is used to access a database to be cached, based on specified settings.</para>
      </summary>
      <param name="nonCachedProvider">A MS SQL Server provider (an object implementing the <see cref="T:DevExpress.Xpo.DB.IDataStore"/>). Normally, you can pass a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> object or its descendant as the parameter.</param>
      <param name="connection">An <see cref="T:System.Data.SqlClient.SqlConnection"/> object providing access to a database to be cached.</param>
      <param name="formatter">A SQL query formatter (an object implementing the ISqlGeneratorFormatter). Normally, you can pass a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> object or its descendant as the parameter.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance (a <see cref="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore"/> implementation) ready to be used as the Root element in a cached hierarchy.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.IDataStore,System.Data.SqlClient.SqlConnection,System.String,DevExpress.Xpo.DB.Helpers.ISqlGeneratorFormatter,DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.IDisposable[]@)">
      <summary>
        <para></para>
      </summary>
      <param name="nonCachedProvider"></param>
      <param name="connection"></param>
      <param name="originalConnectionString"></param>
      <param name="formatter"></param>
      <param name="cacheConfiguration"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.IDataStore,System.Data.SqlClient.SqlConnection,System.String,DevExpress.Xpo.DB.Helpers.ISqlGeneratorFormatter,System.IDisposable[]@)">
      <summary>
        <para></para>
      </summary>
      <param name="nonCachedProvider"></param>
      <param name="connection"></param>
      <param name="originalConnectionString"></param>
      <param name="formatter"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.MSSqlConnectionProvider,DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.IDisposable[]@)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance associated with a specified <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>, providing access to a database to be cached, based on specified settings.</para>
      </summary>
      <param name="nonCachedProvider">An <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> providing access to the database.</param>
      <param name="cacheConfiguration">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object providing cache configuration settings.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance (a <see cref="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore"/> implementation) ready to be used as the Root element in a cached hierarchy.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.MSSqlConnectionProvider,System.IDisposable[]@)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance associated with a specified <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> providing access to a database to be cached.</para>
      </summary>
      <param name="nonCachedProvider">A <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> providing access to the database.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance (a <see cref="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore"/> implementation) ready to be used as the Root element in a cached hierarchy.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.MSSqlConnectionProvider,System.String,DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.IDisposable[]@)">
      <summary>
        <para></para>
      </summary>
      <param name="nonCachedProvider"></param>
      <param name="originalConnectionString"></param>
      <param name="cacheConfiguration"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(DevExpress.Xpo.DB.MSSqlConnectionProvider,System.String,System.IDisposable[]@)">
      <summary>
        <para></para>
      </summary>
      <param name="nonCachedProvider"></param>
      <param name="originalConnectionString"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(System.String,DevExpress.Xpo.DB.AutoCreateOption,DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.IDisposable[]@)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance associated with a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>, which is created to provide access to a database to be cached, based on specified settings.</para>
      </summary>
      <param name="sqlConnectionConnectionString">A string that specifies the connection string for a <see cref="T:System.Data.SqlClient.SqlConnection"/> object, which is created for a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>, providing access to a database to be cached.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <param name="cacheConfiguration">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object providing cache configuration settings.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance (a <see cref="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore"/> implementation) ready to be used as the Root element in a cached hierarchy.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateSqlDependencyCacheRoot(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance associated with a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>, which is created to provide access to a database to be cached, based on specified settings.</para>
      </summary>
      <param name="sqlConnectionConnectionString">A string that specifies the connection string for a <see cref="T:System.Data.SqlClient.SqlConnection"/> object, which is created for a <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> providing access to a database to be cached.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the database.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> instance (a <see cref="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore"/> implementation) ready to be used as the Root element in a cached hierarchy.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.Do(System.String,System.Object)">
      <summary>
        <para>Executes a specified command via the current Root element with specific parameters and returns the operation result.</para>
      </summary>
      <param name="command">A <see cref="T:System.String"/> specifying the command to execute.</param>
      <param name="args">An object specifying the command&#39;s parameters.</param>
      <returns>An <see cref="T:System.Object"/> denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a cached data store using specified settings and returns the operation result.</para>
      </summary>
      <param name="cookie">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheCookie"/> object specifying <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> state information.</param>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult"/> object denoting the result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a cached data store using specified modification statements and returns the operation result.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.ModificationResult"/> object denoting the result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
      <summary>
        <para>Informs a cached data store&#39;s Root element about specific modified tables.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dirtyTablesNames">An array of table names specifying modified tables.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheResult"/> object specifying a Root element&#39;s state.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
      <summary>
        <para>Synchronizes table update information with a cached data store&#39;s Root element.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheResult"/> object specifying a Root element&#39;s state.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.Register">
      <summary>
        <para>Registers <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/> as a data store provider for use with XPO.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Fetches data from a cached data store using specified query statements and returns the operation result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="selects">An array of query statements.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult"/> object denoting the result of the data fetch.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Fetches data from a cached data store using specified query statements.</para>
      </summary>
      <param name="selects">An array of statements to obtain data from the cached data store.</param>
      <returns>Data retrieved from the cached data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
      <summary>
        <para>Updates a cached data store&#39;s schema according to specified settings.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="tables">An array of tables whose structure should be saved in a cached data store.</param>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the tables array doesn&#39;t exist in a cached data store; otherwise, false.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult"/> denoting the result of the update operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>Updates a cached data store&#39;s schema according to specified settings.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the tables array doesn&#39;t exist in a cached data store; otherwise, false.</param>
      <param name="tables">An array of tables whose structure should be saved in a cached data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> denoting the result of the update operation.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.XpoProviderTypeString_CacheRoot">
      <summary>
        <para>Gets the name of a cached data store provider that is created via the <see cref="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateProviderFromString_CacheRoot(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)"/> method. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.XpoProviderTypeString_WithCache">
      <summary>
        <para>Gets the name of a cached data store provider that is created via the <see cref="M:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot.CreateProviderFromString_WithCache(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)"/> method. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi">
      <summary>
        <para>Provides helper methods allowing you to manage the SQL Server Express LocalDB instances.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi"/> class with the specified LocalDBInstance.dll file location.</para>
      </summary>
      <param name="fileName">A string path to the LocalDBInstance.dll file to load.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.CheckHandler">
      <summary>
        <para>Throws an ObjectDisposedException if the LocalDBInstance.dll handle is IntPtr.Zero.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.CreateInstance(System.String,System.String)">
      <summary>
        <para>Creates a new SQL Server Express LocalDB instance.</para>
      </summary>
      <param name="versionName">The LocalDB version, for example 11.0 or 11.0.1094.2.</param>
      <param name="instanceName">The name for the LocalDB instance to create.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.DeleteInstance(System.String)">
      <summary>
        <para>Deletes the specified LocalDB instance.</para>
      </summary>
      <param name="instanceName">A string name of the LocalDB instance to be deleted.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.Dispose">
      <summary>
        <para>Disposes the <see cref="T:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.GetInstanceInfo(System.String)">
      <summary>
        <para>Returns information for the specified SQL Server Express LocalDB instance.</para>
      </summary>
      <param name="instanceName">A string that is the instance name.</param>
      <returns>An MSSqlLocalDBInstanceInfo object that contains information on the specified LocalDB instance, e.g., whether it exists, the LocalDB version it uses, whether it is running, etc.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.GetInstances">
      <summary>
        <para>Returns the names of all SQL Server Express LocalDB instances.</para>
      </summary>
      <returns>A string array that contains the names of both named and default LocalDB instances on the user&#39;s workstation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.GetVersionInfo(System.String)">
      <summary>
        <para>Returns information for the specified SQL Server Express LocalDB version.</para>
      </summary>
      <param name="versionName">The LocalDB version name.</param>
      <returns>An MSSqlLocalDBVersionInfo object that specifies whether the SQL Server Express LocalDB version exists and provides the full LocalDB version number (including build and release numbers).</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.GetVersions">
      <summary>
        <para>Returns all SQL Server Express LocalDB versions installed.</para>
      </summary>
      <returns>A string array that contains the names of the installed LocalDB versions.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.LOCALDB_MAX_SQLCONNECTION_BUFFER_SIZE">
      <summary>
        <para>Gets the buffer size to store a LocalDB connection string (260, by default).</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.MAX_LOCALDB_INSTANCE_NAME_LENGTH">
      <summary>
        <para>Gets the maximum LocalDB instance name length (43, by default).</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.MAX_LOCALDB_VERSION_LENGTH">
      <summary>
        <para>Gets the maximum length of the LocalDB version (43, by default).</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.MAX_STRING_SID_LENGTH">
      <summary>
        <para>Gets the maximum length of the security identifier (186, by default).</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.ShareInstance(System.Security.Principal.SecurityIdentifier,System.String,System.String)">
      <summary>
        <para>Shares the specified SQL Server Express LocalDB instance with other users with the specified shared name.</para>
      </summary>
      <param name="sid">A System.Security.Principal.Security object which is the security identifier (SID) of the instance owner.</param>
      <param name="instancePrivateName">A string that is the private name for the LocalDB instance to be shared.</param>
      <param name="instanceSharedName">A string that is the shared name for the LocalDB instance to be shared.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.StartInstance(System.String,System.String@)">
      <summary>
        <para>Starts the specified SQL Server Express LocalDB instance.</para>
      </summary>
      <param name="instanceName">A string that is the name of the LocalDB instance to be started.</param>
      <param name="connectionString">A string that is the connection string to the LocalDB instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.StartTracing">
      <summary>
        <para>Starts tracing API calls for all the SQL Server Express LocalDB instances that belong to the current system user.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.StopInstance(System.String,DevExpress.Xpo.DB.Helpers.MSSqlLocalDBShutdownFlags,System.Int64)">
      <summary>
        <para>Stops the specified SQL Server Express LocalDB instance from running.</para>
      </summary>
      <param name="instanceName">The string name of the LocalDB instance to be stopped.</param>
      <param name="shutdownFlags">An MSSqlLocalDBShutdownFlags enumeration value that specifies the way to stop the instance.</param>
      <param name="timeout">An integer number that is the number of seconds to wait for the stop operation to complete. If set to 0, the method returns immediately without waiting for the LocalDB instance to stop.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.StopTracing">
      <summary>
        <para>Stops tracing API calls for all the SQL Server Express LocalDB instances that belong to the current system user.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.MSSqlLocalDBApi.UnshareInstance(System.String)">
      <summary>
        <para>Stops the sharing of the specified SQL Server Express LocalDB instance.</para>
      </summary>
      <param name="instanceSharedName">A string that is the shared name of the LocalDB instance that will no longer be shared.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.ICachedDataStoreService">
      <summary>
        <para>Defines a WCF service contract to access data stored in cached data stores (objects implementing the <see cref="T:DevExpress.Xpo.DB.ICachedDataStore"/> interface).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreService.ModifyDataCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Defines a service operation that, when implemented by a class, updates data in a cached data store using specified modification statements and returns the operation result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult"/>&gt; denoting the result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreService.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
      <summary>
        <para>Defines a service operation that, when implemented by a class, informs a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) about specific modified tables.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dirtyTablesNames">An array of table names specifying modified tables.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheResult"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreService.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
      <summary>
        <para>Defines a service operation that, when implemented by a class, synchronizes table update information with a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheResult"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreService.SelectDataCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Defines a service operation that, when implemented by a class, fetches data from a cached data store using specified query statements and returns the operation result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="selects">An array of query statements.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult"/>&gt; object denoting the result of the data fetch.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreService.UpdateSchemaCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
      <summary>
        <para>Defines a service operation that, when implemented by a class, updates a cached data store&#39;s schema according to specified settings.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="tables">An array of tables whose structure should be saved in a cached data store.</param>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created if the table that corresponds to the first item in the tables array doesn&#39;t exist in the cached data store; otherwise, false.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult"/>&gt; denoting the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync">
      <summary>
        <para>Defines a WCF service contract to asynchronously access data stored in cached data stores (objects that implement the <see cref="T:DevExpress.Xpo.DB.ICachedDataStore"/> interface).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync.ModifyDataCachedAsync(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Uses specified modification statements to asynchronously update data in a cached data store.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>A Task that returns the data modification result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync.NotifyDirtyTablesAsync(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
      <summary>
        <para>Asynchronously informs a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) about specific modified tables.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dirtyTablesNames">An array of table names that specify modified tables.</param>
      <returns>A Task that returns the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync.ProcessCookieAsync(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
      <summary>
        <para>Synchronizes table update information asynchronously with a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <returns>A Task that returns the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync.SelectDataCachedAsync(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to asynchronously fetch data from a cached data store.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="selects">An array of query statements.</param>
      <returns>A Task that returns the data fetch result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync.UpdateSchemaCachedAsync(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
      <summary>
        <para>Asynchronously updates a cached data store&#39;s schema according to specified settings.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="tables">An array of tables whose structure is saved to a cached data store.</param>
      <param name="doNotCreateIfFirstTableNotExist">Defines whether to create and update tables if the data store does not contain the tables array&#39;s first item. true, to prevent table creation and schema update; false, to create new tables and update schema.</param>
      <returns>A Task that returns the operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.ICachedDataStoreWarpService">
      <summary>
        <para>Extends the <see cref="T:DevExpress.Xpo.DB.ICachedDataStoreService"/> interface with methods that fetch data from a cached data store and compress the result.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreWarpService.WarpSelectDataCached(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to fetch data from a cached data store and compress the result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="selects">An array of query statements.</param>
      <returns>The data fetch result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.ICachedDataStoreWarpServiceAsync">
      <summary>
        <para>Extends the <see cref="T:DevExpress.Xpo.DB.ICachedDataStoreServiceAsync"/> interface with methods that asynchronously fetch data from a cached data store and compress the result.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICachedDataStoreWarpServiceAsync.WarpSelectDataCachedAsync(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to asynchronously fetch data from a cached data store and compress the result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="selects">An array of query statements.</param>
      <returns>A Task that is the data fetch result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.IDataStoreService">
      <summary>
        <para>Defines a WCF service contract to access data directly via data store providers (objects implementing the <see cref="T:DevExpress.Xpo.DB.IDataStore"/> interface).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreService.Do(System.String,System.Object)">
      <summary>
        <para>Defines a service operation that, when implemented by a class, executes a specified command with specific parameters and returns the operation result.</para>
      </summary>
      <param name="command">A <see cref="T:System.String"/> specifying the command to execute.</param>
      <param name="args">An object specifying the command&#39;s parameters.</param>
      <returns>An OperationResult&lt;<see cref="T:System.Object"/>&gt; denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreService.GetAutoCreateOption">
      <summary>
        <para>Defines a service operation that, when implemented by a class, returns which operations are performed when a data store is accessed for the first time.</para>
      </summary>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/>&gt; denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreService.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Defines a service operation that, when implemented by a class, updates data in a data store using specified modification statements and returns the operation result.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.ModificationResult"/>&gt; denoting the result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreService.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Defines a service operation that, when implemented by a class, fetches data from a data store using specified query statements and returns the operation result.</para>
      </summary>
      <param name="selects">An array of query statements.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.SelectedData"/>&gt; denoting the result of the data fetch.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreService.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>Defines a service operation that, when implemented by a class, updates a data store&#39;s schema according to specified settings and returns the operation result.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the tables array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="tables">An array of tables whose structure should be saved in the data store.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/>&gt; denoting the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.IDataStoreServiceAsync">
      <summary>
        <para>Defines a WCF service contract to asynchronously access data via data store providers (objects that implement the <see cref="T:DevExpress.Xpo.DB.IDataStoreAsync"/> interface).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreServiceAsync.DoAsync(System.String,System.Object)">
      <summary>
        <para>Asynchronously executes a specified command with specific parameters and returns the operation result.</para>
      </summary>
      <param name="command">The command to execute.</param>
      <param name="args">The command&#39;s parameters</param>
      <returns>A Task that returns the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreServiceAsync.GetAutoCreateOptionAsync">
      <summary>
        <para>Asynchronously gets the <see cref="P:DevExpress.Xpo.IDataLayer.AutoCreateOption"/> setting used during the first connection to a data store.</para>
      </summary>
      <returns>A Task that returns the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreServiceAsync.ModifyDataAsync(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Uses specified modification statements to asynchronously update data in a data store.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>A Task that returns the data modification result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreServiceAsync.SelectDataAsync(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to asynchronously fetch data from a data store.</para>
      </summary>
      <param name="selects">An array of query statements.</param>
      <returns>A Task that returns the data fetch result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreServiceAsync.UpdateSchemaAsync(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>Asynchronously updates a data store&#39;s schema according to specified settings.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">Defines whether to create and update tables if the data store does not contain the tables array&#39;s first item. true, to prevent table creation and schema update; false, to create new tables and update schema.</param>
      <param name="tables">An array of tables whose structure is saved to the data store.</param>
      <returns>A Task that returns the update operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.IDataStoreWarpService">
      <summary>
        <para>Extends the <see cref="T:DevExpress.Xpo.DB.IDataStoreService"/> interface with methods that fetch data from a data store and compress the result.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreWarpService.WarpSelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to fetch data from a data store and compress the result.</para>
      </summary>
      <param name="selects">An array of statements that specify data to be saved to the data store.</param>
      <returns>The operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.IDataStoreWarpServiceAsync">
      <summary>
        <para>Extends the <see cref="T:DevExpress.Xpo.DB.IDataStoreServiceAsync"/> interface with methods that fetch data from a data store and compress the result.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreWarpServiceAsync.WarpSelectDataAsync(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to asynchronously fetch data from a data store and compress the result.</para>
      </summary>
      <param name="selects">An array of statements that specify data to be saved to the data store.</param>
      <returns>A Task that returns the operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.InMemoryDataStore">
      <summary>
        <para>Stores persistent objects in memory. Intended for testing environment.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> class and sets the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property to <see cref="F:DevExpress.Xpo.DB.AutoCreateOption.DatabaseAndSchema"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.#ctor(DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> class with the specified settings.</para>
      </summary>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.#ctor(DevExpress.Xpo.DB.AutoCreateOption,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> class with the specified settings.</para>
      </summary>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
      <param name="caseSensitive">true if case-sensitive comparisons should be performed for strings during expression evaluations or sorting; otherwise false.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.#ctor(DevExpress.Xpo.DB.InMemoryDataStore,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> class using the underlying storage of a specific InMemoryDataStore.</para>
      </summary>
      <param name="originalStore">An <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> whose underlying storage the current InMemoryDataStore will use.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.#ctor(System.Data.DataSet,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>This constructor is obsolete.</para>
      </summary>
      <param name="data"></param>
      <param name="autoCreateOption"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.#ctor(System.Data.DataSet,DevExpress.Xpo.DB.AutoCreateOption,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> class.</para>
      </summary>
      <param name="data"></param>
      <param name="autoCreateOption"></param>
      <param name="caseSensitive"></param>
    </member>
    <member name="P:DevExpress.Xpo.DB.InMemoryDataStore.CanCreateSchema">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> object is allowed to create a schema in the associated DataSet.</para>
      </summary>
      <value>true if the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property&#39;s value contains the <see cref="F:DevExpress.Xpo.DB.AutoCreateOption.DatabaseAndSchema"/> or <see cref="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaOnly"/> option.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.InMemoryDataStore.CaseSensitive">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> performs case-sensitive comparisons for strings during expression evaluations or sorting.</para>
      </summary>
      <value>true if string comparisons are case-sensitive; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.CreateProviderFromString(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <param name="autoCreateOption"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.InMemoryDataStore.Data">
      <summary>
        <para>This property is obsolete.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetConnectionString(System.String)">
      <summary>
        <para>Returns a connection string that can be used to create an <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> instance.</para>
      </summary>
      <param name="path">A string value that specifies the name (including the path) of the XML document that includes both schema and data.</param>
      <returns>A string containing the connection string to an InMemoryDataStore instance.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetConnectionString(System.String,System.Boolean)">
      <summary>
        <para>Returns a connection string that can be used to create an <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> instance.</para>
      </summary>
      <param name="path">A string value that specifies the name (including the path) of the XML document that includes both schema and data.</param>
      <param name="readOnly">true if the XML document isn&#39;t allowed to be changed; otherwise, false.</param>
      <returns>A string containing the connection string to an InMemoryDataStore instance.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetConnectionStringInMemory(System.Boolean)">
      <summary>
        <para>Returns a connection string that can be used to create an <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> instance that is not bound to an XML file.</para>
      </summary>
      <param name="caseSensitive">true if string comparisons during expression evaluations or sorting are case-sensitive; otherwise, false.</param>
      <returns>A string containing the connection string to an InMemoryDataStore instance.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetStorageTables(System.String[])">
      <summary>
        <para>Returns information that describes the structures of the specified tables.</para>
      </summary>
      <param name="tables">An array of table names whose information should be retrieved.</param>
      <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structures of the requested tables.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of the available tables in the data store.</para>
      </summary>
      <param name="includeViews">true, to include available database views in the resulting array; otherwise, false.</param>
      <returns>An array of the table names in the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetStoredProcedures">
      <summary>
        <para>Returns an array of stored procedures available within the data store.</para>
      </summary>
      <returns>An array containing available stored procedures.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.GetTableSchema(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.ReadFromInMemoryDataStore(DevExpress.Xpo.DB.InMemoryDataStore)">
      <summary>
        <para>Copies the content from a specified <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/>.</para>
      </summary>
      <param name="dataStore">An <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> object which specifies the source in-memory data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.ReadXml(System.String)">
      <summary>
        <para>Reads the data into the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> from a specific file.</para>
      </summary>
      <param name="fileName">The name of the file to read data from.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.ReadXml(System.Xml.XmlReader)">
      <summary>
        <para>Reads the data into the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> from a specific XmlReader.</para>
      </summary>
      <param name="reader">A System.Xml.XmlReader object to read data from.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.Register">
      <summary>
        <para>Registers the provider for use with XPO.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregate)">
      <summary>
        <para></para>
      </summary>
      <param name="customAggregate"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.RegisterCustomAggregates(System.Collections.Generic.ICollection{DevExpress.Data.Filtering.ICustomAggregate})">
      <summary>
        <para></para>
      </summary>
      <param name="customAggregates"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.RegisterCustomFunctionOperator(DevExpress.Data.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Registers a custom function operator.</para>
      </summary>
      <param name="customFunction">An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object which is a custom function operator to be registered.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.RegisterCustomFunctionOperators(System.Collections.Generic.ICollection{DevExpress.Data.Filtering.ICustomFunctionOperator})">
      <summary>
        <para>Registers custom function operators.</para>
      </summary>
      <param name="customFunctions">An ICollection&lt;<see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/>&gt; object which specifies the custom function operators to be registered.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.InMemoryDataStore.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access to the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/>.</para>
      </summary>
      <value>An object that can be used to synchronize access to the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/>.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.WriteXml(System.String)">
      <summary>
        <para>Writes the data contained in the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> to the specified file.</para>
      </summary>
      <param name="fileName">The name of the file to which to write data.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InMemoryDataStore.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <para>Writes the data contained in the <see cref="T:DevExpress.Xpo.DB.InMemoryDataStore"/> to the specified XmlWriter.</para>
      </summary>
      <param name="writer">A System.Xml.XmlWriter object to which to write data.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.InMemoryDataStore.XpoProviderTypeString">
      <summary>
        <para>Gets the name of the current connection provider. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.ISerializableObjectLayerService">
      <summary>
        <para>Defines a WCF service contract to access data via <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="objectsForDelete">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on objects marked for deletion.</param>
      <param name="objectsForSave">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on objects marked for saving.</param>
      <param name="lockingOption">A <see cref="T:DevExpress.Xpo.LockingOption"/> enumeration value specifying whether check for optimistic locking is made.</param>
      <returns>An OperationResult&lt;<see cref="T:DevExpress.Xpo.CommitObjectStubsResult"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.CreateObjectType(System.String,System.String)">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.CreateObjectType(System.String,System.String)"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> value which specifies the assembly name to be assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.AssemblyName"/> property.</param>
      <param name="typeName">A <see cref="T:System.String"/> value which specifies the type name to be assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.TypeName"/> property.</param>
      <returns>An OperationResult&lt;<see cref="T:System.Object"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.GetCanLoadCollectionObjects">
      <summary>
        <para>When implemented by a class, obtains the value from an object layer&#39;s <see cref="P:DevExpress.Xpo.ISerializableObjectLayer.CanLoadCollectionObjects"/> property implementation and returns the operation result.</para>
      </summary>
      <returns>An OperationResult&lt;<see cref="T:System.Boolean"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.GetObjectStubsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[DevExpress.Xpo.XPObjectStubCollection&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.GetParentObjectsToDelete">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayerEx.GetParentObjectsToDelete"/> method implementation and returns the operation result.</para>
      </summary>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[DevExpress.Xpo.XPObjectStubCollection&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.GetParentObjectsToSave">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayerEx.GetParentObjectsToSave"/> method implementation and returns the operation result.</para>
      </summary>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[DevExpress.Xpo.XPObjectStubCollection&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.GetParentTouchedClassInfos">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayerEx.GetParentTouchedClassInfos"/> method implementation and returns the operation result.</para>
      </summary>
      <returns>An OperationResult&lt;<see cref="T:System.String"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayerEx.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> instance identifying an object layer session&#39;s object to test.</param>
      <returns>An OperationResult&lt;<see cref="T:System.Boolean"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayerEx.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> instance identifying an object layer session&#39;s object to test.</param>
      <returns>An OperationResult&lt;<see cref="T:System.Boolean"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="refPropertyName">A <see cref="T:System.String"/> value specifying the ownerObject&#39;s property that references a collection property.</param>
      <param name="ownerObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> specifying the object that owns the collection property.</param>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[DevExpress.Xpo.XPObjectStubCollection&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub,System.String[])">
      <summary>
        <para>When implemented by a class, executes the corresponding  overloaded method implementation of an object layer and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">An array of strings specifying delayed the theObject&#39;s properties whose values are loaded.</param>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[System.Object&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.LoadDelayedProperty(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,System.String)">
      <summary>
        <para>When implemented by a class, executes the corresponding  overloaded method implementation of an object layer and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="objects">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on persistent objects containing the delayed property specified by the property.</param>
      <param name="property">A <see cref="T:System.String"/> value specifying a delayed property whose values are loaded.</param>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[System.Object&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectStubsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>An OperationResult&lt;DevExpress.Xpo.SerializableObjectLayerResult`1[[DevExpress.Xpo.XPObjectStubCollection&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.Purge">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.Purge"/> method implementation and returns the operation result.</para>
      </summary>
      <returns>An OperationResult&lt;DevExpress.Xpo.Helpers.PurgeResult&gt; object denoting the operation result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISerializableObjectLayerService.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>When implemented by a class, executes an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)"/> method implementation and returns the operation result.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectStubsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>An OperationResult&lt;<see cref="T:System.Object"/>&gt; object denoting the operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.MSSqlConnectionProvider">
      <summary>
        <para>Implements data-aware operations for working with an MS SQL Server or MS SQL Azure database.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.#ctor(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> class with the specified settings.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.ClearDatabase(System.Data.IDbCommand)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="command"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.CollectTablesToCreate(System.Collections.ICollection)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.ComposeSafeSchemaName(System.String)">
      <summary>
        <para>Returns the valid schema name for the specified table&#39;s name.</para>
      </summary>
      <param name="tableName">A string value that specifies the table&#39;s name for which the valid schema name must be composed.</param>
      <returns>A string value that specifies the valid schema name.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.CreateProviderFromConnection(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connection"></param>
      <param name="autoCreateOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.CreateProviderFromString(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <param name="autoCreateOption"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.EmptyAllTablesInDatabase(System.Data.IDbCommand)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly in your code.</para>
      </summary>
      <param name="command"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatBinary(DevExpress.Data.Filtering.BinaryOperatorType,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="leftOperand"></param>
      <param name="rightOperand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatColumn(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatColumn(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatConstraint(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatDelete(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatFunction(DevExpress.Data.Filtering.FunctionOperatorType,System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatFunction(DevExpress.Xpo.DB.Helpers.ProcessParameter,DevExpress.Data.Filtering.FunctionOperatorType,System.Object[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="processParameter"></param>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatInsert(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="fields"></param>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatInsertDefaultValues(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="selectedPropertiesSql"></param>
      <param name="fromSql"></param>
      <param name="whereSql"></param>
      <param name="orderBySql"></param>
      <param name="groupBySql"></param>
      <param name="havingSql"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatTable(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatTable(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.FormatUpdate(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="sets"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GenerateStoredProcedures(DevExpress.Xpo.DB.DBTable,System.String@)">
      <summary>
        <para>Generates DDL (Data Description Language) code for the Generating Persistent Classes wizard, when mapping persistent classes to MS SQL Server database views with the help of INSTEAD-OF triggers and stored procedures.</para>
      </summary>
      <param name="table"></param>
      <param name="dropLines"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString(System.String,System.Int32,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the SQL server&#39;s name.</param>
      <param name="port">An integer that specifies the server&#39;s port number.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString(System.String,System.Int32,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the SQL server&#39;s name.</param>
      <param name="port">An integer that specifies the server&#39;s port number.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString(System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using Windows Integrated Security.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the SQL server&#39;s name.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString2005CacheRoot(System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using Windows Integrated Security and to enable the SqlDependency feature.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString2005CacheRoot(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using provided login credentials and to enable the SqlDependency feature.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a user password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString2005WithCache(System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using Windows Integrated Security and to enable the SqlDependency feature.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionString2005WithCache(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified MS SQL database using provided login credentials and to enable the SqlDependency feature.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a user password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionStringWithAttach(System.String,System.String,System.Boolean)">
      <summary>
        <para>Returns a connection string to connect to a MS SQL Server database by attaching a specified .mdf database file to a specific server using Windows Integrated Security.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="attachDbFilename">A string specifying a .mdf database file to attach to the server. This value is used to initialize the &quot;AttachDbFilename&quot; field of the connection string.</param>
      <param name="userInstance">true to enable User Instances (required when attaching the attachDbFilename); otherwise, false (when the database specified by the attachDbFilename already exists on the server). For more information about SQL Server Express and User Instances, read the SQL Server 2005 Express Edition User Instances MSDN article.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionStringWithAttach(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Returns a connection string to connect to a MS SQL Server database by attaching a specified .mdf database file to a specific server using specified login credentials.</para>
      </summary>
      <param name="server">A string that specifies the SQL server name.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies the password. This is used to initialize the &quot;Password&quot; field of the connection string.</param>
      <param name="attachDbFilename">A string specifying a .mdf database file to attach to the server. This value is used to initialize the &quot;AttachDbFilename&quot; field of the connection string.</param>
      <param name="userInstance">true to enable User Instances (required when attaching the attachDbFilename); otherwise, false (when the database specified by the attachDbFilename already exists on the server). This value is used to initialize the &quot;User Instance&quot; field of the connection string.For more information about SQL Server Express and User Instances, read the SQL Server 2005 Express Edition User Instances MSDN article.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetConnectionStringWithAttachForLocalDB(System.String,System.String,System.String)">
      <summary>
        <para>Returns the connection string to SQL Server 2012 Express LocalDB for the specified server, database and database file location.</para>
      </summary>
      <param name="server">A string that is the server name.</param>
      <param name="database">A string that is the database name.</param>
      <param name="attachDbFilename">A string that is the path to the MDB file.</param>
      <returns>A string that is the connection string to SQL Server 2012 Express LocalDB for the specified server, database and database file location.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetParameterName(DevExpress.Data.Filtering.OperandValue,System.Int32,System.Boolean@)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="parameter"></param>
      <param name="index"></param>
      <param name="createParameter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <param name="forTableCreate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of the available tables in the data store.</para>
      </summary>
      <param name="includeViews">true, to include available database views in the resulting array; otherwise, false.</param>
      <returns>An array of the table names in the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetStoredProcedures">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="checkIndexes"></param>
      <param name="checkForeignKeys"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.MSSqlConnectionProvider.IsNotForReplication">
      <summary>
        <para>Specifies whether or not the &quot;NOT FOR REPLICATION&quot; option is used in SQL statements that create constraints.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.MSSqlConnectionProvider.MaximumBinarySize">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.MSSqlConnectionProvider.MaximumStringSize">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.MSSqlConnectionProvider.NativeOuterApplySupported">
      <summary>
        <para>Indicates whether the connection provider supports the OUTER APPLY operators.</para>
      </summary>
      <value>true for MS SQL Server version 2005 and later; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.MSSqlConnectionProvider.NativeSkipTakeSupported">
      <summary>
        <para>Indicates whether the connection provider supports the SKIP and TAKE (TOP) operators.</para>
      </summary>
      <value>true for MS SQL Server version 2005 and later; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpo.DB.MSSqlConnectionProvider.ObjectsOwner">
      <summary>
        <para>The default owner of the objects in the MS SQL database. By default &quot;dbo&quot;.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.MSSqlConnectionProvider.Register">
      <summary>
        <para>Registers the provider for use with XPO.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.MSSqlConnectionProvider.XpoProviderTypeString">
      <summary>
        <para>Gets the name of the current connection provider. This name is used internally when generating a connection string via the  method.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.OleDBConnectionProvider">
      <summary>
        <para>Implements the base functionality for providers that connect to OLE DB data sources.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.OleDBConnectionProvider.#ctor(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.OleDBConnectionProvider"/> class with the specified settings.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when the data store is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.OleDBConnectionProvider.CollectTablesToCreate(System.Collections.ICollection)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.OleDBConnectionProvider.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="checkIndexes"></param>
      <param name="checkForeignKeys"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.OleDBConnectionProvider.SortColumnsAlphabetically">
      <summary>
        <para>Specifies how to order columns retrieved via the GetStorageTables and <see cref="M:DevExpress.Xpo.DB.OleDBConnectionProvider.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)"/> methods. By default, this field is set to true, and the columns are listed alphabetically. If the field is set to false, the columns are returned as they appear in the database.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.OperationResult">
      <summary>
        <para>The result of an operation performed by the <see cref="T:DevExpress.Xpo.DB.DataStoreService"/>, <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>, or <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult.#ctor(DevExpress.Xpo.DB.ServiceException,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="errorType"></param>
      <param name="error"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult.DeserializeSecurityException(System.String)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.OperationResult.Error">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.OperationResult.ErrorType">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult.ExecuteClient``2(DevExpress.Xpo.DB.OperationResultChannelPredicate{``0},``1@)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="predicate"></param>
      <param name="channel"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult.ExecuteClientAsync``1(DevExpress.Xpo.DB.OperationResultChannelPredicateAsync{``0},System.Action)">
      <summary>
        <para></para>
      </summary>
      <param name="predicate"></param>
      <param name="resetChannelAction"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.OperationResult.ExecuteClientMaxRetryCount">
      <summary>
        <para>Specifies the maximum number of retries to be made when the execution of an operation fails. The default value is 3.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult.SerializeSecurityException(DevExpress.Xpo.Exceptions.ObjectLayerSecurityException)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="securityException"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.OperationResult`1">
      <summary>
        <para>The result of an operation performed by the <see cref="T:DevExpress.Xpo.DB.DataStoreService"/>, <see cref="T:DevExpress.Xpo.DB.CachedDataStoreService"/>, or <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult`1.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult`1.#ctor(`0)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="result"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult`1.#ctor(DevExpress.Xpo.DB.ServiceException,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="errorType"></param>
      <param name="error"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.OperationResult`1.HandleError">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.OperationResult`1.Result">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.PostgreSqlConnectionProvider">
      <summary>
        <para>Implements data-aware operations for working with a PostgreSQL database.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.#ctor(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.PostgreSqlConnectionProvider"/> class with the specified settings.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when storage is accessed for the first time. This parameter is used to initialize the <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.ClearDatabase(System.Data.IDbCommand)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="command"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.CollectTablesToCreate(System.Collections.ICollection)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.CreateConnection(System.String)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be called directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.CreateProviderFromConnection(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="connection"></param>
      <param name="autoCreateOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.CreateProviderFromString(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="connectionString"></param>
      <param name="autoCreateOption"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.CreateTable(DevExpress.Xpo.DB.DBTable)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatBinary(DevExpress.Data.Filtering.BinaryOperatorType,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="leftOperand"></param>
      <param name="rightOperand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatColumn(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatColumn(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="columnName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatConstraint(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatDelete(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatFunction(DevExpress.Data.Filtering.FunctionOperatorType,System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatFunction(DevExpress.Xpo.DB.Helpers.ProcessParameter,DevExpress.Data.Filtering.FunctionOperatorType,System.Object[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="processParameter"></param>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatInsert(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="fields"></param>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatInsertDefaultValues(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatOrder(System.String,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="sortProperty"></param>
      <param name="direction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="selectedPropertiesSql"></param>
      <param name="fromSql"></param>
      <param name="whereSql"></param>
      <param name="orderBySql"></param>
      <param name="groupBySql"></param>
      <param name="havingSql"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatTable(System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatTable(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.FormatUpdate(System.String,System.String,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableName"></param>
      <param name="sets"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetConnectionString(System.String,System.Int32,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified PostgreSQL database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the server&#39;s name.</param>
      <param name="port">An integer that specifies the server&#39;s port number.</param>
      <param name="userId">A string that specifies a password.</param>
      <param name="password">A string that specifies the database name.</param>
      <param name="database">A string that specifies the database&#39;s character set.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetConnectionString(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a connection string used to open a specified PostgreSQL database using provided login credentials.</para>
      </summary>
      <param name="server">A string that specifies the server&#39;s name.</param>
      <param name="userId">A string that specifies a user name.</param>
      <param name="password">A string that specifies a password.</param>
      <param name="database">A string that specifies the database name.</param>
      <returns>A connection string.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetParameterName(DevExpress.Data.Filtering.OperandValue,System.Int32,System.Boolean@)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="parameter"></param>
      <param name="index"></param>
      <param name="createParameter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn,System.Boolean)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <param name="forTableCreate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of the available tables in the data store.</para>
      </summary>
      <param name="includeViews">true, to include available database views in the resulting array; otherwise, false.</param>
      <returns>An array of the table names in the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetStoredProcedures">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="table"></param>
      <param name="checkIndexes"></param>
      <param name="checkForeignKeys"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GlobalCommandPoolBehavior">
      <summary>
        <para>Specifies the default command pool behavior for all PostgreSqlConnectionProvider instances. The default value is null, which means that the behavior is  ConnectionSession  for PostgreSQL 8.3+ and None for older versions.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.GlobalUseLegacyGuidSupport">
      <summary>
        <para>Specifies the default GUID mapping mode for all PostgreSqlConnectionProvider instances. Set this field to true to map GUIDs to CHAR(36) columns or set it to false to map to the UUID columns (requires Npgsql v3.1.0). To specify the character set for a specific PostgreSqlConnectionProvider instance, use the UseLegacyGuidSupport field instead.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.MaximumStringSize">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.NativeSkipTakeSupported">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.ObjectsOwner">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.Register">
      <summary>
        <para>Registers the provider for use with XPO.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.SetServerVersion(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="versionString"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.UseLegacyGuidSupport">
      <summary>
        <para>Specifies the default GUID mapping mode for the current  PostgreSqlConnectionProvider instance. Set this field to true to map GUIDs to CHAR(36) columns or set it to false to map to the UUID columns (requires Npgsql v3.1.0). When this field is set to null), the GlobalUseLegacyGuidSupport value is used. When both values are null, the UUID columns are used.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.PostgreSqlConnectionProvider.XpoProviderTypeString">
      <summary>
        <para>Gets the name of the current connection provider. This name is used internally when generating a connection string via the  metho</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase">
      <summary>
        <para>The base class for <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> proxies.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.CanLoadCollectionObjects">
      <summary>
        <para>Obtains the value from the <see cref="P:DevExpress.Xpo.SerializableObjectLayer.CanLoadCollectionObjects"/> property of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="objectsForDelete"></param>
      <param name="objectsForSave"></param>
      <param name="lockingOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.CreateObjectType(System.String,System.String)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.CreateObjectType(System.String,System.String)"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="assemblyName"></param>
      <param name="typeName"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.Do(System.String,System.Object)">
      <summary>
        <para>Delegates the call to the corresponding method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="command"></param>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="queries"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.GetParentObjectsToDelete">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetParentObjectsToDelete"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.GetParentObjectsToSave">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetParentObjectsToSave"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.GetParentTouchedClassInfos">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetParentTouchedClassInfos"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="theObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="theObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="refPropertyName"></param>
      <param name="ownerObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub,System.String[])">
      <summary>
        <para>Delegates the call to the corresponding  overloaded method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="theObject"></param>
      <param name="props"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,System.String)">
      <summary>
        <para>Delegates the call to the corresponding  overloaded method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="objects"></param>
      <param name="property"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="queries"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.ObjectLayer">
      <summary>
        <para>Obtains the value from the <see cref="P:DevExpress.Xpo.SerializableObjectLayer.ObjectLayer"/> property of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.Purge">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.Purge"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)"/> method of an object layer instance returned by the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerProxyBase"/>.GetObjectLayer method implementation.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="query"></param>
      <param name="properties"></param>
      <param name="groupProperties"></param>
      <param name="groupCriteria"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.SerializableObjectLayerService">
      <summary>
        <para>The base class for WCF services providing access to data via distributed object access layers (<see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> implementors).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.#ctor(DevExpress.Xpo.ISerializableObjectLayer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/> class with a specified serializable object layer.</para>
      </summary>
      <param name="serializableObjectLayer">An object implementing the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> interface. The specified object is exposed via the <see cref="P:DevExpress.Xpo.DB.SerializableObjectLayerService.SerializableObjectLayer"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="objectsForDelete"></param>
      <param name="objectsForSave"></param>
      <param name="lockingOption"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.CreateObjectType(System.String,System.String)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.CreateObjectType(System.String,System.String)"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="assemblyName"></param>
      <param name="typeName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.GetCanLoadCollectionObjects">
      <summary>
        <para>Delegates the call to the <see cref="P:DevExpress.Xpo.SerializableObjectLayer.CanLoadCollectionObjects"/> property&#39;s getter of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="queries"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.GetParentObjectsToDelete">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetParentObjectsToDelete"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.GetParentObjectsToSave">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetParentObjectsToSave"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.GetParentTouchedClassInfos">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.GetParentTouchedClassInfos"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="theObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="theObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="refPropertyName"></param>
      <param name="ownerObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub,System.String[])">
      <summary>
        <para>Delegates the call to the corresponding  overloaded method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="theObject"></param>
      <param name="props"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.LoadDelayedProperty(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,System.String)">
      <summary>
        <para>Delegates the call to the corresponding  overloaded method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="objects"></param>
      <param name="property"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="queries"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.Purge">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.Purge"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerService.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Delegates the call to the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)"/> method of an object layer instance passed to the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/>&#39;s constructor and returns the operation result.</para>
      </summary>
      <param name="dictionary"></param>
      <param name="query"></param>
      <param name="properties"></param>
      <param name="groupProperties"></param>
      <param name="groupCriteria"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.SerializableObjectLayerService.SerializableObjectLayer">
      <summary>
        <para>Returns a serializable object layer used to initialize the current <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerService"/> instance.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> implementor passed as a parameter to the SerializableObjectLayerService constructor.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.SerializableObjectLayerServiceClient">
      <summary>
        <para>A distributed object access layer (an <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> implementation) for client applications transferring data via WCF.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerServiceClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerServiceClient"/> class with specified settings.</para>
      </summary>
      <param name="binding">A <see cref="T:System.ServiceModel.Channels.Binding"/> object specifying binding elements used for communication between the client and a service.</param>
      <param name="remoteAddress">A <see cref="T:System.ServiceModel.EndpointAddress"/> object specifying a unique network address that the client uses to communicate with a service endpoint.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SerializableObjectLayerServiceClient.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SerializableObjectLayerServiceClient"/> class using the configuration information specified in the client application&#39;s configuration file by confName.</para>
      </summary>
      <param name="configName">The name of the endpoint in the client application&#39;s configuration file.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.ServiceBase">
      <summary>
        <para>The base class for XPO WCF services.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ServiceBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ServiceBase"/> class.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.DB.ServiceBase.GlobalServiceExceptionThrown">
      <summary>
        <para>Occurs when any operation of any <see cref="T:DevExpress.Xpo.DB.ServiceBase"/> instance fails.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.DB.ServiceBase.ServiceExceptionThrown">
      <summary>
        <para>Occurs when any operation of <see cref="T:DevExpress.Xpo.DB.ServiceBase"/> fails.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.ServiceExceptionEventArgs">
      <summary>
        <para>Arguments, passed to the <see cref="E:DevExpress.Xpo.DB.ServiceBase.GlobalServiceExceptionThrown"/> and <see cref="E:DevExpress.Xpo.DB.ServiceBase.ServiceExceptionThrown"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ServiceExceptionEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ServiceExceptionEventArgs"/> class.</para>
      </summary>
      <param name="exception">An exception thrown by the service.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.ServiceExceptionEventArgs.Exception">
      <summary>
        <para>Gets the exception thrown by the service.</para>
      </summary>
      <value>An exception thrown by the service.</value>
    </member>
    <member name="T:DevExpress.Xpo.DbTypeAttribute">
      <summary>
        <para>Specifies the database type of the column that a property is mapped to.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DbTypeAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DbTypeAttribute"/> class.</para>
      </summary>
      <param name="dbColumnTypeName">A <see cref="T:System.String"/> value that specifies the column&#39;s database type. This value is assigned to the <see cref="P:DevExpress.Xpo.DbTypeAttribute.DbColumnTypeName"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DbTypeAttribute.DbColumnTypeName">
      <summary>
        <para>Gets or sets the database type of the column which a property marked with <see cref="T:DevExpress.Xpo.DbTypeAttribute"/> is mapped to.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the column&#39;s database type.</value>
    </member>
    <member name="T:DevExpress.Xpo.DefaultMembersPersistence">
      <summary>
        <para>Lists the values that determine which members are implied as persistent by default.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DefaultMembersPersistence.Default">
      <summary>
        <para>The members are implied to be persistent by default if they are declared as public or have the <see cref="T:DevExpress.Xpo.PersistentAttribute"/> attribute.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DefaultMembersPersistence.OnlyDeclaredAsPersistent">
      <summary>
        <para>The members are implied to be persistent if they have the <see cref="T:DevExpress.Xpo.PersistentAttribute"/> attribute.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DefaultMembersPersistenceAttribute">
      <summary>
        <para>Specifies which members are implied as persistent by default.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DefaultMembersPersistenceAttribute.#ctor(DevExpress.Xpo.DefaultMembersPersistence)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DefaultMembersPersistenceAttribute"/> class.</para>
      </summary>
      <param name="defaultPersistence">A <see cref="T:DevExpress.Xpo.DefaultMembersPersistence"/> enumeration value that specifies which members are implied to be persistent by default. This value is assigned to the <see cref="P:DevExpress.Xpo.DefaultMembersPersistenceAttribute.DefaultMembersPersistence"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DefaultMembersPersistenceAttribute.DefaultMembersPersistence">
      <summary>
        <para>Gets a value that determines which members are persistent by default.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DefaultMembersPersistence"/> enumeration value that specifies which members are implied to be persistent by default.</value>
    </member>
    <member name="T:DevExpress.Xpo.DeferredDeletionAttribute">
      <summary>
        <para>Enables deferred object deletion.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DeferredDeletionAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DeferredDeletionAttribute"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DeferredDeletionAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DeferredDeletionAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.DeferredDeletionAttribute.Enabled"/> property.</para>
      </summary>
      <param name="enabled">true to enable deferred deletion; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.DeferredDeletionAttribute.Enabled"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DeferredDeletionAttribute.Enabled">
      <summary>
        <para>Gets or sets whether deferred object deletion is enabled.</para>
      </summary>
      <value>true to enable deferred object deletion; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.DelayedAttribute">
      <summary>
        <para>Indicates that the property&#39;s value should not be loaded when a persistent object is being loaded. The property will be loaded the first time it is accessed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DelayedAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the  <see cref="T:DevExpress.Xpo.DelayedAttribute"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DelayedAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DelayedAttribute"/> class with a setting indicating whether all or only modified property values are sent for update to a data store.</para>
      </summary>
      <param name="updateModifiedOnly">true if the delayed property&#39;s value is sent to a data store for update only after it has been modified; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.UpdateModifiedOnly"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DelayedAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DelayedAttribute"/> class with the name of the field which stores the delayed property&#39;s value.</para>
      </summary>
      <param name="fieldName">A <see cref="T:System.String"/> value which specifies the name of the field which stores the value of the delayed property. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.FieldName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DelayedAttribute.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DelayedAttribute"/> class with the specified settings.</para>
      </summary>
      <param name="fieldName">A <see cref="T:System.String"/> value which specifies the name of the field which stores the value of the delayed property. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.FieldName"/> property.</param>
      <param name="updateModifiedOnly">true if the delayed property&#39;s value is sent to a data store for update only after it has been modified; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.UpdateModifiedOnly"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DelayedAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DelayedAttribute"/> class with the specified settings.</para>
      </summary>
      <param name="fieldName">A <see cref="T:System.String"/> value which specifies the name of the field which stores the value of the delayed property. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.FieldName"/> property.</param>
      <param name="groupName">A <see cref="T:System.String"/> value that specifies the group&#39;s name. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.GroupName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DelayedAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DelayedAttribute"/> class with the specified settings.</para>
      </summary>
      <param name="fieldName">A <see cref="T:System.String"/> value which specifies the name of the field which stores the value of the delayed property. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.FieldName"/> property.</param>
      <param name="groupName">A <see cref="T:System.String"/> value that specifies the group&#39;s name. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.GroupName"/> property.</param>
      <param name="updateModifiedOnly">true if the delayed property&#39;s value is sent to a data store for update only after it has been modified; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.DelayedAttribute.UpdateModifiedOnly"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DelayedAttribute.FieldName">
      <summary>
        <para>Gets the name of the field which stores the value of the delayed property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the name of the <see cref="T:DevExpress.Xpo.XPDelayedProperty"/> field which stores the value of the delayed property.</value>
    </member>
    <member name="P:DevExpress.Xpo.DelayedAttribute.GroupName">
      <summary>
        <para>Gets the group&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the group&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.DelayedAttribute.UpdateModifiedOnly">
      <summary>
        <para>Gets whether the delayed property stores all or only modified values to a data store.</para>
      </summary>
      <value>true if the delayed property&#39;s value is sent to a data store for update only after it has been modified; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.DisplayNameAttribute">
      <summary>
        <para>Specifies the member&#39;s display name.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DisplayNameAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DisplayNameAttribute"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DisplayNameAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DisplayNameAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.DisplayNameAttribute.DisplayName"/> property.</para>
      </summary>
      <param name="displayName">A <see cref="T:System.String"/> value which specifies the member&#39;s display name. This value is assigned to the <see cref="P:DevExpress.Xpo.DisplayNameAttribute.DisplayName"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DisplayNameAttribute.DisplayName">
      <summary>
        <para>Gets the member&#39;s display name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the member&#39;s display name.</value>
    </member>
    <member name="N:DevExpress.Xpo.Exceptions">
      <summary>
        <para>Contains classes that describe exceptions which may occur when working with data in XPO.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.AssociationElementTypeMissingException">
      <summary>
        <para>An exception that is thrown when the elementType parameter is not specified in the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> attribute.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.AssociationElementTypeMissingException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.AssociationElementTypeMissingException"/> class.</para>
      </summary>
      <param name="propertyName">The name of the collection property which does not have its element type specified by the <see cref="T:DevExpress.Xpo.AssociationAttribute"/>.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.AssociationElementTypeMissingException.PropertyName">
      <summary>
        <para>Gets the name of the collection property that caused the current exception.</para>
      </summary>
      <value>The name of the collection property that caused the current exception.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.AssociationInvalidException">
      <summary>
        <para>An exception that is thrown when a persistent property marked with the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> attribute cannot be used to create a relation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.AssociationInvalidException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.AssociationInvalidException"/> class.</para>
      </summary>
      <param name="message">A string that specifies the error&#39;s description. The description includes the name of the property for which a relation cannot be created.</param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.CannotChangePropertyWhenSessionIsConnectedException">
      <summary>
        <para>An exception that is thrown when the essential properties of the currently connected session are about to be modified.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.CannotChangePropertyWhenSessionIsConnectedException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.CannotChangePropertyWhenSessionIsConnectedException"/> class.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose value cannot be changed while the session is currently connected to a data store.</param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.CannotFindAppropriateConnectionProviderException">
      <summary>
        <para>An exception that is thrown when an appropriate connection provider is not found.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.CannotFindAppropriateConnectionProviderException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.CannotFindAppropriateConnectionProviderException"/> class.</para>
      </summary>
      <param name="connectionString">A connection string.</param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.CannotLoadInvalidTypeException">
      <summary>
        <para>An exception that is thrown when a persistent object cannot be loaded because it&#39;s type is not valid.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.CannotLoadInvalidTypeException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.CannotLoadInvalidTypeException"/> class.</para>
      </summary>
      <param name="typeName">A string that specifies the name of the type.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.CannotLoadInvalidTypeException.TypeName">
      <summary>
        <para>Gets the name of the type that cannot be loaded.</para>
      </summary>
      <value>A string that specifies the name of the type.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.CannotLoadObjectsException">
      <summary>
        <para>An exception that is thrown when attempting to reload an object that is not present in a persistent data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.CannotLoadObjectsException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.CannotLoadObjectsException"/> class with objects which cannot be loaded.</para>
      </summary>
      <param name="objects">A string specifying objects that cannot be loaded.</param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.CannotReloadPurgedObjectException">
      <summary>
        <para>An exception that is thrown when attempting to reload an object that is not present in the persistent data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.CannotReloadPurgedObjectException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.CannotReloadPurgedObjectException"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.CannotResolveClassInfoException">
      <summary>
        <para>An exception that is thrown when the <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> cannot provide <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata information for the class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.CannotResolveClassInfoException.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.CannotResolveClassInfoException"/> class.</para>
      </summary>
      <param name="assemblyName">The name of the assembly.</param>
      <param name="typeName">The name of the type whose <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> cannot be obtained.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.CannotResolveClassInfoException.TypeName">
      <summary>
        <para>Gets the name of the type whose <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> cannot be obtained.</para>
      </summary>
      <value>A string representing the name of the class.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.DifferentObjectsWithSameKeyException">
      <summary>
        <para>An exception that is thrown when two objects within the current session have the same key.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.DifferentObjectsWithSameKeyException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.DifferentObjectsWithSameKeyException"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.DuplicateKeyPropertyException">
      <summary>
        <para>An exception that is thrown when a persistent object has two or more key properties.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.DuplicateKeyPropertyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.DuplicateKeyPropertyException"/> class.</para>
      </summary>
      <param name="className">The name of the persistent class in which the key property is declared twice.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.DuplicateKeyPropertyException.ClassName">
      <summary>
        <para>Gets the name of the persistent class in which the key property is declared twice.</para>
      </summary>
      <value>The name of the persistent class.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.KeyPropertyAbsentException">
      <summary>
        <para>An exception that is thrown when a persistent object doesn&#39;t have a key.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.KeyPropertyAbsentException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.KeyPropertyAbsentException"/> class.</para>
      </summary>
      <param name="className">A string that specifies the class name.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.KeyPropertyAbsentException.ClassName">
      <summary>
        <para>Gets the string that specifies the class name.</para>
      </summary>
      <value>A string that specifies the class name.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.KeysAutogenerationNonSupportedTypeException">
      <summary>
        <para>An exception that is thrown when a key field doesn&#39;t support automatic value generation</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.KeysAutogenerationNonSupportedTypeException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.KeysAutogenerationNonSupportedTypeException"/> class.</para>
      </summary>
      <param name="typeName">A string that specifies the object type name.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.KeysAutogenerationNonSupportedTypeException.TypeName">
      <summary>
        <para>Gets the string that specifies the object type name.</para>
      </summary>
      <value>A string that specifies the object type name.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.NonPersistentReferenceFoundException">
      <summary>
        <para>An exception that is thrown when a persistent reference to a non-persistent class exists.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.NonPersistentReferenceFoundException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.NonPersistentReferenceFoundException"/> class.</para>
      </summary>
      <param name="objectType">The name of the non-persistent object&#39;s type which you are about to reference.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.NonPersistentReferenceFoundException.ObjectType">
      <summary>
        <para>Gets the name of the non-persistent object&#39;s type which you are about to reference.</para>
      </summary>
      <value>The name of the non-persistent object&#39;s type which you are about to reference.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.ObjectCacheException">
      <summary>
        <para>An exception that is thrown when a severe internal error occurs.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.ObjectCacheException.#ctor(System.Object,System.Object,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.ObjectCacheException"/> class.</para>
      </summary>
      <param name="id"></param>
      <param name="theObject">The object that is associated with the exception. This value is assigned to the <see cref="P:DevExpress.Xpo.Exceptions.ObjectCacheException.Object"/> property.</param>
      <param name="oldObject">The old object.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.ObjectCacheException.Object">
      <summary>
        <para>Gets the object which is associated with the exception.</para>
      </summary>
      <value>The object that is associated with the exception.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.PropertyMissingException">
      <summary>
        <para>An exception that is thrown when an invalid property name is specified.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.PropertyMissingException.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.PropertyMissingException"/> class.</para>
      </summary>
      <param name="objectType">The object type&#39;s name.</param>
      <param name="propertyName">The property name.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.PropertyMissingException.ObjectType">
      <summary>
        <para>Gets the object type that doesn&#39;t contain the <see cref="P:DevExpress.Xpo.Exceptions.PropertyMissingException.PropertyName"/> property.</para>
      </summary>
      <value>A string that specifies the object type&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.PropertyMissingException.PropertyName">
      <summary>
        <para>Gets the property name that is missing in the currently processed object type.</para>
      </summary>
      <value>A string that specifies the name of the missing property.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.PropertyTypeMismatchException">
      <summary>
        <para>An exception that is thrown when an association is incorrectly specified.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.PropertyTypeMismatchException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.PropertyTypeMismatchException"/> class.</para>
      </summary>
      <param name="message"></param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException">
      <summary>
        <para>An exception that is thrown when an attribute with the specified name cannot be found for a specific property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException"/> class.</para>
      </summary>
      <param name="propertyName">A string that specifies the property name.</param>
      <param name="attributeName">A string that specifies the name of the missing attribute.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException.AttributeName">
      <summary>
        <para>Gets the name of the attribute that is missing in the metadata.</para>
      </summary>
      <value>The name of the missing attribute.</value>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException.PropertyName">
      <summary>
        <para>Gets the name of the property that is not marked with the specified attribute.</para>
      </summary>
      <value>A string that specifies the property&#39;s name.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.SameTableNameException">
      <summary>
        <para>An exception that is thrown when two persistent classes are mapped to the same table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.SameTableNameException.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.SameTableNameException"/> class.</para>
      </summary>
      <param name="firstClass">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that refers to the first of the two conflicted classes.</param>
      <param name="secondClass">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that refers to the second of the two conflicted classes.</param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.SessionCtorAbsentException">
      <summary>
        <para>An exception that is thrown when a persistent class doesn&#39;t have a constructor with a <see cref="T:DevExpress.Xpo.Session"/> parameter.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.SessionCtorAbsentException.#ctor(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.SessionCtorAbsentException"/> class.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the currently processed object type.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.SessionCtorAbsentException.ObjectType">
      <summary>
        <para>Gets the name of the currently processed object type.</para>
      </summary>
      <value>A string that specifies the name of the object type.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.SessionMixingException">
      <summary>
        <para>An exception that is thrown when a persistent object that belongs to a specific session is used within another session or refers to an object from another session.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.SessionMixingException.#ctor(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.SessionMixingException"/> class.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object.</param>
      <param name="obj">A persistent object which will raise the exception.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.SessionMixingException.Object">
      <summary>
        <para>Gets the persistent object which conflicts with the current session.</para>
      </summary>
      <value>The persistent object which conflicts with the current session.</value>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.SessionMixingException.Session">
      <summary>
        <para>Gets the current <see cref="T:DevExpress.Xpo.Session"/> object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.TransactionSequenceException">
      <summary>
        <para>An exception that is thrown when the sequence of the BeginTransaction, CommitTransaction and RollbackTransaction methods is incorrect.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.TransactionSequenceException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.TransactionSequenceException"/> class.</para>
      </summary>
      <param name="explanation">A string that specifies the description of the exception.</param>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.TypeFieldIsEmptyException">
      <summary>
        <para>An exception that is thrown when an internal error occurs.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.TypeFieldIsEmptyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.TypeFieldIsEmptyException"/> class.</para>
      </summary>
      <param name="baseType"></param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.TypeFieldIsEmptyException.BaseType">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.TypeNotFoundException">
      <summary>
        <para>An exception that is thrown when an object in storage refers to a type that cannot be found.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.TypeNotFoundException.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.TypeNotFoundException"/> class.</para>
      </summary>
      <param name="typeId">An integer that identifies the currently processed object type.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.TypeNotFoundException.TypeId">
      <summary>
        <para>Gets the object type identifier.</para>
      </summary>
      <value>An integer object type identifier.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.UnableToFillRefTypeException">
      <summary>
        <para>An exception that is thrown when an error occurs when building the tree structure of classes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.UnableToFillRefTypeException.#ctor(System.String,System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.UnableToFillRefTypeException"/> class.</para>
      </summary>
      <param name="objectName">A string that specifies the name of the object type that causes the exception.</param>
      <param name="memberName">A string that specifies the object&#39;s property name.</param>
      <param name="innerException">An exception that is the cause of the current exception.</param>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.UnableToFillRefTypeException.MemberName">
      <summary>
        <para>Gets the property name of the currently processed object.</para>
      </summary>
      <value>A string that specifies the property name.</value>
    </member>
    <member name="P:DevExpress.Xpo.Exceptions.UnableToFillRefTypeException.ObjectName">
      <summary>
        <para>Gets the name of the object type that causes the exception.</para>
      </summary>
      <value>A string that specifies the name of the object type that causes the exception.</value>
    </member>
    <member name="T:DevExpress.Xpo.Exceptions.XMLDictionaryException">
      <summary>
        <para>An exception that is thrown when an error occurs whilst object metadata is being loaded from an XML file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Exceptions.XMLDictionaryException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Exceptions.XMLDictionaryException"/> class.</para>
      </summary>
      <param name="message">A string that specifies the error&#39;s description.</param>
    </member>
    <member name="T:DevExpress.Xpo.ExplicitLoadingAttribute">
      <summary>
        <para>Specifies that the information used to retrieve persistent objects that are referenced by the current property, is included in a query used to load this property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitLoadingAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitLoadingAttribute"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitLoadingAttribute.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitLoadingAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.ExplicitLoadingAttribute.Depth"/> property.</para>
      </summary>
      <param name="depth">An integer value that specifies the reference depth of the current class from the root class. This value is assigned to the <see cref="P:DevExpress.Xpo.ExplicitLoadingAttribute.Depth"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.ExplicitLoadingAttribute.Depth">
      <summary>
        <para>Gets or sets the reference depth of the current class from the root class.</para>
      </summary>
      <value>An integer value that specifies the reference depth of the current class from the root class.</value>
    </member>
    <member name="T:DevExpress.Xpo.ExplicitUnitOfWork">
      <summary>
        <para>The &#39;unit of work&#39; that uses long explicit transactions to allow you to simplify the management of object changes and to access modified objects without having to commit the changes beforehand. See Explicit Units of Work.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitUnitOfWork"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.#ctor(DevExpress.Xpo.IDataLayer,System.IDisposable[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitUnitOfWork"/> class with the specified settings.</para>
      </summary>
      <param name="layer">An object implementing the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.DataLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects that implement the <see cref="T:System.IDisposable"/> interface. These objects are automatically disposed of when the explicit unit of work is disconnected.</param>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.#ctor(DevExpress.Xpo.IObjectLayer,System.IDisposable[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitUnitOfWork"/> class with specified settings.</para>
      </summary>
      <param name="layer">An object implementing the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.ObjectLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects that implement the <see cref="T:System.IDisposable"/> interface. These objects are automatically disposed of when the explicit unit of work is disconnected.</param>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.#ctor(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitUnitOfWork"/> class with the specified dictionary.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> descendant that provides metadata on persistent objects in a data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ExplicitUnitOfWork"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created ExplicitUnitOfWork instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.BeginTransaction">
      <summary>
        <para>Marks the starting point of an explicit transaction.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.CommitTransaction">
      <summary>
        <para>Completes an explicit transaction and commits changes made within it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.CommitTransactionAsync(DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Asynchronously completes an explicit transaction and notifies upon completion.</para>
      </summary>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been saved to a data store. Use a callback to store the exception information passed as a parameter, and use this information later to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.CommitTransactionAsync(System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made within a transaction, completes the transaction, and notifies upon completion.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits object changes made within a transaction and completes the transaction.</returns>
    </member>
    <member name="P:DevExpress.Xpo.ExplicitUnitOfWork.InTransaction">
      <summary>
        <para>Indicates whether the explicit unit of work has started an explicit transaction or tracked data modifications.</para>
      </summary>
      <value>true if an explicit transaction is started, or any modifications have been made within a unit of work; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.RollbackTransaction">
      <summary>
        <para>Rolls back an explicit transaction to its starting point, discarding any changes made within it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ExplicitUnitOfWork.RollbackTransactionAsync(System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.FetchOnlyAttribute">
      <summary>
        <para>Applied to persistent properties and fields. When applied, specifies that the target property or field value can be loaded from the database but should not be saved (should not be included in the INSERT and UPDATE SQL statements).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.FetchOnlyAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.FetchOnlyAttribute"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.GetObjectStubsByKeyQuery">
      <summary>
        <para>Contains essential information on a query which retrieves persistent objects by their key values via <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.GetObjectStubsByKeyQuery.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.GetObjectStubsByKeyQuery.#ctor(DevExpress.Xpo.XPClassInfoStub,System.Collections.ICollection)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="idCollection"></param>
    </member>
    <member name="P:DevExpress.Xpo.GetObjectStubsByKeyQuery.ClassInfo">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.GetObjectStubsByKeyQuery.FromObjectQuery(DevExpress.Xpo.ObjectsByKeyQuery,DevExpress.Xpo.XPObjectClassInfoStubCache)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="query"></param>
      <param name="classInfoCache"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.GetObjectStubsByKeyQuery.IdArray">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.GetObjectStubsByKeyQuery.IdCollection">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.GuidGenerationMode">
      <summary>
        <para>Contains values that specify how XPO generates new globally unique identifier values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.GuidGenerationMode.Custom">
      <summary>
        <para>A custom algorithm specified by the <see cref="F:DevExpress.Xpo.XpoDefault.CustomGuidGenerationHandler"/> delegate is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.GuidGenerationMode.FrameworkDefault">
      <summary>
        <para>The Guid.NewGuid method is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.GuidGenerationMode.UuidCreateSequential">
      <summary>
        <para>The UuidCreateSequential function is used.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Xpo.Helpers">
      <summary>
        <para>Contains helper classes for eXpress Persistent Objects.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.Helpers.ISessionProvider">
      <summary>
        <para>The interface which must be implemented by classes that should work with a <see cref="T:DevExpress.Xpo.Session"/> object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Helpers.ISessionProvider.Session">
      <summary>
        <para>When implemented by a class returns the session to which an instance of the current class belongs.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object to which an object of the current class belongs.</value>
    </member>
    <member name="T:DevExpress.Xpo.ICustomAggregateQueryable">
      <summary>
        <para>The interface that must be implemented by classes that provide information on custom aggregate functions to use in LINQ to XPO expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ICustomAggregateQueryable.GetMethodInfo">
      <summary>
        <para>When implemented by a class, returns the metadata of a method associated with a custom aggregate function used in LINQ to XPO expressions.</para>
      </summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo"/> object which identifies the method to be used to evaluate a custom aggregate function, based on specified function parameters.</returns>
    </member>
    <member name="T:DevExpress.Xpo.ICustomCriteriaOperatorQueryable">
      <summary>
        <para>The interface which must be implemented by classes that provide information on custom criteria to use in LINQ to XPO expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ICustomCriteriaOperatorQueryable.GetCriteria(DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>When implemented by a class, returns a <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to a custom function used in LINQ to XPO expressions, based on specified function parameters.</para>
      </summary>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> containing function parameters.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which corresponds to parameters passed as the operands.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ICustomCriteriaOperatorQueryable.GetMethodInfo">
      <summary>
        <para>When implemented by a class, returns the metadata of a method associated with a custom criterion used in LINQ to XPO expressions.</para>
      </summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo"/> object which identifies the method to be used to evaluate a custom function associated with a custom criterion, based on specified function parameters.</returns>
    </member>
    <member name="T:DevExpress.Xpo.ICustomFunctionOperatorQueryable">
      <summary>
        <para>The interface which must be implemented by classes that provide information on custom functions to use in LINQ to XPO expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ICustomFunctionOperatorQueryable.GetMethodInfo">
      <summary>
        <para>When implemented by a class, returns the metadata of a method associated with a custom function used in LINQ to XPO expressions.</para>
      </summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo"/> object which identifies the method to be used to evaluate a custom function, based on specified function parameters.</returns>
    </member>
    <member name="T:DevExpress.Xpo.IDataLayer">
      <summary>
        <para>The interface to which data access layers should conform.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.IDataLayer.AutoCreateOption">
      <summary>
        <para>When implemented by a class, returns which operations are performed when a session is connected to storage.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when a session is connected to storage.</value>
    </member>
    <member name="P:DevExpress.Xpo.IDataLayer.Connection">
      <summary>
        <para>When implemented by a class, returns the connection if it is provided by storage.</para>
      </summary>
      <value>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to storage if the storage allows commands to be created.</value>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayer.CreateCommand">
      <summary>
        <para>When implemented by a class, creates a command if storage allows commands to be created.</para>
      </summary>
      <returns>A <see cref="T:System.Data.IDbCommand"/> command that is executed when connected to storage.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayer.GetDataLayerWideData(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayer.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>When implemented, updates data in a data store using the specified modification statements.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>The result of the data modifications.</returns>
    </member>
    <member name="E:DevExpress.Xpo.IDataLayer.SchemaInit">
      <summary>
        <para>When implemented by a class, this event will occur when the data schema is initialized or updated.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayer.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>When implemented by a class, fetches data from a data store using the specified query statements.</para>
      </summary>
      <param name="selects">An array of statements to obtain data from the data store.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayer.SetDataLayerWideData(System.Object,System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="key"></param>
      <param name="data"></param>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayer.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>When implemented by a class, updates the storage schema according to the specified class descriptions.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in storage.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that specify object metadata for which the schema should be created in storage.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.IDataLayerAsync">
      <summary>
        <para>Declares asynchronous methods for data access layers.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayerAsync.ModifyDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Asynchronously updates data in a data store, according to specified modification statements.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>The data modification result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IDataLayerAsync.SelectDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Asynchronously retrieves data from a data store, according to specified query statements.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="selects">An array of query statements.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="T:DevExpress.Xpo.IdentityMapBehavior">
      <summary>
        <para>Defines how references to instances of persistent objects are stored in a session&#39;s Identity Map.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.IdentityMapBehavior.Default">
      <summary>
        <para>The behavior is determined by XPO. Curently, this is equal to IdentityMapBehavior.Weak.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.IdentityMapBehavior.Strong">
      <summary>
        <para>Direct references to objects are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.IdentityMapBehavior.Weak">
      <summary>
        <para>Weak references are used, which allows the garbage collector to reclaim unused objects.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.IndexedAttribute">
      <summary>
        <para>Indicates that a property or field participates in index creation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IndexedAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.IndexedAttribute"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IndexedAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.IndexedAttribute"/> class with the specified names of additional columns.</para>
      </summary>
      <param name="additionalFields">A string value that specifies the names of additional columns, separated by a semicolon. This value is parsed and assigned to the <see cref="P:DevExpress.Xpo.IndexedAttribute.AdditionalFields"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.IndexedAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.IndexedAttribute"/> class with the specified names of additional columns.</para>
      </summary>
      <param name="additionalField1">A string containing the name of the first additional column.</param>
      <param name="additionalField2">A string containing the name of the second additional column.</param>
    </member>
    <member name="M:DevExpress.Xpo.IndexedAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.IndexedAttribute"/> class with the specified names of additional columns.</para>
      </summary>
      <param name="additionalField1">A string containing the name of the first additional column.</param>
      <param name="additionalField2">A string containing the name of the second additional column.</param>
      <param name="additionalField3">A string containing the name of the third additional column.</param>
    </member>
    <member name="M:DevExpress.Xpo.IndexedAttribute.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.IndexedAttribute"/> class with the specified names of additional columns.</para>
      </summary>
      <param name="additionalFields">An array of <see cref="T:System.String"/> values that specify the names of additional columns. This value is assigned to the <see cref="P:DevExpress.Xpo.IndexedAttribute.AdditionalFields"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.IndexedAttribute.AdditionalFields">
      <summary>
        <para>Gets the names of additional columns that participate in index creation.</para>
      </summary>
      <value>A collection of string values that specify the names of additional columns.</value>
    </member>
    <member name="P:DevExpress.Xpo.IndexedAttribute.Name">
      <summary>
        <para>Gets or sets the name of the index.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the index.</value>
    </member>
    <member name="P:DevExpress.Xpo.IndexedAttribute.Unique">
      <summary>
        <para>Gets or sets whether the index created by a property or field is a unique one.</para>
      </summary>
      <value>true if the index must be unique (no two persistent objects are permitted to have the same index value); otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.IndicesAttribute">
      <summary>
        <para>Specifies the properties that participate in creation of non-unique database indices.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IndicesAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of <see cref="T:DevExpress.Xpo.IndicesAttribute"/> without specifying any indices.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IndicesAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of <see cref="T:DevExpress.Xpo.IndicesAttribute"/>, and specifies the properties participating in the creation of a database index.</para>
      </summary>
      <param name="index">A string containing a list of the properties participating in the creation of a database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.IndicesAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of <see cref="T:DevExpress.Xpo.IndicesAttribute"/>, and specifies the properties participating in the creation of two database indices.</para>
      </summary>
      <param name="index1">A string containing a list of the properties participating in the creation of the first database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
      <param name="index2">A string containing a list of the properties participating in the creation of the second database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.IndicesAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of <see cref="T:DevExpress.Xpo.IndicesAttribute"/>, and specifies the properties participating in the creation of three database indices.</para>
      </summary>
      <param name="index1">A string containing a list of the properties participating in the creation of the first database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
      <param name="index2">A string containing a list of the properties participating in the creation of the second database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
      <param name="index3">A string containing a list of the properties participating in the creation of the third database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.IndicesAttribute.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of <see cref="T:DevExpress.Xpo.IndicesAttribute"/>, and specifies the properties participating in the creation of several database indices.</para>
      </summary>
      <param name="indices">Zero or more strings, each of which contains a list of the properties participating in the creation of a database index, separated by a semicolon. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.IndicesAttribute.Indices"/> collection.</param>
    </member>
    <member name="P:DevExpress.Xpo.IndicesAttribute.Indices">
      <summary>
        <para>Specifies the properties participating in the creation of non-unique database indices.</para>
      </summary>
      <value>An IList&lt;StringCollection&gt; collection of strings, each of which contains a list of the properties participating in the creation of a database index, separated by a semicolon.</value>
    </member>
    <member name="T:DevExpress.Xpo.IObjectLayer">
      <summary>
        <para>The interface to which object access layers should conform.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.IObjectLayer.CanLoadCollectionObjects">
      <summary>
        <para>When implemented by a class, indicates if an object layer can call the <see cref="M:DevExpress.Xpo.IObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method to load collection properties.</para>
      </summary>
      <value>true if collections can be loaded via an object layer&#39;s <see cref="M:DevExpress.Xpo.IObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method call; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.CommitChanges(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
        <para>When implemented by a class, commits object changes made in a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>When implemented by a class, asynchronously commits object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been committed. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.CreateObjectType(DevExpress.Xpo.XPObjectType)">
      <summary>
        <para>When implemented by a class, creates an <see cref="T:DevExpress.Xpo.XPObjectType"/> record.</para>
      </summary>
      <param name="objectType">An <see cref="T:DevExpress.Xpo.XPObjectType"/> object specifying a valid persistent type.</param>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.GetObjectLayerWideObjectTypes">
      <summary>
        <para>When implemented by a class, returns a Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt; specifying the correspondence of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects to <see cref="T:DevExpress.Xpo.XPObjectType"/> records.</para>
      </summary>
      <returns>A Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt;, providing a collection of complementary <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>-<see cref="T:DevExpress.Xpo.XPObjectType"/> pairs.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.GetObjectsByKey(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[])">
      <summary>
        <para>When implemented by a class, returns persistent objects from a specified session using queries based on specified object types and key values.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>An array of persistent object collections retrieved for query data passed as the queries parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.GetStaticCache(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="info"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.IsStaticType(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)">
      <summary>
        <para>When implemented by a class, loads a collection property using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load collection objects.</param>
      <param name="refProperty">The ownerObject&#39;s property that references a collection property.</param>
      <param name="ownerObject">The object that owns the collection property.</param>
      <returns>An array of collection objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.LoadObjects(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[])">
      <summary>
        <para>When implemented by a class, loads persistent objects using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>An array of object collections that correspond to the queries.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>When implemented by a class, asynchronously loads persistent objects using specified settings and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the objects have been loaded. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.Purge">
      <summary>
        <para>When implemented by a class, removes all objects marked for deletion.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.RegisterStaticTypes(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.SelectData(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>When implemented by a class, retrieves object data from a session using specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.AsyncSelectDataCallback)">
      <summary>
        <para>When implemented by a class, asynchronously retrieves object data from a session using specified query parameters and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the object data have been retrieved. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayer.SetObjectLayerWideObjectTypes(System.Collections.Generic.Dictionary{DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.XPObjectType})">
      <summary>
        <para>When implemented by a class, designates a Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt; specifying the correspondence of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects to <see cref="T:DevExpress.Xpo.XPObjectType"/> records.</para>
      </summary>
      <param name="loadedTypes">A Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt;, providing a collection of complementary <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>-<see cref="T:DevExpress.Xpo.XPObjectType"/> pairs.</param>
    </member>
    <member name="T:DevExpress.Xpo.IObjectLayerAsync">
      <summary>
        <para>Declares asynchronous methods for an object access layer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerAsync.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits specified object changes.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerAsync.GetObjectsByKeyAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerAsync.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects that contain the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property that accepts the data the LoadDelayedPropertiesAsync method loads.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerAsync.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object that contains delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object that specifies member paths for delayed properties where the LoadDelayedPropertiesAsync method loads data from a session.</param>
      <param name="cancellationToken">A CancellationToken object that delivers cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerAsync.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Loads persistent objects asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerAsync.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to select data.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays match specified query parameters.</returns>
    </member>
    <member name="T:DevExpress.Xpo.IObjectLayerEx">
      <summary>
        <para>Defines members providing backward compatibility for sessions that directly accessed corresponding <see cref="T:DevExpress.Xpo.IDataLayer"/> members in previous XPO versions.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.IObjectLayerEx.AutoCreateOption">
      <summary>
        <para>When implemented by a class, returns an <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value associated with an object layer.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to a data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.IObjectLayerEx.Connection">
      <summary>
        <para>When implemented by a class, provides access to a <see cref="T:System.Data.IDbConnection"/> object that is used to access a database.</para>
      </summary>
      <value>An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.</value>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerEx.LoadDelayedProperties(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>When implemented by a class, loads data to a specific property marked for delayed loading in specified objects.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects containing the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property whose values are loaded.</param>
      <returns>An DevExpress.Xpo.Helpers.ObjectDictionary`1&lt;<see cref="T:System.Object"/>,&gt; of loaded property values that correspond to the objects list elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerEx.LoadDelayedProperties(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection)">
      <summary>
        <para>When implemented by a class, loads data to specific properties marked for delayed loading in a specified object.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object containing member paths of delayed properties whose values are loaded.</param>
      <returns>An array of loaded property values that correspond to the props collection elements.</returns>
    </member>
    <member name="E:DevExpress.Xpo.IObjectLayerEx.SchemaInit">
      <summary>
        <para>When implemented by a class, this event will occur when a data store&#39;s schema is initialized or updated.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerEx.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>When implemented by a class, updates a data store&#39;s schema according to the class descriptions of the specified types.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects specifying the types of objects for which schema should be created in the data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> enumeration value which specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.IObjectLayerOnSession">
      <summary>
        <para>Defines methods for object access layers created for nested units of work and units of work (or sessions) created in client applications based on <see cref="T:DevExpress.Xpo.ISerializableObjectLayerEx"/> implementations.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerOnSession.GetParentObjectsToDelete(DevExpress.Xpo.Session)">
      <summary>
        <para>When implemented by a class, returns a collection of objects marked for deletion in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which objects marked for deletion are loaded.</param>
      <returns>A collection of objects loaded to the session from the immediate parent session. Collection elements match objects marked for deletion in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerOnSession.GetParentObjectsToSave(DevExpress.Xpo.Session)">
      <summary>
        <para>When implemented by a class, returns a collection of objects marked for saving in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which objects marked for saving are loaded.</param>
      <returns>A collection of objects loaded to the session from the immediate parent session. Collection elements match objects marked for saving in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerOnSession.GetParentTouchedClassInfos(DevExpress.Xpo.Session)">
      <summary>
        <para>When implemented by a class, returns the metadata of objects modified in parent sessions relative to a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session whose immediate parent session starts the search for modified objects up the nesting session hierarchy.</param>
      <returns>A collection of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects identifying objects modified in parent sessions relative to the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerOnSession.IsParentObjectToDelete(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>When implemented by a class, indicates if a specified object corresponds to a an object marked for deletion in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session which contains theObject.</param>
      <param name="theObject">The session&#39;s object to test.</param>
      <returns>true if theObject corresponds to one of the objects marked for deletion in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IObjectLayerOnSession.IsParentObjectToSave(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>When implemented by a class, indicates if a specified object corresponds to a an object marked for saving in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session which contains theObject.</param>
      <param name="theObject">The session&#39;s object to test.</param>
      <returns>true if theObject corresponds to one of the objects marked for saving in parent sessions; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Xpo.ISerializableObjectLayer">
      <summary>
        <para>Defines essential members for object access layers created for units of work (or sessions) in distributed applications.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.ISerializableObjectLayer.CanLoadCollectionObjects">
      <summary>
        <para>When implemented by a class, indicates if an object layer can call the <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method to load collection properties.</para>
      </summary>
      <value>true if collections can be loaded via an object layer&#39;s <see cref="M:DevExpress.Xpo.ISerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method call; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)">
      <summary>
        <para>When implemented by a class, commits changes made to specified objects and returns information on modified objects.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="objectsForDelete">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on objects marked for deletion.</param>
      <param name="objectsForSave">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on objects marked for saving.</param>
      <param name="lockingOption">A <see cref="T:DevExpress.Xpo.LockingOption"/> enumeration value specifying whether check for optimistic locking is made.</param>
      <returns>An array of CommitObjectStubsResult objects containing information on modified objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.CreateObjectType(System.String,System.String)">
      <summary>
        <para>When implemented by a class, creates an <see cref="T:DevExpress.Xpo.XPObjectType"/> record.</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> value which specifies the assembly name to be assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.AssemblyName"/> property.</param>
      <param name="typeName">A <see cref="T:System.String"/> value which specifies the type name to be assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.TypeName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])">
      <summary>
        <para>When implemented by a class, returns information on persistent objects retrieved from a data store using queries based on specified object types and key values.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.GetObjectStubsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> objects containing information on retrieved objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>When implemented by a class, loads a collection property using specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="refPropertyName">A <see cref="T:System.String"/> value specifying the ownerObject&#39;s property that references a collection property.</param>
      <param name="ownerObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> specifying the object that owns the collection property.</param>
      <returns>A DevExpress.Xpo.SerializableObjectLayerResult`1&lt;<see cref="T:DevExpress.Xpo.XPObjectStubCollection"/>,&gt; object which contains information on collection objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])">
      <summary>
        <para>When implemented by a class, loads persistent objects using specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectStubsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object collections corresponding to the queries.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.Purge">
      <summary>
        <para>When implemented by a class, removes all objects marked for deletion.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayer.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>When implemented by a class, retrieves object data from a session using specified query parameters.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectStubsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array whose elements are property values corresponding to the properties of objects retrieved from the associated session.</returns>
    </member>
    <member name="T:DevExpress.Xpo.ISerializableObjectLayerEx">
      <summary>
        <para>Defines additional members for object access layers created for units of work (or sessions) in distributed applications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.GetParentObjectsToDelete">
      <summary>
        <para>When implemented by a class, returns information on persistent objects marked for deletion in parent sessions.</para>
      </summary>
      <returns>A SerializableObjectLayerResult instance that exposes an <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object containing information on persistent objects marked for deletion in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.GetParentObjectsToSave">
      <summary>
        <para>When implemented by a class, returns information on persistent objects marked for saving in parent sessions.</para>
      </summary>
      <returns>A SerializableObjectLayerResult instance that exposes an <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object containing information on persistent objects loaded from the immediate parent session. <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> elements match objects marked for saving in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.GetParentTouchedClassInfos">
      <summary>
        <para>When implemented by a class, returns metadata information on persistent objects modified in parent sessions.</para>
      </summary>
      <returns>An array of strings that can be used to identify metadata information for objects modified in parent sessions relative to an object layer&#39;s session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>When implemented by a class, indicates if a specified object corresponds to a an object marked for deletion in parent sessions.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> instance identifying an object layer session&#39;s object to test.</param>
      <returns>true if the object identified by the theObject corresponds to one of the objects marked for deletion in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>When implemented by a class, indicates if a specified object corresponds to a an object marked for saving in parent sessions.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> instance identifying an object layer session&#39;s object to test.</param>
      <returns>true if the object identified by the theObject corresponds to one of the objects marked for saving in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub,System.String[])">
      <summary>
        <para>When implemented by a class, loads data to specific properties marked for delayed loading in a specified object.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">An array of strings specifying the delayed theObject&#39;s properties whose values are loaded.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of loaded property values corresponding to the props array elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ISerializableObjectLayerEx.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,System.String)">
      <summary>
        <para>When implemented by a class, loads data to a specific property marked for delayed loading in specified objects.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="objects">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on persistent objects containing the delayed property specified by the property.</param>
      <param name="property">A <see cref="T:System.String"/> value specifying a delayed property whose values are loaded.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of loaded property values corresponding to the objects collection elements.</returns>
    </member>
    <member name="T:DevExpress.Xpo.IXPModificationsStore">
      <summary>
        <para>Implemented by classes that store information about the modified properties.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPModificationsStore.ClearModifications">
      <summary>
        <para>Clears modifications in the current <see cref="T:DevExpress.Xpo.IXPModificationsStore"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPModificationsStore.GetPropertyModified(DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Checks whether or not the member is modified.</para>
      </summary>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that provides access to member metadata.</param>
      <returns>true, if the member is modified; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IXPModificationsStore.GetPropertyOldValue(DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Returns the old value of the member.</para>
      </summary>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that provides access to member metadata.</param>
      <returns>An object which is the old value of the member.</returns>
    </member>
    <member name="M:DevExpress.Xpo.IXPModificationsStore.HasModifications">
      <summary>
        <para>Checks if there are modifications in the current <see cref="T:DevExpress.Xpo.IXPModificationsStore"/>.</para>
      </summary>
      <returns>true, if there are modifications; otherwise - false;</returns>
    </member>
    <member name="M:DevExpress.Xpo.IXPModificationsStore.ResetPropertyModified(DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Resets the member&#39;s modification.</para>
      </summary>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that provides access to member metadata.</param>
    </member>
    <member name="M:DevExpress.Xpo.IXPModificationsStore.SetPropertyModified(DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)">
      <summary>
        <para>Marks the member as modified.</para>
      </summary>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that provides access to member metadata.</param>
      <param name="oldValue">An object that is the member&#39;s old value.</param>
    </member>
    <member name="T:DevExpress.Xpo.IXPObject">
      <summary>
        <para>The interface that provides the essential functionality for persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPObject.OnDeleted">
      <summary>
        <para>When implemented by a class, specifies the actions that should be performed after an object has been deleted from a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPObject.OnDeleting">
      <summary>
        <para>When implemented by a class, specifies the actions that should be performed when an object is about to be deleted from a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPObject.OnLoaded">
      <summary>
        <para>When implemented by a class, specifies the actions that should be performed after an object has been loaded from a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPObject.OnLoading">
      <summary>
        <para>When implemented by a class, specifies the actions that should be performed before loading an object from a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPObject.OnSaved">
      <summary>
        <para>When implemented by a class, specifies the actions that should be performed after an object has been saved to a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.IXPObject.OnSaving">
      <summary>
        <para>When implemented by a class, specifies the actions that should be performed before saving the object&#39;s state to a data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.IXPSimpleObject">
      <summary>
        <para>The interface that provides the basic functionality required by persistent objects.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.KeyAttribute">
      <summary>
        <para>Indicates that a property or a field is a key.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.KeyAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.KeyAttribute"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.KeyAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.KeyAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.KeyAttribute.AutoGenerate"/> property.</para>
      </summary>
      <param name="autoGenerate">true to generate the key automatically; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.KeyAttribute.AutoGenerate"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.KeyAttribute.AutoGenerate">
      <summary>
        <para>Gets or sets whether the key is generated automatically.</para>
      </summary>
      <value>true to generate the key automatically; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.LoadDataMemberOrderItem">
      <summary>
        <para>Contains mapping information for class members and result set columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.LoadDataMemberOrderItem.#ctor(System.Int32,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> class with the specified settings.</para>
      </summary>
      <param name="indexInResultSet">An integer value mapping a member passed as the classMemberName parameter to the corresponding column in a result set. This value is assigned to the <see cref="F:DevExpress.Xpo.LoadDataMemberOrderItem.IndexInResultSet"/> property.</param>
      <param name="classMemberName">The name of the member that is mapped to a result set column. This value is assigned to the <see cref="F:DevExpress.Xpo.LoadDataMemberOrderItem.ClassMemberName"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.LoadDataMemberOrderItem.ClassMemberName">
      <summary>
        <para>Gets or sets the name of the mapped member.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.LoadDataMemberOrderItem.IndexInResultSet">
      <summary>
        <para>Gets or sets the zero-based position of the mapped column in a result set.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.LockingOption">
      <summary>
        <para>Lists the values that control the persistent object&#39;s locking during a session.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.LockingOption.None">
      <summary>
        <para>A session doesn&#39;t lock objects.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.LockingOption.Optimistic">
      <summary>
        <para>A session locks objects using optimistic locking.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.MapInheritanceAttribute">
      <summary>
        <para>Specifies the type of object-relational inheritance mapping for the class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.MapInheritanceAttribute.#ctor(DevExpress.Xpo.MapInheritanceType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.MapInheritanceAttribute"/> class.</para>
      </summary>
      <param name="mapType">A <see cref="T:DevExpress.Xpo.MapInheritanceType"/> enumeration value which specifies the table that persistent properties and fields are saved to. This value is assigned to the <see cref="P:DevExpress.Xpo.MapInheritanceAttribute.MapType"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.MapInheritanceAttribute.MapType">
      <summary>
        <para>Gets a value which specifies the table that persistent properties and fields are saved to.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.MapInheritanceType"/> enumeration value that specifies which table persistent properties and fields are saved to.</value>
    </member>
    <member name="T:DevExpress.Xpo.MapInheritanceType">
      <summary>
        <para>Lists the values that specify which table persistent properties and fields are saved to.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.MapInheritanceType.OwnTable">
      <summary>
        <para>Persistent properties and fields are stored in a separate table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.MapInheritanceType.ParentTable">
      <summary>
        <para>The persistent properties and the fields of a class are stored in the same table as the properties of its parent class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute">
      <summary>
        <para>Specifies whether a property or class is visible at design time.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute.IsVisible"/> property.</para>
      </summary>
      <param name="isVisible">true if the property or class is visible at design time; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute.IsVisible"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.MemberDesignTimeVisibilityAttribute.IsVisible">
      <summary>
        <para>Gets whether a property or class is visible at design time.</para>
      </summary>
      <value>true if the property or class is visible at design time; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.MergeCollisionBehaviorAttribute">
      <summary>
        <para>Applied to persistent properties. Specifies the merge collision behavior for the target property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.MergeCollisionBehaviorAttribute.#ctor(DevExpress.Xpo.OptimisticLockingReadMergeBehavior)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.MergeCollisionBehaviorAttribute"/> class.</para>
      </summary>
      <param name="behavior">An <see cref="T:DevExpress.Xpo.OptimisticLockingReadMergeBehavior"/> enumeration value specifying the merge collision behavior for the target property.</param>
    </member>
    <member name="P:DevExpress.Xpo.MergeCollisionBehaviorAttribute.Behavior">
      <summary>
        <para>Specifies the merge collision behavior for the <see cref="T:DevExpress.Xpo.MergeCollisionBehaviorAttribute"/> attribute&#39;s target property.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingReadMergeBehavior"/> enumeration value specifying the merge collision behavior for the target property.</value>
    </member>
    <member name="N:DevExpress.Xpo.Metadata">
      <summary>
        <para>Contains classes that support working with metadata in XPO.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ImageValueConverter">
      <summary>
        <para>A Value Converter which can be used to convert <see cref="T:System.Drawing.Image"/> objects to an array of bytes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ImageValueConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ImageValueConverter"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ImageValueConverter.ConvertFromStorageType(System.Object)">
      <summary>
        <para>Converts a stored value from the <see cref="P:DevExpress.Xpo.Metadata.ImageValueConverter.StorageType"/> to its persistent property type.</para>
      </summary>
      <param name="value">An object which represents the value to convert.</param>
      <returns>An object which represents the converted value. null (Nothing in Visual Basic) if the specified value is a null reference.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ImageValueConverter.ConvertToStorageType(System.Object)">
      <summary>
        <para>Converts the persistent property&#39;s value to the specified type.</para>
      </summary>
      <param name="value">An object which represents the value to convert.</param>
      <returns>An object which represents the converted value. null (Nothing in Visual Basic) if the specified value is a null reference.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ImageValueConverter.StorageType">
      <summary>
        <para>Gets the type that the property&#39;s value is converted to when it&#39;s saved in a data store.</para>
      </summary>
      <value>The <see cref="T:System.Type"/> which the property&#39;s value is converted to and saved in a data store.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.IsExactTypeFunction">
      <summary>
        <para>A custom function that determines whether a particular object has a specified type.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsExactTypeFunction.Category">
      <summary>
        <para>Designates the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator&#39;s category.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.FunctionCategory"/> value specifying the custom function&#39;s category.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsExactTypeFunction.Description">
      <summary>
        <para>Specifies the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator&#39;s description.</para>
      </summary>
      <value>A text describing the custom function&#39;s syntax and purpose.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsExactTypeFunction.Evaluate(System.Object[])">
      <summary>
        <para>Evaluates the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator on the client.</para>
      </summary>
      <param name="operands">An array of objects specifying function operands (parameters).</param>
      <returns>An <see cref="T:System.Object"/> specifying the custom function&#39;s return value, calculated based on the operands.</returns>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.IsExactTypeFunction.FunctionName">
      <summary>
        <para>Specifies the name of the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsExactTypeFunction.IsValidOperandCount(System.Int32)">
      <summary>
        <para>Determines whether the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator can accept a specified number of operands (parameters).</para>
      </summary>
      <param name="count">An integer value specifying the number of operands (parameters) passed to the custom function.</param>
      <returns>true if the number of operands (parameters) passed as the count is valid for the custom function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsExactTypeFunction.IsValidOperandType(System.Int32,System.Int32,System.Type)">
      <summary>
        <para>Determines whether a certain type can be passed as a specified operand to the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator.</para>
      </summary>
      <param name="operandIndex">A zero-based integer value specifying an operand&#39;s index among a custom function&#39;s operands.</param>
      <param name="operandCount">An integer value specifying the total number of operands passed to the custom function.</param>
      <param name="type"></param>
      <returns>true if the custom function accepts the type; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsExactTypeFunction.MaxOperandCount">
      <summary>
        <para>Specifies the maximum number of operands (parameters) the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> function operator can accept.</para>
      </summary>
      <value>An integer value specifying the maximum number of function operands (parameters) the custom function can accept. &#0045;1 indicates that a custom function accepts an infinite number of operands.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsExactTypeFunction.MinOperandCount">
      <summary>
        <para>Specifies the minimum number of operands (parameters) required by the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> function operator.</para>
      </summary>
      <value>An integer value specifying the least possible number of function operands (parameters) required by the custom function. 0 indicates that operands can be omitted.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsExactTypeFunction.Name">
      <summary>
        <para>Specifies name of the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator.</para>
      </summary>
      <value>A <see cref="T:System.String"/> used to identify a custom function.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsExactTypeFunction.Register">
      <summary>
        <para>Registers the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator by calling the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)"/> method.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsExactTypeFunction.ResultType(System.Type[])">
      <summary>
        <para>Determines the <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> custom function operator result type based on the type of operands passed to the operator.</para>
      </summary>
      <param name="operands">An array of function operator (parameter) types.</param>
      <returns>A <see cref="T:System.Type"/> object specifying the return value type of the custom function.</returns>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction">
      <summary>
        <para>A custom function that determines whether a particular object is of a specified type or derives from it.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.Category">
      <summary>
        <para>Designates the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator&#39;s category.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.FunctionCategory"/> value specifying the custom function&#39;s category.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.Description">
      <summary>
        <para>Specifies the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator&#39;s description.</para>
      </summary>
      <value>A text describing the custom function&#39;s syntax and purpose.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.Evaluate(System.Object[])">
      <summary>
        <para>Evaluates the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator on the client.</para>
      </summary>
      <param name="operands">An array of objects specifying function operands (parameters).</param>
      <returns>An <see cref="T:System.Object"/> specifying the custom function&#39;s return value, calculated based on the operands.</returns>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.FunctionName">
      <summary>
        <para>Specifies the name of the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.IsValidOperandCount(System.Int32)">
      <summary>
        <para>Determines whether the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator can accept a specified number of operands (parameters).</para>
      </summary>
      <param name="count">An integer value specifying the number of operands (parameters) passed to the custom function.</param>
      <returns>true if the number of operands (parameters) passed as the count is valid for the custom function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.IsValidOperandType(System.Int32,System.Int32,System.Type)">
      <summary>
        <para>Determines whether a certain type can be passed as a specified operand to the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator.</para>
      </summary>
      <param name="operandIndex">A zero-based integer value specifying an operand&#39;s index among a custom function&#39;s operands.</param>
      <param name="operandCount">An integer value specifying the total number of operands passed to the custom function.</param>
      <param name="type"></param>
      <returns>true if the custom function accepts the type; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.MaxOperandCount">
      <summary>
        <para>Specifies the maximum number of operands (parameters) the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> function operator can accept.</para>
      </summary>
      <value>An integer value specifying the maximum number of function operands (parameters) the custom function can accept. &#0045;1 indicates that a custom function accepts an infinite number of operands.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.MinOperandCount">
      <summary>
        <para>Specifies the minimum number of operands (parameters) required by the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> function operator.</para>
      </summary>
      <value>An integer value specifying the least possible number of function operands (parameters) required by the custom function. 0 indicates that operands can be omitted.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.Name">
      <summary>
        <para>Specifies name of the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator.</para>
      </summary>
      <value>A <see cref="T:System.String"/> used to identify a custom function.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.Register">
      <summary>
        <para>Registers the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator by calling the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)"/> method.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction.ResultType(System.Type[])">
      <summary>
        <para>Determines the <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/> custom function operator result type based on the type of operands passed to the operator.</para>
      </summary>
      <param name="operands">An array of function operator (parameter) types.</param>
      <returns>A <see cref="T:System.Type"/> object specifying the return value type of the custom function.</returns>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ReflectionClassInfo">
      <summary>
        <para>Provides access to the metadata information of a class gathered via Reflection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionClassInfo.#ctor(System.Type,DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ReflectionClassInfo"/> object with the specified <see cref="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.ClassType"/> and <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> of the described class. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.ClassType"/> property.</param>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which contains the new <see cref="T:DevExpress.Xpo.Metadata.ReflectionClassInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionClassInfo.AddMember(DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Adds the specified member&#39;s metadata information to the <see cref="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.OwnMembers"/> collection.</para>
      </summary>
      <param name="newMember">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object to add.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.AssemblyName">
      <summary>
        <para>Gets the name of the assembly that the class is declared in.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the name of the assembly that the class is declared in.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.BaseClass">
      <summary>
        <para>Gets the metadata information of the base class.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information of the base class. null (Nothing in Visual Basic) if the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object provides a description of the class which is the root in a class hierarchy.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.ClassType">
      <summary>
        <para>Gets the type of the class whose metadata is provided by this <see cref="T:DevExpress.Xpo.Metadata.ReflectionClassInfo"/> object.</para>
      </summary>
      <value>The <see cref="T:System.Type"/> of the class.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionClassInfo.ClearModifications(System.Object)">
      <summary>
        <para>Clears modifications made with the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object whose modifications will be cleared.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.DefaultMembersPersistence">
      <summary>
        <para>Gets the rule that determines which members are persistent by default.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DefaultMembersPersistence"/> enumeration value that specifies which members are by default implied to be persistent.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.FullName">
      <summary>
        <para>Gets the full name of a class.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the full name of the class.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionClassInfo.HasModifications(System.Object)">
      <summary>
        <para>Checks if there are modifications in the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object to be checked.</param>
      <returns>true, if there are modifications; otherwise - false;</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.OwnMembers">
      <summary>
        <para>Gets a collection of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects that provide metadata information on all the members owned by the class.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionClassInfo.SuppressSuspiciousMemberInheritanceCheck">
      <summary>
        <para>Specifies whether exceptions are thrown when overridden properties have attributes from the <see cref="N:DevExpress.Xpo"/> namespace applied.</para>
      </summary>
      <value>true, if exceptions are suppressed; false, if exceptions are thrown. The default is false.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ReflectionDictionary">
      <summary>
        <para>Implements the <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> class. Provides metadata information accumulated via .NET Reflection (based on class structure and custom attributes).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionDictionary.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ReflectionDictionary"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionDictionary.CanGetClassInfoByType(System.Type)">
      <summary>
        <para>Indicates whether the dictionary can return metadata information for the specified type.</para>
      </summary>
      <param name="classType">The class type.</param>
      <returns>true if the dictionary can return metadata information for the specified type; otherwise, false.</returns>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.ReflectionDictionary.CanGetClassInfoByTypeGlobalHandler">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.ReflectionDictionary.CanGetClassInfoByTypeHandler">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionDictionary.Classes">
      <summary>
        <para>Gets a collection of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that are supplied by the current <see cref="T:DevExpress.Xpo.Metadata.ReflectionDictionary"/> instance.</para>
      </summary>
      <value>A collection of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionDictionary.DefaultCanGetClassInfoByType(System.Type)">
      <summary>
        <para>Indicates whether the dictionary can return metadata information for the specified type.</para>
      </summary>
      <param name="classType">The class type.</param>
      <returns>true if the dictionary can return metadata information for the specified type; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionDictionary.QueryClassInfo(System.String,System.String)">
      <summary>
        <para>Returns the persistent class metadata information for the specified assembly name and class name.</para>
      </summary>
      <param name="assemblyName">The assembly name.</param>
      <param name="className">The full name of the class.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object for the specified class or null reference (Nothing in Visual Basic) when the metadata information cannot be obtained.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionDictionary.QueryClassInfo(System.Type)">
      <summary>
        <para>Returns the persistent class metadata information for the specified class type.</para>
      </summary>
      <param name="classType">The class type.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object for the specified class type or null reference (Nothing in Visual Basic) when the metadata information for the corresponding class cannot be obtained.</returns>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.ReflectionDictionary.ResolveClassInfoByTypeGlobalHandler">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.ReflectionDictionary.ResolveClassInfoByTypeHandler">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ReflectionFieldInfo">
      <summary>
        <para>Provides access to field metadata gathered via Reflection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionFieldInfo.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.Reflection.FieldInfo,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ReflectionFieldInfo"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which will own the created instance. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPMemberInfo.Owner"/> property.</param>
      <param name="fieldInfo">A <see cref="T:System.Reflection.FieldInfo"/> object which provides access to field metadata.</param>
      <param name="valueParent">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object which represents the value parent.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionFieldInfo.IsPublic">
      <summary>
        <para>Indicates whether the field is public.</para>
      </summary>
      <value>true if the field is declared as public; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionFieldInfo.MemberType">
      <summary>
        <para>Gets the type of this field.</para>
      </summary>
      <value>The <see cref="T:System.Type"/> of this field.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ReflectionMemberInfo">
      <summary>
        <para>Provides access to member metadata gathered via Reflection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.GetConst(System.Object,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="target"></param>
      <param name="targetMember"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.GetModified(System.Object)">
      <summary>
        <para>Checks whether or not the member is modified.</para>
      </summary>
      <param name="theObject">An object whose member is checked.</param>
      <returns>true, if the member is modified; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.GetOldValue(System.Object)">
      <summary>
        <para>Returns the old value of the member.</para>
      </summary>
      <param name="theObject">An object whose member value is returned.</param>
      <returns>An object which is the old value of the member.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.GetValue(System.Object)">
      <summary>
        <para>Returns the member&#39;s value.</para>
      </summary>
      <param name="theObject">An object whose value will be returned.</param>
      <returns>An object which represents the member&#39;s value.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionMemberInfo.IsStruct">
      <summary>
        <para>Gets whether the member represents a data structure.</para>
      </summary>
      <value>true if the member represents a data structure; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.MakeGetExpression(System.Linq.Expressions.Expression)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="ownerExpression"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionMemberInfo.Name">
      <summary>
        <para>Gets the member&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the member&#39;s name.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.ResetModified(System.Object)">
      <summary>
        <para>Resets the member&#39;s modification.</para>
      </summary>
      <param name="theObject">An object whose member is reset.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.SetModified(System.Object,System.Object)">
      <summary>
        <para>Marks the member as modified.</para>
      </summary>
      <param name="theObject">An object whose member is modified.</param>
      <param name="oldValue">An object that is the member&#39;s old value.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionMemberInfo.SetValue(System.Object,System.Object)">
      <summary>
        <para>Sets the property value for the given object.</para>
      </summary>
      <param name="theObject">An object whose property value will be set.</param>
      <param name="theValue">An object which represents the new value for this property.</param>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ReflectionPropertyInfo">
      <summary>
        <para>Provides access to property metadata gathered via Reflection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ReflectionPropertyInfo.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.Reflection.PropertyInfo,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ReflectionPropertyInfo"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which owns a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ReflectionPropertyInfo"/> class. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPMemberInfo.Owner"/> property.</param>
      <param name="propertyInfo">A <see cref="T:System.Reflection.PropertyInfo"/> object which provides access to property metadata.</param>
      <param name="valueParent">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object which represents the value parent.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionPropertyInfo.IsPublic">
      <summary>
        <para>Gets whether the property is declared as public.</para>
      </summary>
      <value>true if the property is declared as public; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ReflectionPropertyInfo.MemberType">
      <summary>
        <para>Gets the type of this property.</para>
      </summary>
      <value>The <see cref="T:System.Type"/> of this property.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.UtcDateTimeConverter">
      <summary>
        <para>Represents a converter which can be used to convert <see cref="T:System.DateTime"/> objects from the local time to the current coordinated universal time (UTC).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.UtcDateTimeConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.UtcDateTimeConverter"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.UtcDateTimeConverter.ConvertFromStorageType(System.Object)">
      <summary>
        <para>Converts the stored value from the current coordinated universal time (UTC) to local time.</para>
      </summary>
      <param name="value">An object which represents the value to convert.</param>
      <returns>An object which represents the converted value. null (Nothing in Visual Basic) if the specified value is a null reference.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.UtcDateTimeConverter.ConvertToStorageType(System.Object)">
      <summary>
        <para>Converts the persistent property&#39;s value from the current local time to coordinated universal time (UTC). The converted value is stored in the data store.</para>
      </summary>
      <param name="value">An object which represents the value to convert.</param>
      <returns>An object which represents the converted value. null (Nothing in Visual Basic) if the specified value is a null reference.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.UtcDateTimeConverter.StorageType">
      <summary>
        <para>Gets the type that the property&#39;s value will be converted to when it&#39;s saved in a data store.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> which represents the type that the property&#39;s value will be converted to when it&#39;s saved in a data store.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.ValueConverter">
      <summary>
        <para>Serves as a base for the classes that represent property Value Converters.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ValueConverter.ConvertFromStorageType(System.Object)">
      <summary>
        <para>When overridden in a derived class, converts the value which is stored in a data store to the persistent property&#39;s value.</para>
      </summary>
      <param name="value">An object which represents the value to convert.</param>
      <returns>An object which represents the converted value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.ValueConverter.ConvertToStorageType(System.Object)">
      <summary>
        <para>When overridden in a derived class, converts the persistent property&#39;s value to the value which is stored in a data store.</para>
      </summary>
      <param name="value">An object which represents the value to convert.</param>
      <returns>An object which represents the converted value.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.ValueConverter.StorageType">
      <summary>
        <para>When overridden in a derived class, gets the type that the property&#39;s value is converted to when it&#39;s saved in a data store.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> descendant which represents the type that the property&#39;s value is converted to when it&#39;s saved in a data store.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPClassInfo">
      <summary>
        <para>Serves as a base for classes that provide metadata information for a class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.#ctor(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> class with the specified <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which contains the new <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.AddMember(DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>When overridden in a derived class, adds the specified member&#39;s metadata information to the <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Members"/> collection.</para>
      </summary>
      <param name="newMember">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object to add.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.AssemblyName">
      <summary>
        <para>Gets the name of the assembly that the class is declared in.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the assembly name that the class is declared in.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.AssociationListProperties">
      <summary>
        <para>Gets a list of members that represent the &quot;many&quot; side of the association.</para>
      </summary>
      <value>The list of members that represent the &quot;many&quot; side of the association.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.BaseClass">
      <summary>
        <para>When implemented in a derived class, gets the metadata information of the base class.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information of the base class. null (Nothing in Visual Basic) if the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object provides a description of the class which is the root in a class hierarchy.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.CanGetByClassType">
      <summary>
        <para>This property is intended for internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CheckAbstractReference">
      <summary>
        <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.ClassType">
      <summary>
        <para>When implemented in a derived class, gets the type of the class which is described by the current <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> descendant which represents the type of the described class.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.ClearModifications(System.Object)">
      <summary>
        <para>Clears modifications made with the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object whose modifications will be cleared.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.CollectionProperties">
      <summary>
        <para>Gets the <see cref="T:System.Collections.IEnumerable"/> interface which populates <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects for the <see cref="T:DevExpress.Xpo.XPCollection"/> type properties.</para>
      </summary>
      <value>The <see cref="T:System.Collections.IEnumerable"/> interface which populates <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects for <see cref="T:DevExpress.Xpo.XPCollection"/> type properties.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateMember(System.String,DevExpress.Xpo.Metadata.XPClassInfo,System.Attribute[])">
      <summary>
        <para>Creates a new member metadata which is referenced to the specified <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the new member.</param>
      <param name="referenceType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata of the class that the new property references.</param>
      <param name="attributes">An array of <see cref="T:System.Attribute"/> objects that represent the new member&#39;s attributes.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> descendant which provides the new member&#39;s metadata.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateMember(System.String,DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean,System.Attribute[])">
      <summary>
        <para>Creates a new member metadata which is referenced to the specified <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the new member.</param>
      <param name="referenceType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides the metadata of the class which the new property references.</param>
      <param name="nonPersistent">true if the new member is non persistent; otherwise, false.</param>
      <param name="attributes">An array of <see cref="T:System.Attribute"/> objects that represent the attributes of the new member.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> descendant which provides the new member&#39;s metadata.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateMember(System.String,DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean,System.Boolean,System.Attribute[])">
      <summary>
        <para>Creates a new member metadata which references the specified <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the new member.</param>
      <param name="referenceType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides the metadata of the class which the new property references.</param>
      <param name="nonPersistent">true if the new member is not persistent; otherwise, false.</param>
      <param name="nonPublic">true if the new member isn&#39;t public; otherwise, false.</param>
      <param name="attributes">An array of <see cref="T:System.Attribute"/> objects that represent the new member&#39;s attributes.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> descendant which provides the new member&#39;s metadata</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateMember(System.String,System.Type,System.Attribute[])">
      <summary>
        <para>Creates a new member metadata.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the new member.</param>
      <param name="propertyType">A <see cref="T:System.Type"/> descendant which represents the type of the new member. The created member type will be nullable, i.e if you pass bool, the type will be Nullable&lt;bool&gt;.</param>
      <param name="attributes">An array of <see cref="T:System.Attribute"/> objects that represent attributes of the new member.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> descendant which provides the new member&#39;s metadata.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateMember(System.String,System.Type,System.Boolean,System.Attribute[])">
      <summary>
        <para>Creates a new member metadata.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the new member.</param>
      <param name="propertyType">A <see cref="T:System.Type"/> descendant which represents the type of the new member. The created member type will be nullable, i.e if you pass bool, the type will be Nullable&lt;bool&gt;.</param>
      <param name="nonPersistent">true if the new member is not persistent; otherwise, false.</param>
      <param name="attributes">An array of <see cref="T:System.Attribute"/> objects that represent the attributes of the new member.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> descendant which provides the new member&#39;s metadata.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateMember(System.String,System.Type,System.Boolean,System.Boolean,System.Attribute[])">
      <summary>
        <para>Creates a new member metadata.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the new member. The created member type will be nullable, i.e if you pass bool, the type will be Nullable&lt;bool&gt;.</param>
      <param name="propertyType">A <see cref="T:System.Type"/> descendant which represents the type of the new member. The created member type will be nullable, i.e if you pass bool, the type will be Nullable&lt;bool&gt;.</param>
      <param name="nonPersistent">true if the new member is not persistent; otherwise, false.</param>
      <param name="nonPublic">true if the new member isn&#39;t public; otherwise, false.</param>
      <param name="attributes">An array of <see cref="T:System.Attribute"/> objects that represent the attributes of the new member.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> descendant which provides the new member&#39;s metadata.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateNewObject(DevExpress.Xpo.Session)">
      <summary>
        <para>Creates a new persistent object.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session. This property is assigned to the object&#39;s <see cref="P:DevExpress.Xpo.PersistentBase.Session"/> property.</param>
      <returns>An object which is the newly created persistent object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.CreateObject(DevExpress.Xpo.Session)">
      <summary>
        <para>Instantiates an existing persistent object upon loading it from the database.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session. This property is assigned to the object&#39;s <see cref="P:DevExpress.Xpo.PersistentBase.Session"/> property.</param>
      <returns>An object which is the instantiated persistent object.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which the current <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object belongs to.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which contains the current <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.FindMember(System.String)">
      <summary>
        <para>Returns information on the member with the specified name.</para>
      </summary>
      <param name="memberName">A <see cref="T:System.String"/> value which specifies the member&#39;s name.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object which represents member metadata. null (Nothing in Visual Basic) if a member with the specified name isn&#39;t found.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.FullName">
      <summary>
        <para>When implemented in a derived class, returns the full name of the class.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the full name of the class.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetCriteriaCompilerDescriptor(DevExpress.Xpo.Session)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="session"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetEvaluatorContextDescriptor">
      <summary>
        <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetEvaluatorContextDescriptorInTransaction">
      <summary>
        <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetId(System.Object)">
      <summary>
        <para>Gets the value of the key property.</para>
      </summary>
      <param name="obj">An object which represents the persistent object.</param>
      <returns>An object which represents the value of the key property.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetMember(System.String)">
      <summary>
        <para>Returns information on the member with the specified name.</para>
      </summary>
      <param name="memberName">A <see cref="T:System.String"/> value which specifies the member&#39;s name.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object which represents member metadata. If a member with the specified name isn&#39;t found, an exception is thrown.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetObjectLoading(DevExpress.Xpo.Session)">
      <summary>
        <para>Indicates whether the object is currently being initialized within the specified session.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> object.</param>
      <returns>true if the object is currently being initialized; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetPersistentMember(System.String)">
      <summary>
        <para>Returns information on the persistent member with the specified name.</para>
      </summary>
      <param name="memberName">A <see cref="T:System.String"/> value which specifies the member name.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object which represents member metadata. null (Nothing in Visual Basic) if the member with the specified name isn&#39;t found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetPropertiesListForUpdateInsert(DevExpress.Xpo.Session,System.Object,System.Boolean,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="session"></param>
      <param name="theObject"></param>
      <param name="isUpdate"></param>
      <param name="addDelayedReference"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetRefTypes">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.GetShortAssemblyName(System.Reflection.Assembly)">
      <summary>
        <para>Gets the short name of the specified assembly.</para>
      </summary>
      <param name="assembly">The assembly.</param>
      <returns>A string value that represents the specified assembly&#39;s short name.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.HasDescendants">
      <summary>
        <para>Gets whether the class described by the current <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object has descendants.</para>
      </summary>
      <value>true if the class has descendants; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.HasModifications(System.Object)">
      <summary>
        <para>Checks if there are modifications with the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object to be checked for modifications.</param>
      <returns>true, if there are modifications; otherwise - false;</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.IdClass">
      <summary>
        <para>Gets the metadata information for the persistent class which provides the key value for the current object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information for the persistent class which provides the key value for the current object.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.IsAbstract">
      <summary>
        <para>Determines whether an instance of the current type is abstract.</para>
      </summary>
      <value>true if an instance of the current type is abstract; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.IsAssignableTo(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Determines whether an instance of the current type can be assigned to an instance of the specified type.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which describes the type to compare with the current type.</param>
      <returns>true if an instance of the current type can be assigned to an instance of the specified type; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.IsObjectLoading">
      <summary>
        <para>Gets whether the object is currently being initialized.</para>
      </summary>
      <value>true if the object is currently being initialized; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.KeyProperty">
      <summary>
        <para>Gets information on the key property or key field.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object which provides information about the key property or key field. If null (Nothing in Visual Basic) a <see cref="T:DevExpress.Xpo.Exceptions.KeyPropertyAbsentException"/> is thrown.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.Members">
      <summary>
        <para>Gets a collection of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects that are owned by the current persistent class metadata information and all its ancestors.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects that are owned by the current persistent class metadata information and all its ancestors.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.NullableBehavior">
      <summary>
        <para>Determines if nullable columns should be created when updating the database schema for the persistent class described by the current <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.NullableBehavior"/> enumeration value specifying if a nullable column should be created when updating the database schema.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.ObjectProperties">
      <summary>
        <para>Returns the <see cref="T:System.Collections.IEnumerable"/> interface which populates <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects for properties with the <see cref="T:DevExpress.Xpo.IXPSimpleObject"/> interface declaration.</para>
      </summary>
      <value>The <see cref="T:System.Collections.IEnumerable"/> interface which populates <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects for properties with the <see cref="T:DevExpress.Xpo.IXPSimpleObject"/> interface declaration.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OptimisticLockField">
      <summary>
        <para>Gets the metadata of the member that represents the optimistic lock field.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that represents member metadata.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OptimisticLockFieldInDataLayer">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OptimisticLockFieldInDataLayerName">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OptimisticLockFieldName">
      <summary>
        <para>Gets the name of the system field that is used to control object locking for objects that have the object locking option enabled.</para>
      </summary>
      <value>A string value that specifies the system field&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OptimisticLockingBehavior">
      <summary>
        <para>Specifies the persistent object&#39;s locking behavior.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingBehavior"/> enumeration value that specifies the locking behavior.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OptimisticLockingReadBehavior">
      <summary>
        <para>Specifies how XPO behaves when reloading a changed object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehavior"/> enumeration value that specifies how XPO behaves when reloading changed objects (objects with different versions).</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.OwnMembers">
      <summary>
        <para>Gets a collection of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects that provide metadata information on all the members owned by the class.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.PersistentBaseClass">
      <summary>
        <para>Gets the information about the nearest persistent parent class in the inheritance hierarchy.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which corresponds to the nearest persistent parent class in the inheritance hierarchy.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.PersistentProperties">
      <summary>
        <para>Gets the collection of persistent properties and fields owned by the current persistent class metadata information.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects owned by the current persistent class metadata information.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.Table">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.DB.DBTable"/> object which the public properties and public fields are saved in.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object which represents the table that the public properties and public fields are saved in.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.TableMapType">
      <summary>
        <para>Gets a value that specifies which table persistent properties and fields are saved to.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.MapInheritanceType"/> enumeration value that specifies which table persistent properties and fields are saved to.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.TableName">
      <summary>
        <para>Gets the name of the table in the data layer in which the object&#39;s data is stored.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the table&#39;s name.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPClassInfo.ToString">
      <summary>
        <para>Returns a string that represents the full name of the class.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which specifies the full name of the class.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPClassInfo.TrackPropertiesModifications">
      <summary>
        <para>Specifies whether or not the persistent object properties modifications are tracked.</para>
      </summary>
      <value>true, if the persistent objects&#39; properties modifications are tracked; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo">
      <summary>
        <para>Serves as a base for classes that represent custom member&#39;s metadata.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.String,System.Type,DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which owns this <see cref="T:DevExpress.Xpo.Metadata.XPCustomMemberInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPMemberInfo.Owner"/> property.</param>
      <param name="propertyName">A <see cref="T:System.String"/> value that specifies the member&#39;s name. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.Name"/> property.</param>
      <param name="propertyType">The member&#39;s <see cref="T:System.Type"/>. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.MemberType"/> property.</param>
      <param name="referenceType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata of the referenced object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPMemberInfo.ReferenceType"/> property.</param>
      <param name="nonPersistent">true, if the member is non-persistent; otherwise, false. The inverted value of this parameter is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPTypeInfo.IsPersistent"/> property.</param>
      <param name="nonPublic">true, if the member is declared as public; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.IsPublic"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.GetModified(System.Object)">
      <summary>
        <para>Checks whether or not the member is modified.</para>
      </summary>
      <param name="theObject">A persistent object that will be checked.</param>
      <returns>true, if the member is modified; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.GetOldValue(System.Object)">
      <summary>
        <para>Returns the old value of the member.</para>
      </summary>
      <param name="theObject">A persistent object for which the member value will be obtained.</param>
      <returns>An object which is the old value of the member.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.GetValue(System.Object)">
      <summary>
        <para>Returns the property&#39;s value.</para>
      </summary>
      <param name="theObject">An object whose property value will be returned.</param>
      <returns>An object which represents the property&#39;s value.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.IsPublic">
      <summary>
        <para>Gets whether the member is public.</para>
      </summary>
      <value>true if the member is public; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.MemberType">
      <summary>
        <para>Gets the member&#39;s type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> descendant which represents the member&#39;s type.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.Name">
      <summary>
        <para>Gets the member&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the member&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPCustomMemberInfo.ReferenceType">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> of the referenced object if the member is a reference to another persistent object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata of the referenced object.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.ResetModified(System.Object)">
      <summary>
        <para>Resets the member&#39;s modification.</para>
      </summary>
      <param name="theObject">A persistent object whose member modification will be reset.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.SetModified(System.Object,System.Object)">
      <summary>
        <para>Marks the member as modified.</para>
      </summary>
      <param name="theObject">A persistent object whose member will be marked as modified.</param>
      <param name="oldValue">An object that is the member&#39;s old value.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPCustomMemberInfo.SetValue(System.Object,System.Object)">
      <summary>
        <para>Sets the property&#39;s value.</para>
      </summary>
      <param name="theObject">An object whose property value will be set.</param>
      <param name="theValue">An object which represents the new value for this property.</param>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.String,System.Attribute[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> class.</para>
      </summary>
      <param name="baseClass">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information of the base class.</param>
      <param name="className">The class name.</param>
      <param name="attributes">An array of attributes.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.Metadata.XPClassInfo,System.String,System.Attribute[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> class.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which contains the new <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</param>
      <param name="baseClass">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information of the base class.</param>
      <param name="className">The class name.</param>
      <param name="attributes">An array of attributes.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.String,System.Attribute[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> class.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which contains the new <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</param>
      <param name="className">The class name.</param>
      <param name="attributes">An array of attributes.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.Xml.XmlNode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> class.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which contains the new <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectClassInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPClassInfo.Dictionary"/> property.</param>
      <param name="node">An <see cref="T:System.Xml.XmlNode"/> object which represents a single node in the XML document.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.AddMember(DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Adds the specified member&#39;s metadata information to the <see cref="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.OwnMembers"/> collection.</para>
      </summary>
      <param name="newMember">The <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object to add.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.AssemblyName">
      <summary>
        <para>Gets the name of the assembly that the class is declared in.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the assembly name that the class is declared in.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.BaseClass">
      <summary>
        <para>Gets the metadata information of the base class.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information of the base class. null (Nothing in Visual Basic) if the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object provides a description of the class which is the root in a class hierarchy.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.CanGetByClassType">
      <summary>
        <para>This property is intended for internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.ClassType">
      <summary>
        <para>Gets the type of the class.</para>
      </summary>
      <value>null (Nothing in Visual Basic)</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.ClearModifications(System.Object)">
      <summary>
        <para>Clears modifications made with the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object whose modifications will be cleared.</param>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.DataObjectsAssembly">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.DataObjectsBaseType">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.FullName">
      <summary>
        <para>Gets the full name of a class.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the full name of the class.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.HasModifications(System.Object)">
      <summary>
        <para>Checks if there are modifications in the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object to be checked for modifications.</param>
      <returns>true, if there are modifications; otherwise - false;</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDataObjectClassInfo.OwnMembers">
      <summary>
        <para>Gets a collection of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects that provide metadata information on all the members owned by the class.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects.</value>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPDataObjectMemberInfo">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDataObjectMemberInfo.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.Xml.XmlNode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectMemberInfo"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which owns this <see cref="T:DevExpress.Xpo.Metadata.XPDataObjectMemberInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.Metadata.XPMemberInfo.Owner"/> property.</param>
      <param name="node">An <see cref="T:System.Xml.XmlNode"/> object which represents a single node in the XML document.</param>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPDictionary">
      <summary>
        <para>Provides the abstract (MustInherit in Visual Basic) base class for metadata providers.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.AddClassInfo(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Adds persistent class metadata information to the current metadata provider.</para>
      </summary>
      <param name="info">Persistent class metadata information of the objects to add to the <see cref="P:DevExpress.Xpo.Metadata.XPDictionary.Classes"/> collection of the objects that are supplied by the current metadata provider.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CanGetClassInfoByType(System.Type)">
      <summary>
        <para>When implemented, indicates whether the dictionary can return metadata information for the specified type.</para>
      </summary>
      <param name="classType">The class type.</param>
      <returns>true if the dictionary can return metadata information for the specified type; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDictionary.Classes">
      <summary>
        <para>When implemented by a class, gets a collection of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that are supplied by the current metadata provider.</para>
      </summary>
      <value>A collection of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects.</value>
    </member>
    <member name="E:DevExpress.Xpo.Metadata.XPDictionary.ClassInfoChanged">
      <summary>
        <para>Fires when the metadata information of the objects that are supplied by the current metadata provider has been changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CollectClassInfos(System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="addNonPersistent"></param>
      <param name="assemblies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CollectClassInfos(System.Boolean,System.Reflection.Assembly[])">
      <summary>
        <para>Obtains the metadata information for all the persistent objects that are defined in the specified assemblies.</para>
      </summary>
      <param name="addNonPersistent">true to add metadata information for nonpersistent objects; otherwise, false.</param>
      <param name="assemblies">An array of assemblies which contain the persistent objects whose metadata information is collected.</param>
      <returns>An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the persistent objects that are defined in the specified assemblies.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CollectClassInfos(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="assemblies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CollectClassInfos(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="types"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CollectClassInfos(System.Reflection.Assembly[])">
      <summary>
        <para>Obtains the metadata information for all the persistent objects that are defined in the specified assemblies.</para>
      </summary>
      <param name="assemblies">An array of assemblies which contain the persistent objects whose metadata information is collected.</param>
      <returns>An array of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>s for the persistent objects that are defined in the assemblies within the assemblies array.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CollectClassInfos(System.Type[])">
      <summary>
        <para>Obtains the metadata information for all the persistent objects of the specified class types.</para>
      </summary>
      <param name="types">An array of the class types which correspond to the persistent objects whose metadata information is collected.</param>
      <returns>An array of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>s for the persistent objects of the class types that are specified by the types array.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CreateClass(DevExpress.Xpo.Metadata.XPClassInfo,System.String,System.Attribute[])">
      <summary>
        <para>Creates a class with the specified name and attributes.</para>
      </summary>
      <param name="baseClassInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information of the base class.</param>
      <param name="className">A <see cref="T:System.String"/> value that specifies the class name.</param>
      <param name="attributes">An array of attributes.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the created class.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.CreateClass(System.String,System.Attribute[])">
      <summary>
        <para>Creates a class with the specified name and attributes.</para>
      </summary>
      <param name="className">A <see cref="T:System.String"/> value that specifies the class name.</param>
      <param name="attributes">An array of attributes.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the created class.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDictionary.CustomAggregates">
      <summary>
        <para>Gets a collection of custom aggregate function supplied by the current metadata provider.</para>
      </summary>
      <value>A collection of custom aggregate functions.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDictionary.CustomFunctionOperators">
      <summary>
        <para>Gets a collection of custom function operators supplied by the current metadata provider.</para>
      </summary>
      <value>A DevExpress.Data.Filtering.CustomFunctionCollection object containing custom function operators supplied by the current metadata provider.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetClassInfo(System.Object)">
      <summary>
        <para>Returns the persistent class metadata information for the specified object.</para>
      </summary>
      <param name="theObject">The object whose metadata information is obtained.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetClassInfo(System.String,System.String)">
      <summary>
        <para>Returns the persistent class metadata information for the specified assembly name and class name.</para>
      </summary>
      <param name="assemblyName">The assembly name.</param>
      <param name="className">The full name of the class.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified class.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetClassInfo(System.Type)">
      <summary>
        <para>Returns the persistent class metadata information for the specified class type.</para>
      </summary>
      <param name="classType">The class type.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified class type.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetConverter(System.Type)">
      <summary>
        <para>Gets the value-and-type convertor for the specified member type.</para>
      </summary>
      <param name="memberType">A <see cref="T:System.Type"/> descendant which represents the type of the member.</param>
      <returns>A <see cref="T:DevExpress.Xpo.Metadata.ValueConverter"/> descendant which represents the value-and-type convertor for the member whose type is passed as the memberType parameter or null reference (Nothing in Visual Basic) when the convertor is not specified (registered) for this member.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetDataStoreSchema(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Gets the complete schema of a data store that corresponds to the specified persistent class metadata information.</para>
      </summary>
      <param name="types">An array of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects.</param>
      <returns>An array of data tables of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> type that correspond to the metadata information which is passed as the types parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetDataStoreSchema(System.Collections.Generic.IEnumerable{DevExpress.Xpo.Metadata.XPClassInfo})">
      <summary>
        <para></para>
      </summary>
      <param name="types"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetDataStoreSchema(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="assemblies"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetDataStoreSchema(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="types"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetDataStoreSchema(System.Reflection.Assembly[])">
      <summary>
        <para>Gets the complete schema of a data store that corresponds to the persistent objects which are defined within the specified assemblies.</para>
      </summary>
      <param name="assemblies">An array of assemblies which contain the persistent objects.</param>
      <returns>An array of data tables of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> type that correspond to the persistent objects which are defined in the assemblies within the assemblies array.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetDataStoreSchema(System.Type[])">
      <summary>
        <para>Gets the complete schema of a data store that corresponds to the persistent objects of the specified class types.</para>
      </summary>
      <param name="types">An array of class types which correspond to the persistent objects.</param>
      <returns>An array of data tables of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> type which correspond to the persistent objects of the class types that are specified by the types array.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.GetId(System.Object)">
      <summary>
        <para>Gets the value of the specified object&#39;s key property.</para>
      </summary>
      <param name="obj">An object which represents the persistent object.</param>
      <returns>An object which represents the value of the obj&#39;s key property.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.HasDescendants(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para></para>
      </summary>
      <param name="classInfo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.LoadXmlMetadata(System.IO.TextReader)">
      <summary>
        <para>Loads metadata with the specified <see cref="T:System.IO.TextReader"/>.</para>
      </summary>
      <param name="txtReader">An instance of the <see cref="T:System.IO.TextReader"/> containing XML data to read.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.LoadXmlMetadata(System.String)">
      <summary>
        <para>Loads metadata stored in a file in XML format.</para>
      </summary>
      <param name="filename">The path to a file containing XML data.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.LoadXmlMetadata(System.Xml.XmlReader)">
      <summary>
        <para>Loads metadata with the specified XmlTextReader.</para>
      </summary>
      <param name="reader">An instance of the XmlTextReader containing XML data to read.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPDictionary.NullableBehavior">
      <summary>
        <para>Specifies if nullable columns should be created when updating the database schema.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.NullableBehavior"/> enumeration value specifying if a nullable column should be created when updating the database schema.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.QueryClassInfo(System.Object)">
      <summary>
        <para>When implemented by a class, returns the persistent class metadata information for the specified persistent object.</para>
      </summary>
      <param name="theObject">The persistent object.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object for the specified object or null reference (Nothing in Visual Basic) when the metadata information cannot be obtained.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.QueryClassInfo(System.String,System.String)">
      <summary>
        <para>When implemented by a class, returns the persistent class metadata information for the specified assembly name and class name.</para>
      </summary>
      <param name="assemblyName">The assembly name.</param>
      <param name="className">The full name of the class.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object for the specified class or null reference (Nothing in Visual Basic) when the metadata information cannot be obtained.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.QueryClassInfo(System.Type)">
      <summary>
        <para>When implemented by a class, returns the persistent class metadata information for the specified class type.</para>
      </summary>
      <param name="classType">The class type.</param>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object for the specified class type or null reference (Nothing in Visual Basic) when the metadata information for the corresponding class cannot be obtained.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.RegisterValueConverter(DevExpress.Xpo.Metadata.ValueConverter,System.Type)">
      <summary>
        <para>Registers a value-and-type convertor for the specified member type.</para>
      </summary>
      <param name="converter">A <see cref="T:DevExpress.Xpo.Metadata.ValueConverter"/> descendant which represents the value-and-type convertor for the member whose type is passed as the memberType parameter.</param>
      <param name="memberType">A <see cref="T:System.Type"/> descendant which represents the type of the member.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.ToString">
      <summary>
        <para>Returns a string which represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which represents the current <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPDictionary.Validate(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="inputInfos"></param>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPMemberInfo">
      <summary>
        <para>Serves as a base for classes that provide access to member metadata.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.CollectionElementType">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> of the persistent object if the current member is a collection of these persistent objects.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which represents the type of a single element in the collection. null (Nothing in Visual Basic) if this <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object provides metadata for a member which is not a collection.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.Converter">
      <summary>
        <para>Gets the value converter.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Metadata.ValueConverter"/> object which represents the value converter.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.DbDefaultValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.DefaultValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.DisplayName">
      <summary>
        <para>Gets the member&#39;s display name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the member&#39;s display name.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.ExpandId(System.Object)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="id"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetAssociatedCollectionProperty">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetAssociatedMember">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetAssociatedProperty">
      <summary>
        <para>Gets the property metadata which is associated with the current <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that provides property metadata which is associated with the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetConst(System.Object,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="target"></param>
      <param name="targetMember"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetMappingClass(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="branch">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetModified(System.Object)">
      <summary>
        <para>Checks whether or not the member is modified.</para>
      </summary>
      <param name="theObject">A persistent object that will be checked.</param>
      <returns>true, if the member is modified; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetOldValue(System.Object)">
      <summary>
        <para>Returns the old value of the member.</para>
      </summary>
      <param name="theObject">A persistent object for which the member value will be obtained.</param>
      <returns>An object which is the old value of the member.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.GetValue(System.Object)">
      <summary>
        <para>When implemented in a derived class, returns the property&#39;s value.</para>
      </summary>
      <param name="theObject">An object whose value will be returned.</param>
      <returns>An object which represents the property&#39;s value.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IntermediateClass">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsAggregated">
      <summary>
        <para>Gets whether the member references other aggregated persistent objects.</para>
      </summary>
      <value>true if the member references other aggregated persistent objects; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsAliased">
      <summary>
        <para>Gets whether a <see cref="T:DevExpress.Xpo.PersistentAliasAttribute"/> attribute is applied to the property.</para>
      </summary>
      <value>true if the member has the <see cref="T:DevExpress.Xpo.PersistentAliasAttribute"/> attribute; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsAssociation">
      <summary>
        <para>Gets whether the member sets up the relation.</para>
      </summary>
      <value>true if the member sets up the relation; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsAssociationList">
      <summary>
        <para>Indicates whether the current member represents the &quot;many&quot; side of the association.</para>
      </summary>
      <value>true if the member is IList or its descendant, with the <see cref="T:DevExpress.Xpo.AssociationAttribute"/> applied; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsAutoGenerate">
      <summary>
        <para>Gets whether the member is the auto-generated key.</para>
      </summary>
      <value>true if the member is the auto-generated key; otherwise, flase.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsCollection">
      <summary>
        <para>Gets whether the member represents a collection and is involved in associations.</para>
      </summary>
      <value>true if the member represents a collection and is involved in associations; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsDelayed">
      <summary>
        <para>Gets whether the property is marked as delayed.</para>
      </summary>
      <value>true if the property is marked as delayed; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsExpandableToPersistent">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsFetchOnly">
      <summary>
        <para>Specifies if the member value can be saved to the database.</para>
      </summary>
      <value>true, if the member value can be loaded from the database but should not be saved (should not be included in the INSERT and UPDATE SQL statements); false - if the value can be both loaded and saved.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsIdentity">
      <summary>
        <para>Gets whether the member is an auto-generated integer key.</para>
      </summary>
      <value>true if the member is an auto-generated integer key; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsKey">
      <summary>
        <para>Gets whether the member represents a key member.</para>
      </summary>
      <value>true if the member represents a key member; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsManyToMany">
      <summary>
        <para>Gets whether a member is involved in a many-to-many association.</para>
      </summary>
      <value>true if the member is involved in a many-to-many association; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsManyToManyAlias">
      <summary>
        <para>Indicates whether the ManyToManyAliasAttribute attribute is applied.</para>
      </summary>
      <value>true if the ManyToManyAliasAttribute is applied; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.IsMappingClass(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="branch">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</param>
      <returns>The Boolean value.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsNonAssociationList">
      <summary>
        <para>Indicates whether the current member represents a collection that is not decorated with <see cref="T:DevExpress.Xpo.AssociationAttribute"/>.</para>
      </summary>
      <value>true, if the member is IList or its descendant, not decorated with AssociationAttribute; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsNullable">
      <summary>
        <para>Determines if a nullable column should be created when updating the database schema for the persistent class member described by the current <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object.</para>
      </summary>
      <value>true, if a nullable column is created, otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsOptimisticLockingIgnored">
      <summary>
        <para>Indicates whether or not Optimistic Concurrency Control is ignored for the current member.</para>
      </summary>
      <value>true, if optimistic locking is ignored; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsPublic">
      <summary>
        <para>When implemented in a derived class, gets whether the member is declared as public.</para>
      </summary>
      <value>true if the member is declared as public; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsReadOnly">
      <summary>
        <para>Gets whether the member is read-only.</para>
      </summary>
      <value>true if the member is read-only; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.IsStruct">
      <summary>
        <para>Gets whether the member represents a data structure.</para>
      </summary>
      <value>true if the member represents a data structure; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.MakeGetExpression(System.Linq.Expressions.Expression)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="ownerExpression"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.ManyToManyRelatedProperty">
      <summary>
        <para>Gets the metadata information of the persistent field or property which represents the opposite side of a many-to-many association.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> descendant that provides metadata information on the persistent field or property which represents the opposite side of a many-to-many association. null (Nothing in Visual Basic) if the member isn&#39;t involved in a many-to-many association.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.MappingField">
      <summary>
        <para>Gets the column&#39;s name in the data store which the member&#39;s value is stored in.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the column&#39;s name in the data store which the member&#39;s value is stored in.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.MappingFieldSize">
      <summary>
        <para>Gets the maximum number of characters that can be stored in a field which the member is mapped to.</para>
      </summary>
      <value>An integer value which specifies the maximum number of characters that can be stored. 0 if the type in which the member&#39;s value is saved to a data store isn&#39;t a string.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.MemberType">
      <summary>
        <para>When implemented in a derived class, gets the member&#39;s type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> descendant which represents the member&#39;s type.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.MergeCollisionBehavior">
      <summary>
        <para>Gets a value that indicates the behavior when merging changed objects (objects with different versions).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.OptimisticLockingReadMergeBehavior"/> enumeration value that  indicates the behavior when merging changed objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.Name">
      <summary>
        <para>When implemented in a derived class, gets the member&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the member&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.Owner">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which owns this <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which owns this <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.ProcessAssociationRefChange(DevExpress.Xpo.Session,System.Object,System.Object,System.Object)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="session"></param>
      <param name="referenceMemberOwner"></param>
      <param name="oldValue"></param>
      <param name="newValue"></param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.ReferenceType">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> of the referenced object if the member is a reference to another persistent object.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata of the referenced object.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.ResetModified(System.Object)">
      <summary>
        <para>Resets the member&#39;s modification.</para>
      </summary>
      <param name="theObject">A persistent object whose member modification will be reset.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.SetModified(System.Object,System.Object)">
      <summary>
        <para>Marks the member as modified.</para>
      </summary>
      <param name="theObject">A persistent object whose member will be marked as modified.</param>
      <param name="oldValue">An object that is the member&#39;s old value.</param>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.SetValue(System.Object,System.Object)">
      <summary>
        <para>When implemented in a derived class, sets the property&#39;s value.</para>
      </summary>
      <param name="theObject">An object whose property value will be set.</param>
      <param name="theValue">An object which represents the new value for this property.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.StorageType">
      <summary>
        <para>Gets the type that the member&#39;s value is saved as in the data store.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> descendant representing the type that the member&#39;s value is saved as in the data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPMemberInfo.SubMembers">
      <summary>
        <para>Gets a collection of sub members.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPMemberInfo.ToString">
      <summary>
        <para>Returns a string which represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which represents the current <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.Metadata.XPTypeInfo">
      <summary>
        <para>Serves as a base for classes that discover the object&#39;s attributes and provide access to its metadata.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.AddAttribute(System.Attribute)">
      <summary>
        <para>Adds a new attribute to the attribute collection of the type.</para>
      </summary>
      <param name="attribute">A <see cref="T:System.Attribute"/> descendant which represents the attribute for this type.</param>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPTypeInfo.Attributes">
      <summary>
        <para>Gets the attributes for this type.</para>
      </summary>
      <value>An array of <see cref="T:System.Attribute"/> descendants.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.FindAttributeInfo(System.String)">
      <summary>
        <para>Searches for an attribute with the specified name.</para>
      </summary>
      <param name="attributeName">A <see cref="T:System.String"/> value that specifies the name of the attribute to search for.</param>
      <returns>A <see cref="T:System.Attribute"/> descendant with the specified name. null (Nothing in Visual Basic) if an attribute with the specified name isn&#39;t found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.FindAttributeInfo(System.Type)">
      <summary>
        <para>Searches for an attribute of the specified type.</para>
      </summary>
      <param name="attributeType">A <see cref="T:System.Type"/> descendant which represents the type of the attribute to search for.</param>
      <returns>A <see cref="T:System.Attribute"/> descendant of the specified type. null (Nothing in Visual Basic) if an attribute of the specified type isn&#39;t found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.GetAttributeInfo(System.String)">
      <summary>
        <para>Returns the attribute with the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the name of the attribute to retrieve.</param>
      <returns>A <see cref="T:System.Attribute"/> descendant with the specified name. null (Nothing in Visual Basic) if an attribute with the specified name isn&#39;t found. In this case a <see cref="T:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException"/> exception is thrown.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.GetAttributeInfo(System.Type)">
      <summary>
        <para>Returns the attribute of the specified type.</para>
      </summary>
      <param name="attributeType">A <see cref="T:System.Type"/> descendant which represents the type of the attribute to retrieve.</param>
      <returns>A <see cref="T:System.Attribute"/> descendant of the specified type. null (Nothing in Visual Basic) if an attribute of the specified type isn&#39;t found. In this case the <see cref="T:DevExpress.Xpo.Exceptions.RequiredAttributeMissingException"/> is thrown.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.HasAttribute(System.String)">
      <summary>
        <para>Determines whether the type has the specified attribute.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the name of the attribute to find.</param>
      <returns>true if the type has the specified attribute; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.HasAttribute(System.Type)">
      <summary>
        <para>Determines whether the type has an attribute of the specified type.</para>
      </summary>
      <param name="attributeType">A <see cref="T:System.Type"/> descendant which represents the type of the attribute to find.</param>
      <returns>true if the type has an attribute of the specified type; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPTypeInfo.IsPersistent">
      <summary>
        <para>Gets whether a class or member of this type is persistent.</para>
      </summary>
      <value>true if a class or member of this type is persistent; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Metadata.XPTypeInfo.IsVisibleInDesignTime">
      <summary>
        <para>Gets whether a property or class is visible at design time.</para>
      </summary>
      <value>true if the property or class is visible at design time; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Metadata.XPTypeInfo.RemoveAttribute(System.Type)">
      <summary>
        <para>Removes the attribute of the specified type.</para>
      </summary>
      <param name="attributeType">A <see cref="T:System.Type"/> descendant which represents the type of the attribute to remove.</param>
    </member>
    <member name="T:DevExpress.Xpo.NestedUnitOfWork">
      <summary>
        <para>A nested unit of work.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.NestedUnitOfWork.GetNestedObject(System.Object)">
      <summary>
        <para>Returns the object in the current unit of work which is the &#39;copy&#39; of the specified object that is owned by the parent session or unit of work.</para>
      </summary>
      <param name="obj">The parent object whose &#39;copy&#39; in the nested unit of work is returned.</param>
      <returns>The object in the current unit of work which is the &#39;copy&#39; of the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.NestedUnitOfWork.GetNestedObject``1(``0)">
      <summary>
        <para>Returns the object of the type designated by the specified generic type parameter, which is the &#39;copy&#39; of the specified object owned by the parent session.</para>
      </summary>
      <param name="obj">The parent object of the type designated by the specified generic type parameter whose &#39;copy&#39; in the nested unit of work is returned.</param>
      <returns>The object in the current unit of work which is the &#39;copy&#39; of the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.NestedUnitOfWork.GetNestedObjects(System.Object[])">
      <summary>
        <para>Returns the objects in the current unit of work which are &#39;copies&#39; of the specified objects that are owned by the parent session or unit of work.</para>
      </summary>
      <param name="parentObjects">The parent objects whose &#39;copies&#39; in the nested unit of work are returned.</param>
      <returns>The objects in the current unit of work which are &#39;copies&#39; of the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.NestedUnitOfWork.GetParentObject(System.Object)">
      <summary>
        <para>Returns the object in the parent session or unit of work whose &#39;copy&#39; in the current unit of work is specified.</para>
      </summary>
      <param name="obj">The object in the current unit of work which is the &#39;copy&#39; of the returned object.</param>
      <returns>The parent object whose &#39;copy&#39; in the current unit of work is specified.</returns>
    </member>
    <member name="M:DevExpress.Xpo.NestedUnitOfWork.GetParentObject``1(``0)">
      <summary>
        <para>Returns the object in the parent session of the type designated by the specified generic type parameter, whose &#39;copy&#39; in the current unit of work is specified.</para>
      </summary>
      <param name="obj">The object in the current unit of work which is the &#39;copy&#39; of the returned object.</param>
      <returns>The parent object whose &#39;copy&#39; in the current unit of work is specified.</returns>
    </member>
    <member name="P:DevExpress.Xpo.NestedUnitOfWork.Parent">
      <summary>
        <para>Gets the parent session or unit of work.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object or descendant which owns the current unit of work.</value>
    </member>
    <member name="M:DevExpress.Xpo.NestedUnitOfWork.TryGetNestedObject(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.NoForeignKeyAttribute">
      <summary>
        <para>Disables automatic creation of the FOREIGN KEY constraints.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.NoForeignKeyAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NoForeignKeyAttribute"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.NonPersistentAttribute">
      <summary>
        <para>Indicates that a class, property, or field will not be stored in a persistent data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.NonPersistentAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/> class.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.NonPersistentAttribute.AttributeType">
      <summary>
        <para>Specifies the <see cref="T:System.Type"/> of this instance. This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.NullableAttribute">
      <summary>
        <para>Applies to persistent class&#39; fields or properties. Specifies if a nullable column should be created when updating the database schema for the target property/field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.NullableAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullableAttribute"/> class.</para>
      </summary>
      <param name="isNullable">true, if a nullable column is created, otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Xpo.NullableAttribute.IsNullable">
      <summary>
        <para>Specifies if a nullable column should be created when updating the database schema for the persistent class member described by the current <see cref="T:DevExpress.Xpo.NullableAttribute"/> object.</para>
      </summary>
      <value>true, if a nullable column is created, otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.NullableBehavior">
      <summary>
        <para>Contains values specifying if a nullable column should be created when updating the database schema.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.NullableBehavior.AlwaysAllowNulls">
      <summary>
        <para>A nullable column is always created.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.NullableBehavior.ByUnderlyingType">
      <summary>
        <para>A nullable column is created when the mapped property type is not a value type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.NullableBehavior.Default">
      <summary>
        <para>The default mode. Has the same effect as AlwaysAllowNulls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.NullableBehaviorAttribute">
      <summary>
        <para>Applied to persistent classes. Specifies if nullable columns should be created when updating the database schema for the target class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.NullableBehaviorAttribute.#ctor(DevExpress.Xpo.NullableBehavior)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullableBehaviorAttribute"/> class.</para>
      </summary>
      <param name="nullableBehavior">A <see cref="T:DevExpress.Xpo.NullableBehavior"/> enumeration value specifying if a nullable column should be created when updating the database schema.</param>
    </member>
    <member name="P:DevExpress.Xpo.NullableBehaviorAttribute.NullableBehavior">
      <summary>
        <para>Gets a value indicating if nullable columns should be created when updating the database schema.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.NullableBehavior"/> enumeration value specifying if a nullable column should be created when updating the database schema.</value>
    </member>
    <member name="T:DevExpress.Xpo.NullValueAttribute">
      <summary>
        <para>Associates a constant with the null value of a property or a field of a simple type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified Boolean constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Boolean"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified 8-bit unsigned integer constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Byte"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Char)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified Unicode character constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Char"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified double-precision floating point number constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Double"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Int16)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified 16-bit signed integer constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Int16"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified 32-bit signed integer constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Int32"/> value  associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified 64-bit signed integer constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Int64"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the object type constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Object"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified single-precision floating point number constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.Single"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class with the specified string constant.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value which is associated with a null value for a property or a field. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.NullValueAttribute.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.NullValueAttribute"/> class and converts the specified value into the specified type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> which represents the type that the value associated with the null value of a property or a field is converted to.</param>
      <param name="value">A <see cref="T:System.String"/> value which is converted into the specified type. This value is assigned to the <see cref="P:DevExpress.Xpo.NullValueAttribute.Value"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.NullValueAttribute.Value">
      <summary>
        <para>Gets or sets a null value for a property or a field.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value which is associated with a null value for a property or a field.</value>
    </member>
    <member name="T:DevExpress.Xpo.ObjectChangeEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpo.XPBaseObject.Changed"/> and <see cref="E:DevExpress.Xpo.Session.ObjectChanged"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectChangeEventArgs.#ctor(DevExpress.Xpo.ObjectChangeReason)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> class with the specified <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason"/> property.</para>
      </summary>
      <param name="reason">An <see cref="T:DevExpress.Xpo.ObjectChangeReason"/> enumeration value which represents the way that the object has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectChangeEventArgs.#ctor(DevExpress.Xpo.ObjectChangeReason,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> class with the specified <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason"/> and <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.PropertyName"/> properties.</para>
      </summary>
      <param name="reason">An <see cref="T:DevExpress.Xpo.ObjectChangeReason"/> enumeration value which represents the way that the object has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason"/> property.</param>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.PropertyName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectChangeEventArgs.#ctor(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.ObjectChangeReason)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> class with the specified parameters.</para>
      </summary>
      <param name="session">The Session of the object whose property has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Session"/> property.</param>
      <param name="theObject">The object whose property has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Object"/> property.</param>
      <param name="reason">An <see cref="T:DevExpress.Xpo.ObjectChangeReason"/> enumeration value which represents the way that the object has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectChangeEventArgs.#ctor(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.ObjectChangeReason,System.String,System.Object,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> class with the specified parameters.</para>
      </summary>
      <param name="session">The Session of the object whose property has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Session"/> property.</param>
      <param name="theObject">The object whose property has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Object"/> property.</param>
      <param name="reason">An <see cref="T:DevExpress.Xpo.ObjectChangeReason"/> enumeration value which represents the way that the object has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason"/> property.</param>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.PropertyName"/> property.</param>
      <param name="oldValue">An object which represents the changed property&#39;s old value.</param>
      <param name="newValue">An object which represents the changed property&#39;s new value.</param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectChangeEventArgs.#ctor(DevExpress.Xpo.Session,System.Object,System.String,System.Object,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> class with the specified parameters.</para>
      </summary>
      <param name="session">The Session of the object whose property has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Session"/> property.</param>
      <param name="theObject">The object whose property has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.Object"/> property.</param>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.PropertyName"/> property.</param>
      <param name="oldValue">An object which represents the changed property&#39;s old value.</param>
      <param name="newValue">An object which represents the changed property&#39;s new value.</param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectChangeEventArgs.#ctor(System.String,System.Object,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> class with the specified properties.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectChangeEventArgs.PropertyName"/> property.</param>
      <param name="oldValue">An object which represents the old value.</param>
      <param name="newValue">An object which represents the new value.</param>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeEventArgs.DisableObjectChangeEventArgsCache">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectChangeEventArgs.NewValue">
      <summary>
        <para>Gets or sets the property&#39;s new value.</para>
      </summary>
      <value>The property&#39;s new value.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectChangeEventArgs.Object">
      <summary>
        <para>Gets or sets the object whose property has been changed.</para>
      </summary>
      <value>The object whose property has been changed.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectChangeEventArgs.OldValue">
      <summary>
        <para>Gets or sets the property&#39;s old value.</para>
      </summary>
      <value>The property&#39;s old value.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectChangeEventArgs.PropertyName">
      <summary>
        <para>Gets the name of the property affected by the changes made.</para>
      </summary>
      <value>The name of the property affected by the changes.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectChangeEventArgs.Reason">
      <summary>
        <para>Gets the way in which the object has been changed.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.ObjectChangeReason"/> enumeration value which represents the way in which the object has been changed.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectChangeEventArgs.Session">
      <summary>
        <para>Gets or sets the Session of the object whose property has been changed.</para>
      </summary>
      <value>The Session of the object whose property has been changed.</value>
    </member>
    <member name="T:DevExpress.Xpo.ObjectChangeEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Xpo.XPBaseObject.Changed"/> event.</para>
      </summary>
      <param name="sender">The event sender. Identifies the object that raised the event.</param>
      <param name="e">An <see cref="T:DevExpress.Xpo.ObjectChangeEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.ObjectChangeReason">
      <summary>
        <para>Lists the values that indicate the way in which the object has been changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.BeforePropertyDescriptorChangeWithinBeginEdit">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.BeginEdit">
      <summary>
        <para>Begins an edit on an object.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.CancelEdit">
      <summary>
        <para>Any changes made to an object have been discarded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.Delete">
      <summary>
        <para>An object has been deleted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.EndEdit">
      <summary>
        <para>Editing has finished.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.PropertyChanged">
      <summary>
        <para>The value of the object&#39;s property has been changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ObjectChangeReason.Reset">
      <summary>
        <para>An object&#39;s property has been initialized with its default value.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.ObjectManipulationEventArgs">
      <summary>
        <para>Provides data for the object manipulating events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectManipulationEventArgs.#ctor(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectManipulationEventArgs"/> class.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> object. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectManipulationEventArgs.Session"/> property.</param>
      <param name="theObject">An object which is currently being processed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectManipulationEventArgs.Object"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectManipulationEventArgs.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectManipulationEventArgs"/> class.</para>
      </summary>
      <param name="theObject">An object which is currently being processed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectManipulationEventArgs.Object"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.ObjectManipulationEventArgs.Object">
      <summary>
        <para>Gets the object currently being processed.</para>
      </summary>
      <value>The object which is currently being processed.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectManipulationEventArgs.Session">
      <summary>
        <para>Gets the session whose persistent object is currently being processed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object whose persistent object is being processed.</value>
    </member>
    <member name="T:DevExpress.Xpo.ObjectManipulationEventHandler">
      <summary>
        <para>Represents a method that will handle events that process a persistent object.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">An <see cref="T:DevExpress.Xpo.ObjectManipulationEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.ObjectsByKeyQuery">
      <summary>
        <para>Provides data for queries that retrieve persistent objects by key values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectsByKeyQuery.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> class with the persistent class&#39;s metadata information about persistent objects, to include in the query and their key values.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant providing the persistent class&#39;s metadata.</param>
      <param name="idCollection">A collection of key property values.</param>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsByKeyQuery.ClassInfo">
      <summary>
        <para>Gets the persistent class&#39;s metadata information for persistent objects to include in the query.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant, providing the persistent class&#39;s metadata.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsByKeyQuery.IdCollection">
      <summary>
        <para>Gets a collection of key property values of persistent objects to include in the query.</para>
      </summary>
      <value>A collection of key property values.</value>
    </member>
    <member name="T:DevExpress.Xpo.ObjectsManipulationEventArgs">
      <summary>
        <para>Provides data for object manipulation events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectsManipulationEventArgs.#ctor(DevExpress.Xpo.Session,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ObjectsManipulationEventArgs"/> class.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object whose persistent objects are being processed. This value is assigned to the <see cref="P:DevExpress.Xpo.ObjectsManipulationEventArgs.Session"/> property.</param>
      <param name="objects">The collection of persistent objects that are involved in processing. This collection is assigned to the <see cref="P:DevExpress.Xpo.ObjectsManipulationEventArgs.Objects"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsManipulationEventArgs.Objects">
      <summary>
        <para>Gets the collection of persistent objects that are currently being processed.</para>
      </summary>
      <value>The collection of persistent objects involved in processing.</value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsManipulationEventArgs.Session">
      <summary>
        <para>Gets the session whose persistent objects are currently being processed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object whose persistent objects are being processed.</value>
    </member>
    <member name="T:DevExpress.Xpo.ObjectsManipulationEventHandler">
      <summary>
        <para>Represents a method that will handle a session&#39;s <see cref="E:DevExpress.Xpo.Session.ObjectsLoaded"/> and <see cref="E:DevExpress.Xpo.Session.ObjectsSaved"/> events.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">An <see cref="T:DevExpress.Xpo.ObjectsManipulationEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.ObjectsQuery">
      <summary>
        <para>Contains essential information on an object query.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectsQuery.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,DevExpress.Xpo.Generators.CollectionCriteriaPatcher,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="criteria"></param>
      <param name="sorting"></param>
      <param name="topSelectedRecords"></param>
      <param name="collectionCriteriaPatcher"></param>
      <param name="force"></param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectsQuery.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,DevExpress.Xpo.Generators.CollectionCriteriaPatcher,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="criteria"></param>
      <param name="sorting"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <param name="collectionCriteriaPatcher"></param>
      <param name="force"></param>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.ClassInfo">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.CollectionCriteriaPatcher">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.Criteria">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.Force">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.SkipDuplicateCheck">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.SkipSelectedRecords">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.Sorting">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectsQuery.TopSelectedRecords">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.ObjectStubsQuery">
      <summary>
        <para>Contains information on queries passed via <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectStubsQuery.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ObjectStubsQuery.#ctor(DevExpress.Xpo.ObjectsQuery,DevExpress.Xpo.Session,DevExpress.Xpo.Helpers.NestedParentGuidMap,DevExpress.Xpo.XPObjectClassInfoStubCache)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="query"></param>
      <param name="session"></param>
      <param name="map"></param>
      <param name="classInfoCache"></param>
    </member>
    <member name="M:DevExpress.Xpo.ObjectStubsQuery.#ctor(DevExpress.Xpo.XPClassInfoStub,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="criteria"></param>
      <param name="sorting"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <param name="selectDeleted"></param>
      <param name="force"></param>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.ClassInfo">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.Criteria">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.Force">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.SelectDeleted">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.SkipSelectedRecords">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.Sorting">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.SortingStrings">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.ObjectStubsQuery.TopSelectedRecords">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.OptimisticLockingAttribute">
      <summary>
        <para>Specifies that a persistent object&#39;s state can be locked during a session.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingAttribute"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingAttribute.#ctor(DevExpress.Xpo.OptimisticLockingBehavior)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.OptimisticLockingAttribute.LockingKind"/> property.</para>
      </summary>
      <param name="lockingKind">An <see cref="T:DevExpress.Xpo.OptimisticLockingBehavior"/> enumeration value that specifies the locking behavior.</param>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.OptimisticLockingAttribute.Enabled"/> property.</para>
      </summary>
      <param name="enabled">true to enable optimistic locking; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.OptimisticLockingAttribute.Enabled"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingAttribute"/> class with the specified field name.</para>
      </summary>
      <param name="fieldName">A string that specifies the name of a system field. This value is assigned to the <see cref="P:DevExpress.Xpo.OptimisticLockingAttribute.FieldName"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingAttribute.DefaultFieldName">
      <summary>
        <para>Specifies the default name of a system field which is used to control object locking for objects that have the object locking option enabled.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.OptimisticLockingAttribute.Enabled">
      <summary>
        <para>Gets or sets whether optimistic locking is enabled.</para>
      </summary>
      <value>true to enable optimistic locking; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.OptimisticLockingAttribute.FieldName">
      <summary>
        <para>Gets the name of the system field which is used to control object locking for objects that have the object locking option enabled.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of a system field.</value>
    </member>
    <member name="P:DevExpress.Xpo.OptimisticLockingAttribute.LockingKind">
      <summary>
        <para>Specifies the locking behavior.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingBehavior"/> enumeration value that specifies the locking behavior.</value>
    </member>
    <member name="T:DevExpress.Xpo.OptimisticLockingBehavior">
      <summary>
        <para>Contains values that specify the field-level locking behavior.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingBehavior.ConsiderOptimisticLockingField">
      <summary>
        <para>The optimistic lock field is considered.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingBehavior.LockAll">
      <summary>
        <para>All properties are checked (requires that the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> property is set to true).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingBehavior.LockModified">
      <summary>
        <para>Modified properties are checked (requires that the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> property is set to true).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingBehavior.NoLocking">
      <summary>
        <para>Locking is disabled.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.OptimisticLockingIgnoredAttribute">
      <summary>
        <para>Applied to persistent properties. Disables the optimistic locking for the target property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingIgnoredAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingIgnoredAttribute"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.OptimisticLockingReadBehavior">
      <summary>
        <para>Lists the values that specify how XPO behaves when reloading changed objects (objects with different versions).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.Default">
      <summary>
        <para>The default behavior can be changed by setting the <see cref="P:DevExpress.Xpo.XpoDefault.OptimisticLockingReadBehavior"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.Ignore">
      <summary>
        <para>The changed objects are not reloaded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.MergeCollisionIgnore">
      <summary>
        <para>When the client-side and database values of a property are different, the client-side value persists. When field-level tracking is disabled (see <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/>), this value is treated like Mixed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.MergeCollisionReload">
      <summary>
        <para>When the client-side and database values of a property are different, the database value is reloaded. When field-level tracking is disabled (see <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/>), this value is treated like Mixed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.MergeCollisionThrowException">
      <summary>
        <para>When the client-side and database values of a property are different, an exception is thrown. When field-level tracking is disabled (see <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/>), this value is treated like the Mixed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.Mixed">
      <summary>
        <para>If a transaction has been started, the changed objects are not reloaded. Otherwise, the changed objects are automatically reloaded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.ReloadObject">
      <summary>
        <para>The changed objects are automatically reloaded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadBehavior.ThrowException">
      <summary>
        <para>An exception is thrown.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute">
      <summary>
        <para>Specifies the field-level optimistic locking settings of a persistent object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.#ctor(DevExpress.Xpo.OptimisticLockingReadBehavior)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.Behavior"/> property value.</para>
      </summary>
      <param name="behavior">An <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehavior"/> enumeration value that specifies how XPO behaves when reloading changed objects (objects with different versions).</param>
    </member>
    <member name="M:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.#ctor(DevExpress.Xpo.OptimisticLockingReadBehavior,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute"/> class with the specified <see cref="P:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.Behavior"/>  and <see cref="P:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.TrackPropertiesModifications"/> property values.</para>
      </summary>
      <param name="behavior">An <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehavior"/> enumeration value that specifies how XPO behaves when reloading changed objects (objects with different versions). Overrides the <see cref="P:DevExpress.Xpo.Session.OptimisticLockingReadBehavior"/> setting.</param>
      <param name="trackPropertiesModifications">true, if the persistent objects&#39; properties modifications are tracked; otherwise, false. Overrides the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> setting.</param>
    </member>
    <member name="P:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.Behavior">
      <summary>
        <para>Specifies how XPO behaves when reloading changed objects (objects with different versions).</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehavior"/> enumeration value that specifies how XPO behaves when reloading changed objects (objects with different versions). Overrides the <see cref="P:DevExpress.Xpo.Session.OptimisticLockingReadBehavior"/> setting.</value>
    </member>
    <member name="P:DevExpress.Xpo.OptimisticLockingReadBehaviorAttribute.TrackPropertiesModifications">
      <summary>
        <para>Specifies whether or not the persistent object properties modifications are tracked.</para>
      </summary>
      <value>true, if the persistent objects&#39; properties modifications are tracked; otherwise, false. Overrides the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> setting.</value>
    </member>
    <member name="T:DevExpress.Xpo.OptimisticLockingReadMergeBehavior">
      <summary>
        <para>Lists the values that specify how XPO behaves when merging changed objects (objects with different versions).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadMergeBehavior.Default">
      <summary>
        <para>The changed objects are automatically reloaded. The default behavior can be changed by setting the <see cref="P:DevExpress.Xpo.XpoDefault.OptimisticLockingReadBehavior"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadMergeBehavior.Ignore">
      <summary>
        <para>The client-side value persists.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadMergeBehavior.Reload">
      <summary>
        <para>The database value is reloaded.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.OptimisticLockingReadMergeBehavior.ThrowException">
      <summary>
        <para>An exception is thrown.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.PersistentAliasAttribute">
      <summary>
        <para>Indicates that a property is not persistent and its value is calculated based upon the values of a specific field(s).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.PersistentAliasAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.PersistentAliasAttribute"/> class.</para>
      </summary>
      <param name="aliasExpression">A <see cref="T:System.String"/> value which specifies the expression used to evaluate the property value. This value is assigned to the <see cref="P:DevExpress.Xpo.PersistentAliasAttribute.AliasExpression"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.PersistentAliasAttribute.AliasExpression">
      <summary>
        <para>Gets the expression  which determines how the property&#39;s value is calculated.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the expression  which determines how the property&#39;s value is calculated.</value>
    </member>
    <member name="T:DevExpress.Xpo.PersistentAttribute">
      <summary>
        <para>Indicates that a property, field or class will be stored in a persistent data store and specifies the target column or table name.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.PersistentAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.PersistentAttribute"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.PersistentAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.PersistentAttribute"/> class with the specified name for the table or column.</para>
      </summary>
      <param name="mapTo">A <see cref="T:System.String"/> value which specifies the name of the table or column to map a class or property/field to. This value is assigned to the <see cref="P:DevExpress.Xpo.PersistentAttribute.MapTo"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.PersistentAttribute.AttributeType">
      <summary>
        <para>Gets the type of the current instance.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.PersistentAttribute.MapTo">
      <summary>
        <para>Gets the name of the table or column to which to map a class or a property/field.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the name of the table or column to which to map a class or property/field.</value>
    </member>
    <member name="T:DevExpress.Xpo.PersistentBase">
      <summary>
        <para>Serves as a base for classes that represent persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.PersistentBase"/> class.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object that represents the session used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.PersistentBase.Session"/> property.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which provides the class metadata. This value is assigned to the <see cref="P:DevExpress.Xpo.PersistentBase.ClassInfo"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.AfterConstruction">
      <summary>
        <para>Invoked when the current object is about to be initialized after its creation.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.PersistentBase.ClassInfo">
      <summary>
        <para>Gets a value that provides access to the metadata information of a class gathered via Reflection.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which provides the class metadata.</value>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.PersistentBase.Fields">
      <summary>
        <para>Gets an object that contains field identifiers for Simplified Criteria Syntax.</para>
      </summary>
      <value>The FieldsClass object that can contain field identifies.</value>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.GetCustomPropertyStore(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and isn&#39;t intended to be used directly from your code.</para>
      </summary>
      <param name="theObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.PersistentBase"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.GetModificationsStore(System.Object)">
      <summary>
        <para>Returns an object that stores information about the modified properties when the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> option is enabled.</para>
      </summary>
      <param name="theObject">A persistent object that is modified.</param>
      <returns>An <see cref="T:DevExpress.Xpo.IXPModificationsStore"/> object that stores information about the modified properties.</returns>
    </member>
    <member name="P:DevExpress.Xpo.PersistentBase.IsDeleted">
      <summary>
        <para>Indicates whether the current persistent object is marked as deleted.</para>
      </summary>
      <value>true if the current object is marked as deleted; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.PersistentBase.IsLoading">
      <summary>
        <para>Indicates whether the object is currently being initialized.</para>
      </summary>
      <value>true if the object is currently being initialized; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.op_Equality(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.PersistentBase)">
      <summary>
        <para></para>
      </summary>
      <param name="prop"></param>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.op_Inequality(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.PersistentBase)">
      <summary>
        <para></para>
      </summary>
      <param name="prop"></param>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.PersistentBase.Session">
      <summary>
        <para>Gets the session used to load and save persistent objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object that represents the session used to load and save persistent objects.</value>
    </member>
    <member name="M:DevExpress.Xpo.PersistentBase.ToString">
      <summary>
        <para>Returns a string which represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which represents the current  <see cref="T:DevExpress.Xpo.PersistentBase"/> object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior">
      <summary>
        <para>Lists values that specify how filter criteria are evaluated within a transaction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior.BeforeTransaction">
      <summary>
        <para>Criteria are evaluated on the data store side. Objects created within a transaction (Cache), are not processed by the criteria. Objects modified within a transaction, are not processed. Instead, their images, stored in the data store, are processed by the criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior.InTransaction">
      <summary>
        <para>All objects (Data Store and Cache) are processed by the filter criteria.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.ResolveSessionEventArgs">
      <summary>
        <para>Provides data for an object&#39;s ResolveSession event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ResolveSessionEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ResolveSessionEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.ResolveSessionEventArgs.Session">
      <summary>
        <para>Specifies the session to be used to load and save persistent objects.</para>
      </summary>
      <value>An object that implements <see cref="T:DevExpress.Xpo.Helpers.ISessionProvider"/>.</value>
    </member>
    <member name="F:DevExpress.Xpo.ResolveSessionEventArgs.Tag">
      <summary>
        <para>Gets or sets an arbitrary object, which is passed with the <see cref="P:DevExpress.Xpo.ResolveSessionEventArgs.Session"/> property. When using the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/>, use Tag in the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event handler, to pass an object to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event handler.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.ResolveSessionEventHandler">
      <summary>
        <para>Represents a method that will handle an object&#39;s ResolveSession event.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Xpo.ResolveSessionEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.SchemaInitEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpo.IDataLayer.SchemaInit"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SchemaInitEventArgs.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.Data.IDbCommand)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SchemaInitEventArgs"/> class.</para>
      </summary>
      <param name="table">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides object metadata for the schema which has been created in storage. This value is assigned to the <see cref="P:DevExpress.Xpo.SchemaInitEventArgs.Table"/> property.</param>
      <param name="command">An object which implements the <see cref="T:System.Data.IDbCommand"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.SchemaInitEventArgs.Command"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.SchemaInitEventArgs.Command">
      <summary>
        <para>Gets an SQL statement which can be executed while connected to an SQL data source.</para>
      </summary>
      <value>An object which implements the <see cref="T:System.Data.IDbCommand"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.SchemaInitEventArgs.Table">
      <summary>
        <para>Gets an object metadata the schema for which has been created in storage.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which specifies object metadata the schema for which has been created in storage.</value>
    </member>
    <member name="T:DevExpress.Xpo.SchemaInitEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Xpo.Session.SchemaInit"/> event.</para>
      </summary>
      <param name="sender">The event source. Identifies the <see cref="T:DevExpress.Xpo.Session"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Xpo.SchemaInitEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.SerializableObjectLayer">
      <summary>
        <para>An object access layer used for units of work (or sessions) in distributed applications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> class with a specified parent session.</para>
      </summary>
      <param name="parentSession">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a parent session for the current object layer.</param>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.#ctor(DevExpress.Xpo.Session,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> class with a specified parent session and the <see cref="F:DevExpress.Xpo.SerializableObjectLayer.ThroughCommitMode"/> field value.</para>
      </summary>
      <param name="parentSession">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a parent session for the current object layer.</param>
      <param name="throughCommitMode">true if the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)"/> method call should automatically commit changes in the parentSession to properly update key fields and fields with enabled optimistic locking in the object layer&#39;s session; otherwise, false. The specified value initializes the object layer&#39;s <see cref="F:DevExpress.Xpo.SerializableObjectLayer.ThroughCommitMode"/> field.</param>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayer.CanLoadCollectionObjects">
      <summary>
        <para>Indicates if an object layer can call the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method to load collection properties.</para>
      </summary>
      <value>true if collections can be loaded via an object layer&#39;s <see cref="M:DevExpress.Xpo.SerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)"/> method call; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)">
      <summary>
        <para>Performs object layer specific operations that are required to commit changes made to specified objects and return information on modified objects.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="objectsForDelete">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on objects marked for deletion.</param>
      <param name="objectsForSave">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on objects marked for saving.</param>
      <param name="lockingOption">A <see cref="T:DevExpress.Xpo.LockingOption"/> enumeration value specifying whether check for optimistic locking is made.</param>
      <returns>An array of CommitObjectStubsResult objects containing information on modified objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.CreateObjectType(System.String,System.String)">
      <summary>
        <para>Performs object layer specific operations that are required to create an <see cref="T:DevExpress.Xpo.XPObjectType"/> record.</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> value which specifies the assembly name to be assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.AssemblyName"/> property.</param>
      <param name="typeName">A <see cref="T:System.String"/> value, which specifies the type name to be assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.TypeName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.GetObjectsByKey(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.GetObjectStubsByKeyQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to return information on persistent objects retrieved from a data store, using queries based on specified object types and key values.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.GetObjectStubsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> objects containing information on retrieved objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.GetParentObjectsToDelete">
      <summary>
        <para>Performs object layer specific operations that are required to return information on persistent objects marked for deletion in parent sessions.</para>
      </summary>
      <returns>A SerializableObjectLayerResult instance that exposes an <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object containing information on persistent objects marked for deletion in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.GetParentObjectsToSave">
      <summary>
        <para>Performs object layer specific operations that are required to return information on persistent objects marked for saving in parent sessions.</para>
      </summary>
      <returns>A SerializableObjectLayerResult instance that exposes an <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object containing information on persistent objects loaded from the immediate parent session. <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> elements match objects marked for saving in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.GetParentTouchedClassInfos">
      <summary>
        <para>Performs object layer specific operations that are required to return metadata information on persistent objects modified in parent sessions.</para>
      </summary>
      <returns>An array of strings that can be used to identify metadata information for objects modified in parent sessions relative to an object layer&#39;s session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.IsParentObjectToDelete(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Performs object layer specific operations that are required to determine if a specified object corresponds to an object marked for deletion in parent sessions.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> instance identifying an object layer session&#39;s object to test.</param>
      <returns>true if the object identified by the theObject corresponds to one of the objects marked for deletion in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.IsParentObjectToSave(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Performs object layer specific operations that are required to determine if a specified object corresponds to an object marked for saving in parent sessions.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> instance identifying an object layer session&#39;s object to test.</param>
      <returns>true if the object identified by the theObject corresponds to one of the objects marked for saving in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.LoadCollectionObjects(DevExpress.Xpo.XPDictionaryStub,System.String,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>Performs object layer specific operations that are required to load a collection property using specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="refPropertyName">A <see cref="T:System.String"/> value specifying the ownerObject&#39;s property that references a collection property.</param>
      <param name="ownerObject">An <see cref="T:DevExpress.Xpo.XPObjectStub"/> specifying the object that owns the collection property.</param>
      <returns>A DevExpress.Xpo.SerializableObjectLayerResult`1&lt;<see cref="T:DevExpress.Xpo.XPObjectStubCollection"/>,&gt; object which contains information on collection objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStub,System.String[])">
      <summary>
        <para>Performs object layer specific operations that are required to load data to specific properties marked for delayed loading in a specified object.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">An array of strings specifying the delayed theObject&#39;s properties whose values are loaded.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of loaded property values corresponding to the props array elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.LoadDelayedProperties(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,System.String)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to a specific property marked for delayed loading in specified objects.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="objects">An <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object which contains information on persistent objects containing the delayed property specified by the property.</param>
      <param name="property">A <see cref="T:System.String"/> value specifying a delayed property whose values are loaded.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of loaded property values corresponding to the objects collection elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.LoadObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to load persistent objects using specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectStubsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array of <see cref="T:DevExpress.Xpo.XPObjectStubCollection"/> object collections corresponding to the queries.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayer.ObjectLayer">
      <summary>
        <para>Returns the current <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> object.</para>
      </summary>
      <value>The current <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> object cast to the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/>.</value>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayer.ParentSession">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.Purge">
      <summary>
        <para>Performs object layer specific operations that are required to remove all objects marked for deletion.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayer.SelectData(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.ObjectStubsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Performs object layer specific operations that are required to retrieve object data from a session, using specified query parameters.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.XPDictionaryStub"/> object that is a metadata information provider.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectStubsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>A SerializableObjectLayerResult instance that exposes an array whose elements are property values corresponding to the properties of objects retrieved from the associated session.</returns>
    </member>
    <member name="F:DevExpress.Xpo.SerializableObjectLayer.ThroughCommitMode">
      <summary>
        <para>Indicates if the <see cref="M:DevExpress.Xpo.SerializableObjectLayer.CommitObjects(DevExpress.Xpo.XPDictionaryStub,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.XPObjectStubCollection,DevExpress.Xpo.LockingOption)"/> method call automatically commits changes in a parent session to properly update key fields and fields with enabled optimistic locking (decorated with the <see cref="T:DevExpress.Xpo.KeyAttribute"/> or <see cref="T:DevExpress.Xpo.OptimisticLockingAttribute"/>) in a nested session. To assign the ThroughCommitMode field, use the corresponding <see cref="T:DevExpress.Xpo.SerializableObjectLayer"/> overloaded constructor.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.SerializableObjectLayerClient">
      <summary>
        <para>An object access layer that saves and loads persistent objects via an object implementing the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.#ctor(DevExpress.Xpo.ISerializableObjectLayer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SerializableObjectLayerClient"/> class with a specified object implementing the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> interface.</para>
      </summary>
      <param name="objectLayer">An object implementing the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> interface, which is used to save and load persistent objects.</param>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.#ctor(DevExpress.Xpo.ISerializableObjectLayer,DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SerializableObjectLayerClient"/> class with specified settings.</para>
      </summary>
      <param name="objectLayer">An object implementing the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> interface, which is used to save and load persistent objects.</param>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which provides metadata on persistent objects stored in a data store.</param>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.AutoCreateOption">
      <summary>
        <para>Returns an <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value associated with the current object layer.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to a data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.CanLoadCollectionObjects">
      <summary>
        <para>Indicates if an object layer can call the <see cref="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method to load collection properties.</para>
      </summary>
      <value>true if collections can be loaded via the object layer&#39;s <see cref="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method call; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.CommitChanges(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
        <para>Performs object layer specific operations that are required to commit object changes made in a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously commit object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been committed. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits specified object changes.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.Connection">
      <summary>
        <para>Provides access to the current object layer&#39;s <see cref="T:System.Data.IDbConnection"/> object that is used to access a database.</para>
      </summary>
      <value>An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.</value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.CreateObjectType(DevExpress.Xpo.XPObjectType)">
      <summary>
        <para>Performs object layer specific operations that are required to create an <see cref="T:DevExpress.Xpo.XPObjectType"/> record.</para>
      </summary>
      <param name="type">An <see cref="T:DevExpress.Xpo.XPObjectType"/> object specifying a valid persistent type.</param>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.DataLayer">
      <summary>
        <para>Provides access to the current object layer&#39;s data access layer which is used to access a data store.</para>
      </summary>
      <value>An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.Dictionary">
      <summary>
        <para>Gets an object providing metadata on persistent objects stored in a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which provides metadata on persistent objects stored in a data store.</value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetObjectLayerWideObjectTypes">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetObjectsByKey(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to return persistent objects from a specified session using queries based on specified object types and key values.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>An array of persistent object collections retrieved for query data passed as the queries parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetObjectsByKeyAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetParentObjectsToDelete(DevExpress.Xpo.Session)">
      <summary>
        <para>Performs object layer specific operations that are required to return a collection of objects marked for deletion in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which objects marked for deletion are loaded.</param>
      <returns>A collection of objects loaded to the session from the immediate parent session. Collection elements match objects marked for deletion in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetParentObjectsToSave(DevExpress.Xpo.Session)">
      <summary>
        <para>Performs object layer specific operations that are required to return a collection of objects marked for saving in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which objects marked for saving are loaded.</param>
      <returns>A collection of objects loaded to the session from the immediate parent session. Collection elements match objects marked for saving in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetParentTouchedClassInfos(DevExpress.Xpo.Session)">
      <summary>
        <para>Performs object layer specific operations that are required to return the metadata of objects modified in parent sessions relative to a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session whose immediate parent session starts the search for modified objects up the nesting session hierarchy.</param>
      <returns>A collection of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects identifying objects modified in parent sessions relative to the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.GetStaticCache(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="info"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.IsParentObjectToDelete(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to determine if a specified object corresponds to an object marked for deletion in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session which contains theObject.</param>
      <param name="theObject">The session&#39;s object to test.</param>
      <returns>true if theObject corresponds to one of the objects marked for deletion in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.IsParentObjectToSave(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to determine if a specified object corresponds to an object marked for saving in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session which contains theObject.</param>
      <param name="theObject">The session&#39;s object to test.</param>
      <returns>true if theObject corresponds to one of the objects marked for saving in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.IsStaticType(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to load a collection property using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load collection objects.</param>
      <param name="refProperty">The ownerObject&#39;s property that references a collection property.</param>
      <param name="ownerObject">The object that owns the collection property.</param>
      <returns>An array of collection objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadDelayedProperties(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to a specific property marked for delayed loading in specified objects.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects containing the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property whose values are loaded.</param>
      <returns>An ObjectDictionary of loaded property values that correspond to the objects list elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadDelayedProperties(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to specific properties marked for delayed loading in a specified object.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object containing member paths of delayed properties whose values are loaded.</param>
      <returns>An array of loaded property values that correspond to the props collection elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects that contain the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property that accepts the data the LoadDelayedPropertiesAsync method loads.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object that contains delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object that specifies member paths for delayed properties where the LoadDelayedPropertiesAsync method loads data from a session.</param>
      <param name="cancellationToken">A CancellationToken object that delivers cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadObjects(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to load persistent objects using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>An array of object collections that correspond to the queries.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously load persistent objects using specified settings and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <param name="callback">n AsyncLoadObjectsCallback delegate to be called after the objects have been loaded. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Loads persistent objects asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.ObjectLayer">
      <summary>
        <para>Returns the current <see cref="T:DevExpress.Xpo.SerializableObjectLayerClient"/> object.</para>
      </summary>
      <value>The current <see cref="T:DevExpress.Xpo.SerializableObjectLayerClient"/> object cast to the <see cref="T:DevExpress.Xpo.IObjectLayer"/>.</value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.Purge">
      <summary>
        <para>Performs object layer specific operations that are required to remove all objects marked for deletion.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.RegisterStaticTypes(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="types"></param>
    </member>
    <member name="E:DevExpress.Xpo.SerializableObjectLayerClient.SchemaInit">
      <summary>
        <para>Occurs when a data store&#39;s schema is initialized or updated for the current object layer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.SelectData(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Performs object layer specific operations that are required to retrieve object data from a session using specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.AsyncSelectDataCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously retrieve object data from a session using specified query parameters and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the object data have been retrieved. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieved persistent objects.</param>
      <param name="query">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to select data.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays match specified query parameters.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SerializableObjectLayerClient.SerializableObjectLayer">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.SetObjectLayerWideObjectTypes(System.Collections.Generic.Dictionary{DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.XPObjectType})">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="loadedTypes"></param>
    </member>
    <member name="M:DevExpress.Xpo.SerializableObjectLayerClient.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Performs object layer specific operations that are required to update a data store&#39;s schema according to the class descriptions of the specified types.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects specifying the types of objects for which schema should be created in the data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> enumeration value which specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.ServerExceptionThrownAction">
      <summary>
        <para>Lists the values that specify how to handle an exception thrown by a data server in Server Mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ServerExceptionThrownAction.Rethrow">
      <summary>
        <para>An exception is rethrown.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.ServerExceptionThrownAction.Skip">
      <summary>
        <para>An exception is consumed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.ServerExceptionThrownEventArgs">
      <summary>
        <para>Provides data for an object&#39;s <see cref="E:DevExpress.Xpo.XPServerCollectionSource.ServerExceptionThrown"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ServerExceptionThrownEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initialize a new instance of the <see cref="T:DevExpress.Xpo.ServerExceptionThrownEventArgs"/> class with a specified exception.</para>
      </summary>
      <param name="exception">The data server exception. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerExceptionThrownEventArgs.Exception"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ServerExceptionThrownEventArgs.#ctor(System.Exception,DevExpress.Xpo.ServerExceptionThrownAction)">
      <summary>
        <para>Initialize a new instance of the <see cref="T:DevExpress.Xpo.ServerExceptionThrownEventArgs"/> class with a specified exception and value indicating how the exception is to be handled.</para>
      </summary>
      <param name="exception">The data server exception. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerExceptionThrownEventArgs.Exception"/> property.</param>
      <param name="action">A <see cref="T:DevExpress.Xpo.ServerExceptionThrownAction"/> value indicating how the exception is to be handled.</param>
    </member>
    <member name="P:DevExpress.Xpo.ServerExceptionThrownEventArgs.Action">
      <summary>
        <para>Gets or sets how the data server exception is to be handled in Server Mode.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.ServerExceptionThrownAction"/> value indicating how the data server exception is to be handled.</value>
    </member>
    <member name="P:DevExpress.Xpo.ServerExceptionThrownEventArgs.Exception">
      <summary>
        <para>Gets the exception thrown by a data server in Server Mode.</para>
      </summary>
      <value>The data server exception.</value>
    </member>
    <member name="T:DevExpress.Xpo.ServerExceptionThrownEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Xpo.XPServerCollectionSource.ServerExceptionThrown"/> event.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">An <see cref="T:DevExpress.Xpo.ServerExceptionThrownEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.ServerViewPropertiesCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewPropertiesCollection.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/> class instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewPropertiesCollection.#ctor(DevExpress.Xpo.Helpers.IXPClassInfoProvider)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/> class instance and binds it to a specified owner - an IXPClassInfoProvider instance. The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata from the IXPClassInfoProvider is used internally.</para>
      </summary>
      <param name="owner">An IXPClassInfoProvider object that supplies <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata.</param>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewPropertiesCollection.Add(DevExpress.Xpo.ServerViewProperty)">
      <summary>
        <para>Adds a <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object to the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>.</para>
      </summary>
      <param name="property">A <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewPropertiesCollection.AddRange(DevExpress.Xpo.ServerViewProperty[])">
      <summary>
        <para>Adds an array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects to the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>.</para>
      </summary>
      <param name="properties">A array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewPropertiesCollection.AddRangeAsCopy(System.Collections.IEnumerable)">
      <summary>
        <para>Copies and adds an array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects to the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IEnumerable"/> list that contains objects to be copied and added to the collection.</param>
    </member>
    <member name="E:DevExpress.Xpo.ServerViewPropertiesCollection.CollectionChanged">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/> changes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.ServerViewPropertiesCollection.Item(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Gets an item from the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>. This item matches the specified expression.</para>
      </summary>
      <param name="expression">An expression that identifies an item to be retrieved from the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>.</param>
      <value>An <see cref="T:DevExpress.Xpo.ServerViewProperty"/> item that matches the specified expression.</value>
    </member>
    <member name="P:DevExpress.Xpo.ServerViewPropertiesCollection.Item(System.Int32)">
      <summary>
        <para>Gets an item that has the specified index from the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>.</para>
      </summary>
      <param name="index">An integer value that specifies an item&#39;s index.</param>
      <value>A <see cref="T:DevExpress.Xpo.ServerViewProperty"/> item that has the specified index.</value>
    </member>
    <member name="P:DevExpress.Xpo.ServerViewPropertiesCollection.Item(System.String)">
      <summary>
        <para>Gets an item that has the specified name from the <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/>.</para>
      </summary>
      <param name="name">A string value that specifies an item&#39;s name.</param>
      <value>A <see cref="T:DevExpress.Xpo.ServerViewProperty"/> item that has the specified name.</value>
    </member>
    <member name="T:DevExpress.Xpo.ServerViewProperty">
      <summary>
        <para>The ServerViewProperty stores information that specifies values to be loaded from the data server - property names, criteria, and sort order.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewProperty.#ctor">
      <summary>
        <para>Uses default settings to initialize a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewProperty.#ctor(System.String,DevExpress.Xpo.SortDirection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Uses specified name, sorting, and property values to initialize a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> instance.</para>
      </summary>
      <param name="name">A property name that is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value that specifies the property values&#39; sort order. The value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Sorting"/> property.</param>
      <param name="property">An expression that calculates values to be displayed in a column. The expression is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewProperty.#ctor(System.String,DevExpress.Xpo.SortDirection,System.String)">
      <summary>
        <para>Uses specified name, sorting, and property values to initialize a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> instance.</para>
      </summary>
      <param name="name">A property name that is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value that specifies the property values&#39; sort order. The value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Sorting"/> property.</param>
      <param name="property">An expression that calculates values to be displayed in a column. The expression is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ServerViewProperty.#ctor(System.String,System.String)">
      <summary>
        <para>Uses specified name and property values to initialize a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> instance.</para>
      </summary>
      <param name="name">A property name that is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="property">An expression that calculates values to be displayed in a column. The expression is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.ServerViewProperty.Name">
      <summary>
        <para>Gets or sets the property&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the property name.</value>
    </member>
    <member name="P:DevExpress.Xpo.ServerViewProperty.Property">
      <summary>
        <para>Gets or sets the criteria to calculate property values.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant that contains the expression to calculate property values.</value>
    </member>
    <member name="E:DevExpress.Xpo.ServerViewProperty.PropertyChanged">
      <summary>
        <para>Occurs when the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/>, <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/>, or <see cref="P:DevExpress.Xpo.ServerViewProperty.Sorting"/> property&#39;s value changes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.ServerViewProperty.Sorting">
      <summary>
        <para>Gets or sets the sort order for the property values to be retrieved from the data server.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value that specifies the property values&#39; sort order.</value>
    </member>
    <member name="T:DevExpress.Xpo.Session">
      <summary>
        <para>The session that is used to load and save persistent objects. See Session.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Session"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.#ctor(DevExpress.Xpo.IDataLayer,System.IDisposable[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Session"/> class and connects it to a data store.</para>
      </summary>
      <param name="layer">An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.DataLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects that implement the System.IDisposable interface. These objects are automatically disposed of when the session is disconnected.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.#ctor(DevExpress.Xpo.IObjectLayer,System.IDisposable[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Session"/> class with specified settings and connects it to a data store.</para>
      </summary>
      <param name="layer">An object implementing the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.ObjectLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects that implement the <see cref="T:System.IDisposable"/> interface. These objects are automatically disposed of when the session is disconnected.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.#ctor(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.Session"/> instance using the specified metadata provider.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object, which is the metadata provider to be used by the newly instantiated session. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.Dictionary"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Session"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created Session instance.</param>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterBeginTrackingChanges">
      <summary>
        <para>Occurs after a transaction (an explicit transaction in an explicit unit of work) has been started tracking changes made to persistent objects.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterBeginTransaction">
      <summary>
        <para>Occurs after a transaction has been started via the BEGIN operation.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterCommitNestedUnitOfWork">
      <summary>
        <para>Fires after the nested unit of work has been committed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterCommitTransaction">
      <summary>
        <para>Occurs after a transaction has been completed via the COMMIT operation.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterConnect">
      <summary>
        <para>Occurs after a connection to a database has been established.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterDisconnect">
      <summary>
        <para>Occurs when a connection to a database is closed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterDropChanges">
      <summary>
        <para>Occurs after a list of tracked changes has been cleared.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterFlushChanges">
      <summary>
        <para>Occurs after tracked changes have been temporarily saved to a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.AfterRollbackTransaction">
      <summary>
        <para>Occurs after a transaction has been completed via the ROLLBACK operation.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Session.AutoCreateOption">
      <summary>
        <para>Gets or sets the action which is performed when the session is connected to a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when the session is connected to a data store.</value>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeBeginTrackingChanges">
      <summary>
        <para>Occurs when a transaction (an explicit transaction in an explicit unit of work) is about to be started to track changes made to persistent objects.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeBeginTransaction">
      <summary>
        <para>Occurs when a transaction is about to be started via the BEGIN operation.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeCommitNestedUnitOfWork">
      <summary>
        <para>Fires before the nested unit of work is committed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeCommitTransaction">
      <summary>
        <para>Occurs when a transaction is about to be completed via the COMMIT operation.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeConnect">
      <summary>
        <para>Occurs before the connection to a database is established.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeDisconnect">
      <summary>
        <para>Occurs before the connection to a database is detached.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeDropChanges">
      <summary>
        <para>Occurs when a list of tracked changes is about to be cleared.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeFlushChanges">
      <summary>
        <para>Occurs when tracked changes are about to be temporarily saved to a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforePreProcessCommitedList">
      <summary>
        <para>Fires after the <see cref="M:DevExpress.Xpo.Session.CommitTransaction"/> method has been called.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeRollbackTransaction">
      <summary>
        <para>Occurs when a transaction is about to be completed via the ROLLBACK operation.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.BeforeSave">
      <summary>
        <para>Occurs before a persistent object is saved in storage.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.BeginNestedUnitOfWork">
      <summary>
        <para>Creates a new nested unit of work.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Xpo.NestedUnitOfWork"/> object that represents the new nested unit of work.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.BeginTrackingChanges">
      <summary>
        <para>Enables tracking changes made to persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.BeginTransaction">
      <summary>
        <para>Starts a transaction.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.BulkLoad(DevExpress.Xpo.Helpers.IXPBulkLoadableCollection[])">
      <summary>
        <para>This method loads IXPBulkLoadableCollection objects passed as parameters.</para>
      </summary>
      <param name="collections">An array of collections to be populated.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.BulkLoad(DevExpress.Xpo.XPBaseCollection[])">
      <summary>
        <para>This method loads <see cref="T:DevExpress.Xpo.XPBaseCollection"/> objects passed as parameters.</para>
      </summary>
      <param name="collections">An array of collections to be populated.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.BulkLoadAsync(System.Threading.CancellationToken,DevExpress.Xpo.Helpers.IXPBulkLoadableCollection[])">
      <summary>
        <para>Asynchronously retrieves persistent objects to populate specified IXPBulkLoadableCollection type collections.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="collections">An array of empty IXPBulkLoadableCollection type collections that receive persistent objects from a data store.</param>
      <returns>A Task that populates specified collections.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.BulkLoadAsync(System.Threading.CancellationToken,DevExpress.Xpo.XPBaseCollection[])">
      <summary>
        <para>Asynchronously retrieves persistent objects to populate specified <see cref="T:DevExpress.Xpo.XPBaseCollection"/> type collections.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="collections">An array of empty <see cref="T:DevExpress.Xpo.XPBaseCollection"/> type collections that receive persistent objects from a data store.</param>
      <returns>A Task that populates specified collections.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Session.CacheBehavior">
      <summary>
        <para>Gets or sets the session&#39;s cache behavior.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.CacheBehavior"/> enumeration value that specifies the session&#39;s cache behavior.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.CancelAsyncRequest(System.Object)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="asyncResult"></param>
    </member>
    <member name="P:DevExpress.Xpo.Session.CaseSensitive">
      <summary>
        <para>Gets or sets whether string comparisons evaluated by the session on the client are case-sensitive.</para>
      </summary>
      <value>true if string comparisons are case-sensitive; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.ClearDatabase">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.CollectReferencingObjects(System.Object)">
      <summary>
        <para>Returns a collection of persistent objects that refer to the specified object.</para>
      </summary>
      <param name="target">The target persistent object.</param>
      <returns>A collection of persistent objects that refer to the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.CollectReferencingObjects(System.Object,DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,System.Boolean)">
      <summary>
        <para>Returns a collection of persistent objects that refer to the specified object.</para>
      </summary>
      <param name="target">The target persistent object.</param>
      <param name="behavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="selectDeleted">true to include persistent objects marked for deletion in the search; otherwise, false.</param>
      <returns>A collection of persistent objects that refer to the specified object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.CommitTransaction">
      <summary>
        <para>Commits changes made within a transaction and completes it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.CommitTransactionAsync(DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Asynchronously commits changes made within a transaction, completes it and notifies upon completion.</para>
      </summary>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been saved to a data store. Use a callback to store the exception information passed as a parameter, and use this information later to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.CommitTransactionAsync(System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made within a transaction, completes the transaction, and notifies upon completion.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits object changes made within a transaction and completes the transaction.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.Connect">
      <summary>
        <para>Connects the session to a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.Connect(DevExpress.Xpo.IDataLayer,System.IDisposable[])">
      <summary>
        <para>Connects the session to a data store using a specified data access layer.</para>
      </summary>
      <param name="layer">An object implementing the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</param>
      <param name="disposeOnDisconnect">An array of objects to be automatically disposed of when the session is disconnected from a data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.Connect(DevExpress.Xpo.IObjectLayer,System.IDisposable[])">
      <summary>
        <para>Connects the session to a data store using a specified object access layer.</para>
      </summary>
      <param name="layer">An object implementing the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface. This object is assigned to the session&#39;s <see cref="P:DevExpress.Xpo.Session.ObjectLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects to be automatically disposed of when the session is disconnected from a data store.</param>
    </member>
    <member name="P:DevExpress.Xpo.Session.Connection">
      <summary>
        <para>Gets or sets an <see cref="T:System.Data.IDbConnection"/> object associated with the session.</para>
      </summary>
      <value>An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.ConnectionString">
      <summary>
        <para>Gets or sets the string which is used to open a database.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the parameters needed to establish the initial connection.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords">
      <summary>
        <para>Stores valid persistent types for all the types which are defined within the assemblies that have been loaded in the current application domain.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Stores valid persistent types for the specified persistent class metadata information.</para>
      </summary>
      <param name="types">An array of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects for which the persistent types will be stored in the metadata information.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(System.Boolean)">
      <summary>
        <para>Stores valid persistent types for all the types which are defined within the assemblies that have been loaded in the current application domain.</para>
      </summary>
      <param name="createOnlyNecessary">true, to create object type records only for types that require this to function properly, such as types from inheritance chains, or types utilizing deferred deletion; false, to create object type records for all persistent types.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Stores valid persistent types for the specified persistent class metadata information.</para>
      </summary>
      <param name="createOnlyNecessary">true, to create object type records only for types that require this to function properly, such as types from inheritance chains, or types utilizing deferred deletion; false, to create object type records for all persistent types.</param>
      <param name="types">An array of the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects for which the persistent types will be stored in the metadata information.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(System.Boolean,System.Reflection.Assembly[])">
      <summary>
        <para>Stores valid persistent types for all the types which are defined within the specified assemblies.</para>
      </summary>
      <param name="createOnlyNecessary">true, to create object type records only for types that require this to function properly, such as types from inheritance chains, or types utilizing deferred deletion; false, to create object type records for all persistent types.</param>
      <param name="assemblies">An array of assemblies which contain the class types for which the persistent types will be stored in the metadata information.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(System.Boolean,System.Type[])">
      <summary>
        <para>Stores valid persistent types for the specified class types.</para>
      </summary>
      <param name="createOnlyNecessary">true, to create object type records only for types that require this to function properly, such as types from inheritance chains, or types utilizing deferred deletion; false, to create object type records for all persistent types.</param>
      <param name="types">An array of class types for which the persistent types will be stored in the metadata information.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(System.Reflection.Assembly[])">
      <summary>
        <para>Stores valid persistent types for all the types which are defined within the specified assemblies.</para>
      </summary>
      <param name="assemblies">An array of assemblies which contain the class types for which the persistent types will be stored in the metadata information.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.CreateObjectTypeRecords(System.Type[])">
      <summary>
        <para>Stores valid persistent types for the specified class types.</para>
      </summary>
      <param name="types">An array of class types for which the persistent types will be stored in the metadata information.</param>
    </member>
    <member name="P:DevExpress.Xpo.Session.DataLayer">
      <summary>
        <para>Gets the data access layer used by the current session to access a data store.</para>
      </summary>
      <value>An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.DefaultSession">
      <summary>
        <para>Gets the pre-initialized default session for simple applications.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object which is the default session.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.Delete(System.Collections.ICollection)">
      <summary>
        <para>Deletes the specified persistent objects and their aggregated objects from the data store.</para>
      </summary>
      <param name="objects">A collection of persistent objects to delete from the data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.Delete(System.Object)">
      <summary>
        <para>Deletes the specified persistent object and its aggregated objects from persistent storage.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object to delete.</param>
    </member>
    <member name="P:DevExpress.Xpo.Session.Dictionary">
      <summary>
        <para>Gets metadata on persistent objects in a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which provides metadata on persistent objects in a data store.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.Disconnect">
      <summary>
        <para>Disconnects the session from a database.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.DropCache">
      <summary>
        <para>Clears the object cache.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.DropChanges">
      <summary>
        <para>Discards changes made to persistent objects and clears a list of tracked changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.DropIdentityMap">
      <summary>
        <para>Clears the Identity Map.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.Evaluate(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression for objects of the specified type.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the type of objects against which the expression will be evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
      <returns>The value evaluated.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.Evaluate(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression for objects of the specified type.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression will be evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
      <returns>The value evaluated.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.Evaluate``1(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression for objects of the type designated by the specified generic type parameter.</para>
      </summary>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to be evaluated.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria will be used to evaluate the expression.</param>
      <returns>The evaluated value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously evaluates the specified expression against objects of the specified type.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the type of objects against which the expression is evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The methods evaluates the expression against objects that match these criteria.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a value. This value is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateAsync(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously evaluates the specified expression against objects of the specified type.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression is evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The method evaluates the expression against objects that match these criteria.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a value. This value is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateInTransaction(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression for objects of the specified type, taking into account all in-memory object changes.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the type of objects against which the expression will be evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The objects that match this criteria (based on in-memory object changes) will be used to evaluate the expression.</param>
      <returns>The value evaluated.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateInTransaction(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression against objects of the specified type. Accounts for all in-memory object changes.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression is evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The method evaluates the expression against objects that match these criteria.</param>
      <returns>A value, which is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateInTransaction``1(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression against objects whose type is designated by the generic parameter. Accounts for all in-memory object changes.</para>
      </summary>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The method evaluates the expression against objects that match these criteria.</param>
      <returns>A value, which is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateInTransactionAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously evaluates the specified expression against objects of the specified type. Accounts for all in-memory object changes.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the type of objects against which the expression is evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The methods evaluates the expression against objects that match these criteria.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a value. This value is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateInTransactionAsync(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously evaluates the specified expression against objects of the specified type. Accounts for all in-memory object changes.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that identifies the type of objects against which the expression is evaluated.</param>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The methods evaluates the expression against objects that match these criteria.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a value. This value is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.EvaluateInTransactionAsync``1(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously evaluates the specified expression against objects whose type is designated by the generic parameter. Accounts for all in-memory object changes.</para>
      </summary>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria. The methods evaluates the expression against objects that match these criteria.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a value. This value is the evaluation&#39;s result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteNonQuery(System.String)">
      <summary>
        <para>Executes the specified SQL statement and returns the number of rows affected.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL statement.</param>
      <returns>The number of rows affected by the executed SQL statement.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteNonQuery(System.String,System.Object[])">
      <summary>
        <para>Executes the specified SQL statement and returns the number of rows affected.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>The number of rows affected by the executed SQL statement.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteNonQuery(System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes the specified SQL statement and returns the number of rows affected.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>The number of rows affected by the executed SQL statement.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteNonQueryAsync(System.String,System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously executes the specified SQL statement and returns the number of rows affected.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL statement.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an Int32 value. This value demonstrates how many of rows the specified SQL statement affects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteNonQueryAsync(System.String,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously executes the specified SQL statement and returns the number of rows affected.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL statement.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an Int32 value. This value demonstrates how many of rows the specified SQL statement affects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteNonQueryAsync(System.Threading.CancellationToken,System.String,System.String[],System.Object[])">
      <summary>
        <para>Asynchronously executes the specified SQL statement and returns the number of rows affected.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL statement.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A Task that returns an Int32 value. This value demonstrates how many of rows the specified SQL statement affects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQuery(System.String)">
      <summary>
        <para>Executes the specified SQL query and returns a result set.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object, specifying the query&#39;s result set.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQuery(System.String,System.Object[])">
      <summary>
        <para>Executes the specified SQL query and returns a result set.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object, specifying the query&#39;s result set.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQuery(System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes the specified SQL query and returns a result set.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object, specifying the query&#39;s result set.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryAsync(System.String,System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously executes the specified SQL query and returns a result set.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryAsync(System.String,System.String[],System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously executes the specified SQL query and returns a result set.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryAsync(System.String,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously executes the specified SQL query and returns a result set.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryWithMetadata(System.String)">
      <summary>
        <para>Executes the specified SQL query and returns its result set along with the types and names of retrieved columns.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object, specifying the query&#39;s result set and the types and names of retrieved columns.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryWithMetadata(System.String,System.Object[])">
      <summary>
        <para>Executes the specified SQL query and returns its result set along with the types and names of retrieved columns.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object, specifying the query&#39;s result set and the types and names of retrieved columns.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryWithMetadata(System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes the specified SQL query and returns its result set along with the types and names of retrieved columns.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object, specifying the query&#39;s result set and the types and names of retrieved columns.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryWithMetadataAsync(System.String,System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="sql"></param>
      <param name="parameterValues"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryWithMetadataAsync(System.String,System.String[],System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="sql"></param>
      <param name="parameterNames"></param>
      <param name="parameterValues"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteQueryWithMetadataAsync(System.String,System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="sql"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteScalar(System.String)">
      <summary>
        <para>Executes the specified SQL query and returns the first column of the first row in the result set returned by the query.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <returns>The first column of the first row in the query&#39;s result set. If the column is not found in the result set, a null reference (Nothing in Visual Basic) is returned. If the value in the database is null, DBNull.Value is returned.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteScalar(System.String,System.Object[])">
      <summary>
        <para>Executes the specified SQL query and returns the first column of the first row in the result set returned by the query.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>The first column of the first row in the query&#39;s result set. If the column is not found in the result set, a null reference (Nothing in Visual Basic) is returned. If the value in the database is null, DBNull.Value is returned.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteScalar(System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes the specified SQL query and returns the first column of the first row in the result set returned by the query.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterNames">An array of strings specifying names of the parameterValues parameters.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>The first column of the first row in the query&#39;s result set. If the column is not found in the result set, a null reference (Nothing in Visual Basic) is returned. If the value in the database is null, DBNull.Value is returned.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteScalarAsync(System.String,System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para>Executes the specified SQL query and returns the first column of the first row in the result set returned by the query.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>The first column of the first row in the query&#39;s result set. If the column is not found in the result set, a null reference (Nothing in Visual Basic) is returned. If the value in the database is null, DBNull.Value is returned.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteScalarAsync(System.String,System.String[],System.Object[],System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously executes the specified SQL query and returns the first column of the first row in the result set returned by the query.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterNames">An array of strings specifying names of the parameterValues parameters.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>The first column of the first row in the query&#39;s result set. If the column is not found in the result set, a null reference (Nothing in Visual Basic) is returned. If the value in the database is null, DBNull.Value is returned.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteScalarAsync(System.String,System.Threading.CancellationToken)">
      <summary>
        <para>Executes the specified SQL query and returns the first column of the first row in the result set returned by the query.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>The first column of the first row in the query&#39;s result set. If the column is not found in the result set, a null reference (Nothing in Visual Basic) is returned. If the value in the database is null, DBNull.Value is returned.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteSproc(System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes the specified stored procedure and returns its result set.</para>
      </summary>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects specifying parameters to pass to the stored procedure.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object specifying the result set returned by the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteSprocAsync(System.Threading.CancellationToken,System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="sprocName"></param>
      <param name="parameters"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteSprocParametrized(System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes the specified stored procedure with the named parameters and returns its result set.</para>
      </summary>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object specifying the result set returned by the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExecuteSprocParametrizedAsync(System.Threading.CancellationToken,System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="sprocName"></param>
      <param name="parameters"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitBeginTransaction">
      <summary>
        <para>Marks the starting point of an explicit transaction.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitBeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Marks the starting point of an explicit transaction that is started with the specified <see cref="T:System.Data.IsolationLevel"/> value.</para>
      </summary>
      <param name="isolationLevel">A <see cref="T:System.Data.IsolationLevel"/> enumeration value, specifying the transaction locking behavior for a session&#39;s connection.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitBeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="isolationLevel"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitBeginTransactionAsync(System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitCommitTransaction">
      <summary>
        <para>Completes an explicit transaction and commits changes made within it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitCommitTransactionAsync(System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously completes an explicit transaction and commits changes made within the transaction.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits changes made within an explicit transaction and completes the transaction.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitRollbackTransaction">
      <summary>
        <para>Completes an explicit transaction and rolls back changes made within it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.ExplicitRollbackTransactionAsync(System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="E:DevExpress.Xpo.Session.FailedCommitTransaction">
      <summary>
        <para>Occurs when the Commit Transaction operation fails due to database constraints or other circumstances.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.FailedFlushChanges">
      <summary>
        <para>Occurs when the Flush Changes operation fails due to database constraints or other circumstances.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="selectDeleted">true to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="selectDeleted">true to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="objType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects to.</param>
      <returns>An object which represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Searches for the first object which matches the specified criteria.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects to.</param>
      <param name="selectDeleted">true to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <returns>An object which represents the first persistent object which matches the specified criteria. null (Nothing in Visual Basic) if no persistent object which matches the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject``1(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Searches for the first object of the type designated by the specified generic type parameter which matches the specified criteria.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <returns>An object which represents the first persistent object matching the specified criteria. null (Nothing in Visual Basic) if no persistent object matching the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Searches for the first object of the type designated by the specified generic type parameter which matches the specified criteria.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="selectDeleted">true to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <returns>An object which represents the first persistent object matching the specified criteria. null (Nothing in Visual Basic) if no persistent object matching the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObject``1(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Searches for the first object of the type designated by the specified generic type parameter which matches the specified criteria.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <returns>An object which represents the first persistent object matching the specified criteria. null (Nothing in Visual Basic) if no persistent object matching the criteria is found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria, and notifies upon completion.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria, and notifies upon completion.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="selectDeleted">true to include persistent objects marked for deletion into the search; otherwise, false.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information. This data specifies which class needs to be searched.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="selectDeleted">true, to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information. This data specifies which class needs to be searched.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria, and notifies upon completion.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria, and notifies upon completion.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="selectDeleted">true to include persistent objects marked for deletion into the search; otherwise, false.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information. This data specifies which class needs to be searched.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="selectDeleted">true, to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="objType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="selectDeleted">true, to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync(System.Type,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync``1(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria and has the type designated by the generic type parameter, and notifies upon completion.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria and has the type designated by the generic type parameter, and notifies upon completion.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="selectDeleted">true to include persistent objects marked as deleted in the search; otherwise, false.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync``1(DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria. This object&#39;s type is designated by the specified generic parameter.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="selectDeleted">true, to include persistent objects marked as deleted into the search; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync``1(DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria. This object&#39;s type is designated by the specified generic parameter.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync``1(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.Helpers.AsyncFindObjectCallback)">
      <summary>
        <para>Asynchronously searches for the first object which matches the specified criteria and has the type designated by the generic type parameter, and notifies upon completion.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria to match persistent objects.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncFindObjectCallback delegate to be called after the method completes.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object used internally to manage an asynchronous operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FindObjectAsync``1(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously searches for the first object that matches the specified criteria. This object&#39;s type is designated by the specified generic parameter.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria is evaluated.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria the persistent object must match.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object represents the first persistent object that matches the specified criteria. null (Nothing in Visual Basic) if no persistent object is found that matches the criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FlushChanges">
      <summary>
        <para>Saves changes made to persistent objects to a data store, and clears a list of tracked changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.FlushChangesAsync(DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Asynchronously saves changes made to persistent objects to a data store, clears a list of tracked changes and notifies upon completion.</para>
      </summary>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after changes have been saved and a list of tracked changes has been cleared. This collection is passed as a parameter to callback. Use a callback to store the exception information passed as a parameter, and use this information later to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.FlushChangesAsync(System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously saves changes made to persistent objects to a data store and clears a tracked changes list.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that saves changes made to persistent objects to a data store and clears a tracked changes list.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetCacheBehavior">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetClassInfo(System.Object)">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified persistent object.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides metadata information for the specified persistent object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetClassInfo(System.String,System.String)">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified assembly and class.</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> value which specifies the assembly name.</param>
      <param name="className">A <see cref="T:System.String"/> value which specifies the class name.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides metadata information for the specified assembly and class.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetClassInfo(System.Type)">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified type of class.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the class type.</param>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides metadata information for the class of the specified type.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetClassInfo``1">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the type designated by the specified generic type parameter.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides metadata information for a class of the specified type.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetIdentityMapBehavior">
      <summary>
        <para>This method is intended for internal use only.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetKeyValue(System.Object)">
      <summary>
        <para>Returns the key property&#39;s value of the specified persistent object.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object whose key property&#39;s value is returned.</param>
      <returns>An object which represents the key property&#39;s value of the specified persistent object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetLoadedObjectByKey(DevExpress.Xpo.Metadata.XPClassInfo,System.Object)">
      <summary>
        <para>Returns the persistent object with the specified value of the key property that has been already loaded from a data store.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant that contains the metadata information of the class.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <returns>An object which represents the persistent object with the specified value of the key property. null (Nothing in Visual Basic) if the persistent object was not found in memory.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetLoadedObjectByKey(System.Type,System.Object)">
      <summary>
        <para>Returns the persistent object with the specified value of the key property that has been already loaded from a data store.</para>
      </summary>
      <param name="classType">The <see cref="T:System.Type"/> of the persistent object.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <returns>An object which represents the persistent object with the specified value of the key property. null (Nothing in Visual Basic) if the persistent object was not found in memory.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetLoadedObjectByKey``1(System.Object)">
      <summary>
        <para>Returns the persistent object of the type designated by the specified generic type parameter, with the specified value of the key property previously loaded from a data store.</para>
      </summary>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <returns>An object which represents a persistent object with the specified value of the key property. null (Nothing in Visual Basic) if the persistent object was not found in memory.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKey(DevExpress.Xpo.Metadata.XPClassInfo,System.Object)">
      <summary>
        <para>Returns a persistent object with the specified value of the key property.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <returns>An object which represents the persistent object with the specified value of the key property. Null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKey(DevExpress.Xpo.Metadata.XPClassInfo,System.Object,System.Boolean)">
      <summary>
        <para>Returns the reloaded persistent object with the specified value of the key property from a data store.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <param name="alwaysGetFromDataStore">true, to reload the persistent object from storage if it is found in memory; otherwise, false.</param>
      <returns>An object which represents the persistent object with the specified value of the key property. Null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKey(System.Type,System.Object)">
      <summary>
        <para>Returns the persistent object that has the specified value for its key property.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="id">An object that represents the persistent object&#39;s key property value.</param>
      <returns>An object which represents the persistent object with the specified value for its key property. Null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKey(System.Type,System.Object,System.Boolean)">
      <summary>
        <para>Returns the reloaded persistent object with the specified value of the key property from a data store.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <param name="alwaysGetFromDataStore">true, to reload the persistent object from storage if it is found in memory; otherwise, false.</param>
      <returns>An object which represents the persistent object with the specified value of the key property. Null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKey``1(System.Object)">
      <summary>
        <para>Returns a persistent object of the type designated by the specified generic type parameter, with the specified value for its key property.</para>
      </summary>
      <param name="id">An object that represents the persistent object&#39;s key property value.</param>
      <returns>An object which represents a persistent object with the specified value for its key property. Null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKey``1(System.Object,System.Boolean)">
      <summary>
        <para>Returns a persistent object of the type designated by the specified generic type parameter, with the specified value for its key property.</para>
      </summary>
      <param name="id">An object that represents the persistent object&#39;s key property value.</param>
      <param name="alwaysGetFromDataStore">true, to reload the persistent object from storage if it is found in memory; otherwise, false.</param>
      <returns>An object which represents a persistent object with the specified value for its key property. Null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKeyAsync(DevExpress.Xpo.Metadata.XPClassInfo,System.Object,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns a persistent object that has the specified key property value from a data store.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <param name="alwaysGetFromDataStore">true, to always reload the persistent object from storage even if it is found in memory; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a persistent object from a data store. This persistent object has the specified key property value. The task returns null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKeyAsync(DevExpress.Xpo.Metadata.XPClassInfo,System.Object,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns a persistent object that has the specified key property value.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the class.</param>
      <param name="id">An object which represents the key property&#39;s value of the persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a persistent object. This persistent object has the specified key property value. The task returns null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKeyAsync(System.Type,System.Object,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns a persistent object that has the specified key property value from a data store.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="id">An object which represents the persistent object&#39;s key property value.</param>
      <param name="alwaysGetFromDataStore">true, to always reload the persistent object from storage even if it is found in memory; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a persistent object from a data store. This persistent object has the specified key property value. The task returns null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKeyAsync(System.Type,System.Object,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns a persistent object that has the specified key property value.</para>
      </summary>
      <param name="classType">A <see cref="T:System.Type"/> object which represents the type of objects to search for.</param>
      <param name="id">An object that represents the persistent object&#39;s key property value.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a persistent object. This persistent object has the specified key property value. The task returns null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKeyAsync``1(System.Object,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns a persistent object that has the specified key property value. The persistent object&#39;s type is set by the generic type parameter.</para>
      </summary>
      <param name="id">An object that represents the persistent object&#39;s key property value.</param>
      <param name="alwaysGetFromDataStore">true, to always reload the persistent object from storage even if it is found in memory; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a persistent object from a data store. This persistent object has the specified key property value and a type specified by the generic type parameter. The task returns null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectByKeyAsync``1(System.Object,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns a persistent object that has the specified key property value. The persistent object&#39;s type is set by the generic type parameter.</para>
      </summary>
      <param name="id">An object that represents the persistent object&#39;s key property value.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a persistent object. This persistent object has the specified key property value and a type specified by the generic type parameter. The task returns null if no objects are found.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjects(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,DevExpress.Xpo.Generators.CollectionCriteriaPatcher,System.Boolean)">
      <summary>
        <para>This GetObjects method overload is obsolete. Use the method overloads that do not take a CollectionCriteriaPatcher collectionCriteriaPatcher parameter.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="criteria"></param>
      <param name="sorting"></param>
      <param name="topSelectedRecords"></param>
      <param name="collectionCriteriaPatcher"></param>
      <param name="force"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjects(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Gets a collection of persistent objects that match the specified criteria.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information on the persistent objects to be returned.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the search criteria.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents a collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of returned objects.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the collection; otherwise, false.</param>
      <param name="force">true to reload the objects from a data store; otherwise, false.</param>
      <returns>A collection of persistent objects that match the specified criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjects(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Gets a collection of persistent objects that match the specified criteria.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information on the persistent objects to return.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the search criteria.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents a collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the collection.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of returned objects.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the collection; otherwise, false.</param>
      <param name="force">true to reload the objects from a data store; otherwise, false.</param>
      <returns>A collection of persistent objects that match the specified criteria.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjects(DevExpress.Xpo.ObjectsQuery[])">
      <summary>
        <para>Gets a collection of persistent objects returned by specified queries.</para>
      </summary>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>A collection of persistent objects returned by the queries.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Boolean,System.Boolean,DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Asynchronously gets a collection of persistent objects that match the specified criteria and notifies upon completion.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information on the persistent objects to be returned.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the search criteria.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents a collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of returned objects.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the collection; otherwise, false.</param>
      <param name="force">true to reload the objects from a data store; otherwise, false.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback delegate to be called after the collection has been retrieved. This collection is passed as a parameter to callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously retrieves persistent objects, according to specific criteria, and notifies upon completion.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information on the persistent objects to be returned.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the search criteria.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents a collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of returned objects.</param>
      <param name="selectDeleted">true, to include the persistent objects marked as deleted into the collection; otherwise, false.</param>
      <param name="force">true, to reload the objects from a data store; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a collection of obtained persistent objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean,System.Boolean,DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Asynchronously gets a collection of persistent objects that match the specified criteria and notifies upon completion.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information on the persistent objects to be returned.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the search criteria.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents a collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the collection.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of returned objects.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the collection; otherwise, false.</param>
      <param name="force">true to reload the objects from a data store; otherwise, false.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback delegate to be called after the collection has been retrieved. This collection is passed as a parameter to callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously retrieves persistent objects from specified queries.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information on the persistent objects to be returned.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the search criteria.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents a collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the collection.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of returned objects.</param>
      <param name="selectDeleted">true, to include the persistent objects marked as deleted into the collection; otherwise, false.</param>
      <param name="force">true, to reload the objects from a data store; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a collection of obtained persistent objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsAsync(DevExpress.Xpo.ObjectsQuery[],DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Asynchronously gets a collection of persistent objects that match the specified criteria and notifies upon completion.</para>
      </summary>
      <param name="queries">The search queries.</param>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback delegate to be called after the collection has been retrieved. This collection is passed as a parameter to callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsAsync(DevExpress.Xpo.ObjectsQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously retrieves persistent objects obtained from specified queries.</para>
      </summary>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specify queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a collection of obtained persistent objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKey(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.ICollection,System.Boolean)">
      <summary>
        <para>Returns reloaded persistent objects with specified key property values from a data store.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the persistent class.</param>
      <param name="idCollection">A collection of objects representing the persistent object&#39;s key property values.</param>
      <param name="alwaysGetFromDataStore">true to reload persistent objects from storage, if they are found in memory; otherwise, false.</param>
      <returns>A collection of persistent objects with specified key property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKey(DevExpress.Xpo.ObjectsByKeyQuery[],System.Boolean)">
      <summary>
        <para>Returns reloaded persistent objects from a data store, using queries based on specified object types and key values.</para>
      </summary>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <param name="alwaysGetFromDataStore">true to reload persistent objects from storage if they are found in memory; otherwise, false.</param>
      <returns>An array of persistent object collections retrieved for query data passed as the queries parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKeyAsync(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.ICollection,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns reloaded persistent objects that have specified key property values from a data store.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains persistent class metadata.</param>
      <param name="idCollection">An object collection that represents a persistent object&#39;s key property values.</param>
      <param name="alwaysGetFromDataStore">true, to always reload persistent objects from storage, even if they are found in memory; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. Objects in these collections match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKeyAsync(DevExpress.Xpo.ObjectsByKeyQuery[],System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously returns reloaded persistent objects that have specified key property values from a data store.</para>
      </summary>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> objects that store persistent object information and key values. Queries use this data to retrieve specific persistent objects.</param>
      <param name="alwaysGetFromDataStore">true, to always reload persistent objects from storage, even if they are found in memory; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKeyFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean,System.String)">
      <summary>
        <para>Returns reloaded persistent objects from a data store, with key property values obtained via the specified SQL query.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the persistent objects that are retrieved, based on the query&#39;s result set.</param>
      <param name="alwaysGetFromDataStore">true to reload persistent objects from storage, if they are found in memory; otherwise, false.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <returns>A collection of persistent objects with specified key property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKeyFromSproc(DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean,System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Returns reloaded persistent objects from a data store, with key property values obtained via the specified stored procedure.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information of the persistent objects that are retrieved based on the stored procedure&#39;s results.</param>
      <param name="alwaysGetFromDataStore">true to reload persistent objects from storage, if they are found in memory; otherwise, false.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of persistent objects with specified key property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsByKeyFromSprocParametrized(DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean,System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para></para>
      </summary>
      <param name="classInfo"></param>
      <param name="alwaysGetFromDataStore"></param>
      <param name="sprocName"></param>
      <param name="parameters"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[],System.String)">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for classInfo members and the query&#39;s result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. 
The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for classInfo members and the query&#39;s result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String)">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.String)">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.String,System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery(DevExpress.Xpo.Metadata.XPClassInfo,System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the query&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(DevExpress.Xpo.LoadDataMemberOrderItem[],System.String)">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for object members and the query&#39;s result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for object members and the query&#39;s result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for object members and the query&#39;s result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a parameterized SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String)">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing object members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing object members that are mapped to the query&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(System.String)">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(System.String,System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies an SQL query.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromQuery``1(System.String,System.String[],System.Object[])">
      <summary>
        <para>Executes a SQL query and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="sql">A <see cref="T:System.String"/> value that specifies a SQL query.</param>
      <param name="parameterNames">An array of strings specifying parameterValues parameter names.</param>
      <param name="parameterValues">An array of objects specifying parameters to pass to the database server along with the query.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified SQL query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSproc(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes a stored procedure and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the stored procedure&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for classInfo members and the stored procedure&#39;s result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSproc(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes a stored procedure and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the stored procedure&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the stored procedure&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSproc(DevExpress.Xpo.Metadata.XPClassInfo,System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes a stored procedure and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the stored procedure&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSproc``1(DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes a stored procedure and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for object members and the stored procedure&#39;s result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSproc``1(System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes a stored procedure and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing object members that are mapped to the stored procedure&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSproc``1(System.String,DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Executes a stored procedure and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects representing parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSprocParametrized(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes a stored procedure with named parameters and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the stored procedure&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for classInfo members and the stored procedure&#39;s result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSprocParametrized(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes a stored procedure with named parameters and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the stored procedure&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects representing classInfo members that are mapped to the stored procedure&#39;s result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSprocParametrized(DevExpress.Xpo.Metadata.XPClassInfo,System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes a stored procedure with named parameters and returns its result set as a collection of non-persistent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which contains the metadata information on a non-persistent class corresponding to the stored procedure&#39;s result set. The class must be decorated with <see cref="T:DevExpress.Xpo.NonPersistentAttribute"/>.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent classInfo objects instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSprocParametrized``1(DevExpress.Xpo.LoadDataMemberOrderItem[],System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes a stored procedure with named parameters and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information for object members and the stored procedure&#39;s result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSprocParametrized``1(System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo},System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes a stored procedure with named parameters and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="members">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects that contains mapping information for class members and result set columns. The order of list elements should correspond to the order of result set columns.</param>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsFromSprocParametrized``1(System.String,DevExpress.Xpo.DB.SprocParameter[])">
      <summary>
        <para>Executes a stored procedure with named parameters and returns its result set as a collection of objects of a non-persistent type specified by the generic type parameter.</para>
      </summary>
      <param name="sprocName">A <see cref="T:System.String"/> value that specifies the stored procedure&#39;s name.</param>
      <param name="parameters">An array of SprocParameter objects specifying parameters to pass to the stored procedure.</param>
      <returns>A collection of non-persistent objects of the specified type that are instantiated with data obtained via the specified stored procedure.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsInTransaction(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="condition"></param>
      <param name="sorting"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <param name="selectDeleted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsInTransaction(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="condition"></param>
      <param name="selectDeleted"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsInTransaction(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Boolean)">
      <summary>
        <para>This GetObjectsInTransaction method overload is obsolete. Use the overloads that do not take a Boolean caseSensitive parameter.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="condition"></param>
      <param name="selectDeleted"></param>
      <param name="caseSensitive"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsInTransactionAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean,DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="condition"></param>
      <param name="sorting"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <param name="selectDeleted"></param>
      <param name="callback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsInTransactionAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortingCollection,System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="condition"></param>
      <param name="sorting"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <param name="selectDeleted"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsInTransactionAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="condition"></param>
      <param name="selectDeleted"></param>
      <param name="callback"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsToDelete">
      <summary>
        <para>Returns a collection of persistent objects that will be deleted when the current transaction is committed.</para>
      </summary>
      <returns>The collection of persistent objects that when the current transaction is committed.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsToDelete(System.Boolean)">
      <summary>
        <para>Returns a collection of persistent objects that will be deleted when the current transaction is committed, including objects that will be deleted in the parent transaction(s), optionally.</para>
      </summary>
      <param name="includeParent">true, to include persistent objects that will be deleted in the parent transaction(s); otherwise, false.</param>
      <returns>The collection of persistent objects that will be deleted when the current transaction is committed.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsToSave">
      <summary>
        <para>Returns a collection of objects that will be saved when the current transaction is committed.</para>
      </summary>
      <returns>The collection of persistent objects that will be saved when the current transaction is committed.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectsToSave(System.Boolean)">
      <summary>
        <para>Returns a collection of persistent objects that will be saved when the current transaction is committed, including objects that will be saved in the parent transaction(s), optionally.</para>
      </summary>
      <param name="includeParent">true, to include persistent objects that will be saved in the parent transaction(s); otherwise, false.</param>
      <returns>The collection of persistent objects that will be saved when the current transaction is committed.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectType(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="objectType"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectType(System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="id"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetObjectType(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="theObject"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.GetProperties(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Gets the properties of the class whose metadata is provided by the specified <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides class description.</param>
      <returns>A collection of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects.</returns>
    </member>
    <member name="F:DevExpress.Xpo.Session.GlobalSuppressExceptionOnReferredObjectAbsentInDataStore">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.Session.IdentityMapBehavior">
      <summary>
        <para>Gets or sets the session&#39;s Identity Map behavior.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.IdentityMapBehavior"/> enumeration value that specifies the session&#39;s Identity Map behavior.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.InTransaction">
      <summary>
        <para>Indicates whether a transaction is in progress.</para>
      </summary>
      <value>true if a transaction is in progress; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.InTransactionMode">
      <summary>
        <para>Enables the mode in which querying a data store for objects includes all in-memory changes into query results.</para>
      </summary>
      <value>true if query results include all in-memory changes made to persistent objects; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.IsConnected">
      <summary>
        <para>Gets whether the session is connected to a database.</para>
      </summary>
      <value>true if the session is connected to a database; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsNewObject(System.Object)">
      <summary>
        <para>Indicates whether the specified object is contained within the session&#39;s cache.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object.</param>
      <returns>true if the specified object doesn&#39;t contain within the session&#39;s cache; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsNewObject(System.Object,System.Boolean)">
      <summary>
        <para>Indicates whether the specified persistent object is a newly created object which isn&#39;t saved in the transaction currently in progress or in any of its parent transaction (optionally).</para>
      </summary>
      <param name="theObject">The persistent object to test.</param>
      <param name="includeParent">true to check parent transactions for the specified object; otherwise, false.</param>
      <returns>true if the specified object is a new object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsObjectMarkedDeleted(System.Object)">
      <summary>
        <para>Indicates whether the specified persistent object is marked as deleted.</para>
      </summary>
      <param name="theObject">The object to test.</param>
      <returns>true if the specified object is marked as deleted; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Session.IsObjectModifiedOnNonPersistentPropertyChange">
      <summary>
        <para>Specifies whether or not a persistent object is marked modified when its non-persistent property value is changed.</para>
      </summary>
      <value>true, if a persistent object is marked modified when its non-persistent property value is changed; otherwise - false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.IsObjectsLoading">
      <summary>
        <para>Indicates whether persistent objects are being loaded from a data store.</para>
      </summary>
      <value>true if persistent objects are being loaded from a data store; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.IsObjectsSaving">
      <summary>
        <para>Indicates whether persistent objects are being saved to a data store.</para>
      </summary>
      <value>true if persistent objects are being saved to a data store; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsObjectToDelete(System.Object)">
      <summary>
        <para>Indicates whether the specified object is deleted in the transaction currently in progress.</para>
      </summary>
      <param name="theObject">The persistent object to test.</param>
      <returns>true if the specified object is deleted in the transaction currently in progress; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsObjectToDelete(System.Object,System.Boolean)">
      <summary>
        <para>Indicates whether the specified object is deleted in the transaction currently in progress or in any of its parent transaction (optionally).</para>
      </summary>
      <param name="theObject">The persistent object to test.</param>
      <param name="includeParent">true to check whether the persistent object is deleted in the parent transaction(s); otherwise, false.</param>
      <returns>true if the specified object is deleted in the transaction currently in progress or in any of its parent transaction (optionally); otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsObjectToSave(System.Object)">
      <summary>
        <para>Indicates whether the specified object is saved in the transaction currently in progress.</para>
      </summary>
      <param name="theObject">The persistent object to test.</param>
      <returns>true if the specified object is saved in the transaction currently in progress; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.IsObjectToSave(System.Object,System.Boolean)">
      <summary>
        <para>Indicates whether the specified object is saved in the transaction currently in progress or in any of its parent transaction (optionally).</para>
      </summary>
      <param name="theObject">The persistent object to test.</param>
      <param name="includeParent">true to check whether the persistent object is saved in the parent transaction(s); otherwise, false.</param>
      <returns>true if the specified object is saved in the transaction currently in progress or in any of its parent transaction (optionally); otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.Load(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IEnumerable,System.String[])">
      <summary>
        <para>This method is obsolete. Use  or <see cref="M:DevExpress.Xpo.Session.PreFetch``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.IEnumerable)"/> instead.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="objects"></param>
      <param name="collections"></param>
    </member>
    <member name="M:DevExpress.Xpo.Session.Load(DevExpress.Xpo.XPBaseCollection[])">
      <summary>
        <para>This method is obsolete. Use  instead.</para>
      </summary>
      <param name="collections"></param>
    </member>
    <member name="M:DevExpress.Xpo.Session.Load``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
      <summary>
        <para>This method is obsolete. Use  or <see cref="M:DevExpress.Xpo.Session.PreFetch``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.IEnumerable)"/> instead.</para>
      </summary>
      <param name="objects"></param>
      <param name="collections"></param>
    </member>
    <member name="P:DevExpress.Xpo.Session.LockingOption">
      <summary>
        <para>Gets or sets a value which controls the persistent object&#39;s locking during a session.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.LockingOption"/> enumeration value which controls the persistent object&#39;s locking during a session.</value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogCategory">
      <summary>
        <para>The name of a category used to tag session and unit of work operations in XPO logs. The default category name is &quot;Session&quot;.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_AlwaysGetFromDataStore">
      <summary>
        <para>Contains the name of the log parameter that specifies whether to always reload objects from a data store even if they are found in memory.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_ClassInfo">
      <summary>
        <para>Contains the name of the log parameter that specifies the full name of a persistent class.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Condition">
      <summary>
        <para>Contains the name of the log parameter that specifies the criteria for retrieving objects not yet persisted to the datastore.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Criteria">
      <summary>
        <para>Contains the name of the log parameter that specifies the object to be retrieved from the storage.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_CriteriaEvaluationBehavior">
      <summary>
        <para>Contains the name of the log parameter that specifies how filter criteria are evaluated within a transaction.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Expression">
      <summary>
        <para>Contains the name of the log parameter that specifies an expression to be evaluated.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_GroupCriteria">
      <summary>
        <para>Contains the name of the log parameter that specifies the grouping criteria for the retrieved persistent objects.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_GroupProps">
      <summary>
        <para>Contains the name of the log parameter that specifies grouping properties.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_InTransaction">
      <summary>
        <para>Contains the name of the log parameter that specifies whether in memory object changes are taken into account when evaluating an expression.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_IsInTransactionMode">
      <summary>
        <para>Contains the name of the log parameter that specifies whether querying a data store for objects includes all in-memory changes into query results.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Members">
      <summary>
        <para>Contains the name of the log parameter that specifies mapping information for persistent class metadata and a stored procedure&#39;s result set columns.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_ObjectID">
      <summary>
        <para>Contains the name of the log parameter that specifies an object identifier.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Objects">
      <summary>
        <para>Contains the name of the log parameter that specifies persistent objects.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Parameters">
      <summary>
        <para>Contains the name of the log parameter that specifies SQL query parameters.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Property">
      <summary>
        <para>Contains the name of the log parameter that specifies a persistent object&#39;s property.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Props">
      <summary>
        <para>Contains the name of the log parameter that specifies properties of a persistent object.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_SelectDeleted">
      <summary>
        <para>Contains the name of the log parameter that specifies whether persistent objects marked as deleted must be retrieved.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_SessionID">
      <summary>
        <para>Contains the name of the log parameter that specifies a session identifier.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_SessionType">
      <summary>
        <para>Contains the name of the log parameter that specifies a session type.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_SkipSelectedRecords">
      <summary>
        <para>Contains the name of the log parameter that specifies the number of persistent objects to skip.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Sorting">
      <summary>
        <para>Contains the name of the log parameter that specifies the sort order for retrieved persistent objects.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_SprocName">
      <summary>
        <para>Contains the name of the log parameter that specifies the name of a stored procedure.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_Sql">
      <summary>
        <para>Contains the name of the log parameter that specifies a SQL query.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_TheObject">
      <summary>
        <para>Contains the name of the log parameter that specifies a persistent object.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.Session.LogParam_TopSelectedRecords">
      <summary>
        <para>Contains the name of the log parameter that specifies the maximum number of persistent objects to retrieve.</para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectChanged">
      <summary>
        <para>Occurs after an object&#39;s property has been changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectDeleted">
      <summary>
        <para>Occurs after an object has been deleted.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectDeleting">
      <summary>
        <para>Occurs when an object is about to be deleted.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Session.ObjectLayer">
      <summary>
        <para>Provides access to an object access layer, which the current session uses to retrieve and update object data in a data store.</para>
      </summary>
      <value>An object that implements the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface.</value>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectLoaded">
      <summary>
        <para>Occurs after an object&#39;s properties have been initialized with values from a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectLoading">
      <summary>
        <para>Occurs when an object&#39;s properties are about to be initialized with values from a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectSaved">
      <summary>
        <para>Occurs after an object has been saved to a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectSaving">
      <summary>
        <para>Occurs when an object is about to be saved to a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectsLoaded">
      <summary>
        <para>Occurs after persistent objects have been initialized with values from a data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.Session.ObjectsSaved">
      <summary>
        <para>Occurs after persistent objects have been saved to a data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.Session.ObjectsSavedInCurrentTransaction">
      <summary>
        <para>Gets the collection of <see cref="T:DevExpress.Xpo.IXPSimpleObject"/> objects that are saved in the transaction currently in progress.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpo.IXPSimpleObject"/> objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.OptimisticLockingReadBehavior">
      <summary>
        <para>Gets or sets a value which specifies how XPO behaves when reloading changed objects (objects with different versions).</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehavior"/> enumeration value that specifies how XPO behaves when reloading changed objects (objects with different versions).</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetch(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IEnumerable,System.String[])">
      <summary>
        <para>Enforces loading data for associated collections and delayed properties.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides metadata information for a parent class.</param>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="propertyPaths">An array of strings that are the collection property and delayed property names, or property paths (e.g, &quot;ChildCollection.AnotherChildCollection&quot;).</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetch(System.Collections.IEnumerable,DevExpress.Xpo.Metadata.XPMemberInfo,System.Collections.IEnumerable)">
      <summary>
        <para>Enforces loading data for an associated collection.</para>
      </summary>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="collectionInObjects">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that provides metadata information for an associated collection.</param>
      <param name="collectionsContent">An <see cref="T:System.Collections.IEnumerable"/> list of the collection&#39;s content. If the collectionInObjects data was previously loaded, you can avoid reloading it by passing the loaded data to the collectionsContent parameter. Note that if this parameter does not contain a part of the collection&#39;s content, this part will not be loaded from a database.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetch``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.IEnumerable)">
      <summary>
        <para>Enforces loading data for associated collections.</para>
      </summary>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="collectionInObjects">A string which is the name of the associated collection property.</param>
      <param name="collectionsContent">An <see cref="T:System.Collections.IEnumerable"/> list of the collection&#39;s content. If the collectionInObjects data was previously loaded, you can avoid reloading it by passing the loaded data to the collectionsContent parameter. Note that if this parameter does not contain a part of the collection&#39;s content, this part will not be loaded from a database.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetch``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
      <summary>
        <para>Enforces loading data for associated collections and delayed properties.</para>
      </summary>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="propertyPaths">An array of strings that are the collection property and delayed property names, or property paths (e.g, &quot;ChildCollection.AnotherChildCollection&quot;).</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetchAsync(DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IEnumerable,System.Threading.CancellationToken,System.String[])">
      <summary>
        <para>Asynchronously forces associated collection data loading and delayed property loading for specified parent objects.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information. This data specifies the parent object that needs associated collection data loading and delayed property loading.</param>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="propertyPaths">An array of strings that are the collection property and delayed property names, or property paths (e.g, &quot;ChildCollection.AnotherChildCollection&quot;).</param>
      <returns>A Task that forces associated collection data loading and delayed property loading for specified parent objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetchAsync(System.Collections.IEnumerable,DevExpress.Xpo.Metadata.XPMemberInfo,System.Collections.IEnumerable,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously forces associated collection data loading for specified parent objects.</para>
      </summary>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="collectionInObjects">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object that contains metadata information. This data specifies associated collection data to be retrieved.</param>
      <param name="collectionsContent">An <see cref="T:System.Collections.IEnumerable"/> list of the collection&#39;s content. If the collectionInObjects data was previously loaded, you can avoid reloading it by passing the loaded data to the collectionsContent parameter. Note that if this parameter does not contain a part of the collection&#39;s content, this part will not be loaded from a database.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that forces associated collection data loading for specified parent objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.PreFetchAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Collections.IEnumerable,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously forces associated collection data loading for specified parent objects.</para>
      </summary>
      <param name="objects">An <see cref="T:System.Collections.IEnumerable"/> list of parent objects.</param>
      <param name="collectionInObjects">A string which is the name of the associated collection property.</param>
      <param name="collectionsContent">An <see cref="T:System.Collections.IEnumerable"/> list of the collection&#39;s content. If the collectionInObjects data was previously loaded, you can avoid reloading it by passing the loaded data to the collectionsContent parameter. Note that if this parameter does not contain a part of the collection&#39;s content, this part will not be loaded from a database.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that forces associated collection data loading for specified parent objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ProcessReferences(System.Object,DevExpress.Xpo.ProcessReferenceHandler)">
      <summary>
        <para>Returns a list objects that were processed within the specified event handler.</para>
      </summary>
      <param name="target"></param>
      <param name="process"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.PurgeDeletedObjects">
      <summary>
        <para>Deletes the objects marked as deleted from storage.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.PurgeDeletedObjects(DevExpress.Xpo.IObjectLayer)">
      <summary>
        <para>Deletes the objects marked as deleted from a storage.</para>
      </summary>
      <param name="objectLayer">An object which implements the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface.</param>
      <returns>A PurgeResult value that specifies the result of the operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.Reload(System.Object)">
      <summary>
        <para>Reloads the state of the specified persistent object from the data store.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object whose state needs to be reloaded.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.Reload(System.Object,System.Boolean)">
      <summary>
        <para>Reloads the state of the specified persistent object and its aggregated objects from the data store, recursively.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object whose state needs to be reloaded.</param>
      <param name="forceAggregatesReload">true, to recursively reload the state of aggregated objects; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.ReloadAsync(System.Object,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <para>Recursively reloads a persistent object&#39;s state and aggregated objects from the data store, asynchronously.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object whose state needs to be reloaded.</param>
      <param name="forceAggregatesReload">true, to recursively reload the state of aggregated objects; otherwise, false.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that reloads a persistent object&#39;s state and aggregated objects from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.ReloadAsync(System.Object,System.Threading.CancellationToken)">
      <summary>
        <para>Recursively reloads a persistent object&#39;s state and aggregated objects from the data store, asynchronously.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object whose state needs to be reloaded.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that reloads a persistent object&#39;s state and aggregated objects from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.RemoveFromDeleteList(System.Object)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="theObject">The persistent object.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.RemoveFromLists(System.Object)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code..</para>
      </summary>
      <param name="theObject">The persistent object.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.RemoveFromSaveList(System.Object)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="theObject">The persistent object.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.RollbackTransaction">
      <summary>
        <para>Rolls back a transaction to its starting point, and completes it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.Save(System.Collections.ICollection)">
      <summary>
        <para>Saves the specified persistent objects to a data store.</para>
      </summary>
      <param name="objects">A collection of persistent objects to save in a data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.Save(System.Object)">
      <summary>
        <para>Saves the specified persistent object to a data store.</para>
      </summary>
      <param name="theObject">An object which represents the persistent object to save.</param>
    </member>
    <member name="E:DevExpress.Xpo.Session.SchemaInit">
      <summary>
        <para>Occurs after the data schema is initialized or updated.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectData(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,DevExpress.Xpo.SortingCollection)">
      <summary>
        <para>Retrieves objects from a session using the specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectData(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection)">
      <summary>
        <para>Retrieves objects from a session using the specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the list; otherwise, false.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectData(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,DevExpress.Xpo.SortingCollection)">
      <summary>
        <para>Retrieves objects from a session using the specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectData(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection)">
      <summary>
        <para>Retrieves objects from a session using the specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the list; otherwise, false.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,DevExpress.Xpo.SortingCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information. This data specifies which objects need to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays represent object properties retrieved from a data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,DevExpress.Xpo.AsyncSelectDataCallback)">
      <summary>
        <para>Asynchronously retrieves objects from a session, using the specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">true to include the persistent objects marked as deleted into the list; otherwise, false.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of retrieved objects.</param>
      <param name="callback">A <see cref="T:DevExpress.Xpo.AsyncSelectDataCallback"/> delegate to be called after the list has been retrieved. This list is passed as a parameter to callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information. This data specifies which objects need to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays represent object properties retrieved from a data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,DevExpress.Xpo.SortingCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously according to specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information. This data specifies which objects need to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays represent object properties retrieved from a data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information. This data specifies which objects need to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="selectDeleted">true, to include the persistent objects marked as deleted into the list; otherwise, false.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays represent object properties retrieved from a data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataInTransaction(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection)">
      <summary>
        <para>Retrieves objects from a session using the specified query parameters, including all in-memory changes into query results.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SelectDataInTransactionAsync(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Int32,System.Int32,DevExpress.Xpo.SortingCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously retrieves objects from a session, according to specified query parameters. Accounts for all in-memory object changes.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that contains metadata information. This data specifies which objects need to be retrieved.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the objects to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="selectDeleted">A Boolean value that specifies whether the objects marked as deleted must be retrieved.</param>
      <param name="skipSelectedRecords">An integer value which specifies the number of objects to exclude when populating the list.</param>
      <param name="topSelectedRecords">An integer value which specifies the maximum number of objects to be retrieved.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the sort order for the list of the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays represent object properties retrieved from a session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.SetAsyncRequestPriority(System.Object,DevExpress.Xpo.Helpers.AsyncRequestPriority)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="asyncResult"></param>
      <param name="priority"></param>
    </member>
    <member name="M:DevExpress.Xpo.Session.SetKeyValue(System.Object,System.Object)">
      <summary>
        <para>Assigns the key property&#39;s value of the specified persistent object.</para>
      </summary>
      <param name="theObject">A persistent object whose key property value is set.</param>
      <param name="keyValue">An object representing the key property&#39;s value.</param>
    </member>
    <member name="P:DevExpress.Xpo.Session.SuppressThrowingAssociationCollectionWithDisabledLoading">
      <summary>
        <para>Specifies whether exceptions are thrown when committing changes in a collection whose <see cref="P:DevExpress.Xpo.XPBaseCollection.LoadingEnabled"/> property is set to false.</para>
      </summary>
      <value>true, to suppress exceptions; otherwise false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.ToString">
      <summary>
        <para>Returns a string that represents the current session.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which represents the current object.</returns>
    </member>
    <member name="P:DevExpress.Xpo.Session.TrackingChanges">
      <summary>
        <para>Indicates whether changes made to persistent objects are being tracked or a list of tracked changes is not empty.</para>
      </summary>
      <value>In sessions, true if changes made to persistent objects are currently being tracked; otherwise, false.In units of work, true if a list of tracked changes is not empty; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.Session.TrackPropertiesModifications">
      <summary>
        <para>Specifies whether or not the current <see cref="T:DevExpress.Xpo.Session"/> tracks persistent object property modifications.</para>
      </summary>
      <value>true, if the <see cref="T:DevExpress.Xpo.Session"/> tracks persistent object property modifications; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.Session.TriggerObjectChanged(System.Object,DevExpress.Xpo.ObjectChangeEventArgs)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="changedObject"></param>
      <param name="e"></param>
    </member>
    <member name="P:DevExpress.Xpo.Session.TypesManager">
      <summary>
        <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.Session.UpdateSchema">
      <summary>
        <para>Updates the storage schema according to the class descriptions that are listed in the assemblies that have been loaded into the application domain.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Session.UpdateSchema(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Updates the database schema to support the persistence of the objects with the specified metadata information.</para>
      </summary>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that specify object metadata for which schema should be created in the data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Updates a data store&#39;s schema according to the class descriptions of the specified types.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that specify the types of objects for which schema should be created in the data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> enumeration value which specifies the result of the update operation.</returns>
    </member>
    <member name="M:DevExpress.Xpo.Session.UpdateSchema(System.Reflection.Assembly[])">
      <summary>
        <para>Updates the storage schema according to the class descriptions that are listed in the specified assemblies.</para>
      </summary>
      <param name="assemblies">An array of <see cref="T:System.Reflection.Assembly"/> objects that represent the assemblies used to scan for persistent objects.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.UpdateSchema(System.Type[])">
      <summary>
        <para>Updates a data store&#39;s schema according to the class descriptions of the specified types.</para>
      </summary>
      <param name="types">An array of <see cref="T:System.Type"/> objects that represent the types of objects for which schema should be created in the data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.Session.WaitForAsyncRequestComplete(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="session"></param>
      <param name="asyncResult"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.SessionManipulationEventArgs">
      <summary>
        <para>Provides data for all session handling events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SessionManipulationEventArgs.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SessionManipulationEventArgs"/> class.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the processed session. This value is assigned to the <see cref="P:DevExpress.Xpo.SessionManipulationEventArgs.Session"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.SessionManipulationEventArgs.Session">
      <summary>
        <para>Gets the session currently being processed.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session currently being processed.</value>
    </member>
    <member name="T:DevExpress.Xpo.SessionManipulationEventHandler">
      <summary>
        <para>Represents a method that will handle the session events (e.g. <see cref="E:DevExpress.Xpo.Session.BeforeBeginTransaction"/>, <see cref="E:DevExpress.Xpo.Session.AfterBeginTransaction"/> events).</para>
      </summary>
      <param name="sender">The event source. Identifies the <see cref="T:DevExpress.Xpo.Session"/> that raised the event.</param>
      <param name="e">A <see cref="T:DevExpress.Xpo.SessionManipulationEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.SessionObjectLayer">
      <summary>
        <para>An object access layer that saves and loads persistent objects via a parent session or unit of work.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SessionObjectLayer"/> class with a specified parent session.</para>
      </summary>
      <param name="parentSession">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a parent session for the current object layer. The specified value initializes the object layer&#39;s <see cref="F:DevExpress.Xpo.SessionObjectLayer.ParentSession"/> field.</param>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.#ctor(DevExpress.Xpo.Session,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SessionObjectLayer"/> class with a specified parent session and the <see cref="F:DevExpress.Xpo.SessionObjectLayer.ThroughCommitMode"/> field value.</para>
      </summary>
      <param name="parentSession">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a parent session for the current object layer. The specified value initializes the object layer&#39;s <see cref="F:DevExpress.Xpo.SessionObjectLayer.ParentSession"/> field.</param>
      <param name="throughCommitMode">true if the <see cref="M:DevExpress.Xpo.SessionObjectLayer.CommitChanges(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection)"/> method call should automatically commit changes in the parentSession to properly update key fields and fields with enabled optimistic locking in the object layer&#39;s session; otherwise, false. The specified value initializes the object layer&#39;s <see cref="F:DevExpress.Xpo.SessionObjectLayer.ThroughCommitMode"/> field.</param>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.#ctor(DevExpress.Xpo.Session,System.Boolean,DevExpress.Xpo.IGenericSecurityRule,DevExpress.Xpo.ISecurityRuleProvider,System.Object)">
      <summary>
        <para>Reserved for future use.</para>
      </summary>
      <param name="parentSession"></param>
      <param name="throughCommitMode"></param>
      <param name="genericSecurityRule"></param>
      <param name="securityDictionary"></param>
      <param name="securityCustomContext"></param>
    </member>
    <member name="P:DevExpress.Xpo.SessionObjectLayer.AutoCreateOption">
      <summary>
        <para>Returns an <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value associated with the current object layer.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to a data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.SessionObjectLayer.CanLoadCollectionObjects">
      <summary>
        <para>Indicates if an object layer can call the <see cref="M:DevExpress.Xpo.SessionObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method to load collection properties.</para>
      </summary>
      <value>true if collections can be loaded via an object layer&#39;s <see cref="M:DevExpress.Xpo.SessionObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method call; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.ClearDatabase">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.CommitChanges(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
        <para>Performs object layer specific operations that are required to commit object changes made in a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously commit object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been committed. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits specified object changes.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SessionObjectLayer.Connection">
      <summary>
        <para>Provides access to the current object layer&#39;s <see cref="T:System.Data.IDbConnection"/> object that is used to access a database.</para>
      </summary>
      <value>An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.</value>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.CreateObjectType(DevExpress.Xpo.XPObjectType)">
      <summary>
        <para>Performs object layer specific operations that are required to create an <see cref="T:DevExpress.Xpo.XPObjectType"/> record.</para>
      </summary>
      <param name="type">An <see cref="T:DevExpress.Xpo.XPObjectType"/> object specifying a valid persistent type.</param>
    </member>
    <member name="E:DevExpress.Xpo.SessionObjectLayer.CustomSecurityCriteriaPatcher">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.SessionObjectLayer.DataLayer">
      <summary>
        <para>Provides access to the current object layer&#39;s data access layer that is used to access a data store.</para>
      </summary>
      <value>An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.SessionObjectLayer.Dictionary">
      <summary>
        <para>Gets an object providing metadata on persistent objects stored in a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which provides metadata on persistent objects stored in a data store.</value>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetObjectLayerWideObjectTypes">
      <summary>
        <para>Returns a Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt; specifying the correspondence of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects to <see cref="T:DevExpress.Xpo.XPObjectType"/> records.</para>
      </summary>
      <returns>A Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt;, providing a collection of complementary <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>-<see cref="T:DevExpress.Xpo.XPObjectType"/> pairs.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetObjectsByKey(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to return persistent objects from a specified session using queries based on specified object types and key values.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>An array of persistent object collections retrieved for query data passed as the queries parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetObjectsByKeyAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetParentObjectsToDelete(DevExpress.Xpo.Session)">
      <summary>
        <para>Performs object layer specific operations that are required to return a collection of objects marked for deletion in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which objects marked for deletion are loaded.</param>
      <returns>A collection of objects loaded to the session from the immediate parent session. Collection elements match objects marked for deletion in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetParentObjectsToSave(DevExpress.Xpo.Session)">
      <summary>
        <para>Performs object layer specific operations that are required to return a collection of objects marked for saving in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which objects marked for saving are loaded.</param>
      <returns>A collection of objects loaded to the session from the immediate parent session. Collection elements match objects marked for saving in parent sessions.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetParentTouchedClassInfos(DevExpress.Xpo.Session)">
      <summary>
        <para>Performs object layer specific operations that are required to return the metadata of objects modified in parent sessions relative to a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session whose immediate parent session starts the search for modified objects up the nesting session hierarchy.</param>
      <returns>A collection of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects identifying objects modified in parent sessions relative to the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.GetStaticCache(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="info"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.IsParentObjectToDelete(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to determine if a specified object corresponds to an object marked for deletion in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session which contains theObject.</param>
      <param name="theObject">The session&#39;s object to test.</param>
      <returns>true if theObject corresponds to one of the objects marked for deletion in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.IsParentObjectToSave(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to determine if a specified object corresponds to an object marked for saving in parent sessions.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object specifying a session which contains theObject.</param>
      <param name="theObject">The session&#39;s object to test.</param>
      <returns>true if theObject corresponds to one of the objects marked for saving in parent sessions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.IsStaticType(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to load a collection property using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load collection objects.</param>
      <param name="refProperty">The ownerObject&#39;s property that references a collection property.</param>
      <param name="owner">The object that owns the collection property.</param>
      <returns>An array of collection objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadDelayedProperties(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to a specific property marked for delayed loading in specified objects.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects containing the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property whose values are loaded.</param>
      <returns>An ObjectDictionary of loaded property values that correspond to the objects list elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadDelayedProperties(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to specific properties marked for delayed loading in a specified object.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object containing member paths of delayed properties whose values are loaded.</param>
      <returns>An array of loaded property values that correspond to the props collection elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects that contain the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property that accepts the data the LoadDelayedPropertiesAsync method loads.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object that contains delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object that specifies member paths for delayed properties where the LoadDelayedPropertiesAsync method loads data from a session.</param>
      <param name="cancellationToken">A CancellationToken object that delivers cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadObjects(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to load persistent objects using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>An array of object collections that correspond to the queries.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously load persistent objects using specified settings and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the objects have been loaded. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Loads persistent objects asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SessionObjectLayer.ObjectLayer">
      <summary>
        <para>Returns the current <see cref="T:DevExpress.Xpo.SessionObjectLayer"/> object.</para>
      </summary>
      <value>The current <see cref="T:DevExpress.Xpo.SessionObjectLayer"/> object cast to the <see cref="T:DevExpress.Xpo.IObjectLayer"/>.</value>
    </member>
    <member name="E:DevExpress.Xpo.SessionObjectLayer.ObjectsLoaded">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.SessionObjectLayer.ParentSession">
      <summary>
        <para>Specifies a <see cref="T:DevExpress.Xpo.Session"/> object which the current object layer uses to save and load objects.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.Purge">
      <summary>
        <para>Performs object layer specific operations that are required to remove all objects marked for deletion.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.RegisterStaticTypes(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="types"></param>
    </member>
    <member name="E:DevExpress.Xpo.SessionObjectLayer.SchemaInit">
      <summary>
        <para>Occurs when a data store&#39;s schema is initialized or updated for the current object layer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.SelectData(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Performs object layer specific operations that are required to retrieve object data from a session using specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.AsyncSelectDataCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously retrieve object data from a session using specified query parameters and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the object data have been retrieved. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieved persistent objects.</param>
      <param name="query">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to select data.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.SetObjectLayerWideObjectTypes(System.Collections.Generic.Dictionary{DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.XPObjectType})">
      <summary>
        <para>Designates a Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt; specifying the correspondence of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects to <see cref="T:DevExpress.Xpo.XPObjectType"/> records.</para>
      </summary>
      <param name="loadedTypes">A Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt;, providing a collection of complementary <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>-<see cref="T:DevExpress.Xpo.XPObjectType"/> pairs.</param>
    </member>
    <member name="F:DevExpress.Xpo.SessionObjectLayer.ThroughCommitMode">
      <summary>
        <para>Indicates if the <see cref="M:DevExpress.Xpo.SessionObjectLayer.CommitChanges(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection)"/> method call automatically commits changes in a parent session to properly update key fields and fields with enabled optimistic locking (decorated with the <see cref="T:DevExpress.Xpo.KeyAttribute"/> or <see cref="T:DevExpress.Xpo.OptimisticLockingAttribute"/>) in a nested session. To assign the ThroughCommitMode field, use the corresponding <see cref="T:DevExpress.Xpo.SessionObjectLayer"/> overloaded constructor.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.SessionObjectLayer.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Performs object layer specific operations that are required to update a data store&#39;s schema according to the class descriptions of the specified types.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects specifying the types of objects for which schema should be created in the data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> enumeration value which specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.SessionOperationFailEventArgs">
      <summary>
        <para>Provides data for a session&#39;s <see cref="E:DevExpress.Xpo.Session.FailedCommitTransaction"/> and <see cref="E:DevExpress.Xpo.Session.FailedFlushChanges"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SessionOperationFailEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initialize a new instance of the <see cref="T:DevExpress.Xpo.SessionOperationFailEventArgs"/> class with a specified exception.</para>
      </summary>
      <param name="exception">The database exception occurred while performing an operation. This value is assigned to the <see cref="P:DevExpress.Xpo.SessionOperationFailEventArgs.Exception"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.SessionOperationFailEventArgs.Exception">
      <summary>
        <para>Gets the exception thrown by a database when committing a transaction or changes made to persistent objects.</para>
      </summary>
      <value>The database exception.</value>
    </member>
    <member name="P:DevExpress.Xpo.SessionOperationFailEventArgs.Handled">
      <summary>
        <para>Specifies whether the default processing of an exception is prohibited.</para>
      </summary>
      <value>true to prevent the default exception processing (an exception to be thrown in normal operations or handled via callback methods in asynchronous operations); otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.SessionOperationFailEventHandler">
      <summary>
        <para>A method that will handle a session&#39;s <see cref="E:DevExpress.Xpo.Session.FailedCommitTransaction"/> and <see cref="E:DevExpress.Xpo.Session.FailedFlushChanges"/> events.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Xpo.SessionOperationFailEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.SimpleDataLayer">
      <summary>
        <para>Implements a data layer that enables the object metadata to be modified at runtime.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.#ctor(DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> class with a specified data store provider and default metadata information.</para>
      </summary>
      <param name="provider">A <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object which implements data store-specific functionality.</param>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> class with the specified <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object and metadata information.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that specifies the metadata.</param>
      <param name="provider">A <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object which implements data-specific functionality.</param>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.ClearDatabase">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.SimpleDataLayer.Connection">
      <summary>
        <para>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to the data store if it allows commands to be created.</para>
      </summary>
      <value>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to the data store if it allows commands to be created.</value>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.CreateCommand">
      <summary>
        <para>Creates a command if the data store allows commands to be created.</para>
      </summary>
      <returns>A <see cref="T:System.Data.IDbCommand"/> command that is executed when connected to the data store; null if the data store doesn&#39;t allow commands to be created.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a data store using the specified modification statements.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>The result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.ModifyDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Fetches data from a data store using the specified query statements.</para>
      </summary>
      <param name="selects">An array of statements to obtain data from the data store.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.SelectDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.SimpleDataLayer.SuppressReentrancyAndThreadSafetyCheck">
      <summary>
        <para>Disables the thread safety diagnostic function.</para>
      </summary>
      <value>true if the thread safety diagnostic function is disabled; otherwise false (default value is false).</value>
    </member>
    <member name="M:DevExpress.Xpo.SimpleDataLayer.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Updates a data store&#39;s schema according to the specified class descriptions.</para>
      </summary>
      <param name="doNotCreate">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the storage.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that specify object metadata for which the schema should be created in the data store.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.SimpleObjectLayer">
      <summary>
        <para>An object access layer that saves and loads persistent objects via a data access layer associated with a data store provider (an <see cref="T:DevExpress.Xpo.DB.IDataStore"/> implementation).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.#ctor(DevExpress.Xpo.IDataLayer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SimpleObjectLayer"/> class with a data access layer.</para>
      </summary>
      <param name="dataLayer">An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</param>
    </member>
    <member name="P:DevExpress.Xpo.SimpleObjectLayer.AutoCreateOption">
      <summary>
        <para>Returns an <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value associated with the current object layer.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to a data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.SimpleObjectLayer.CanLoadCollectionObjects">
      <summary>
        <para>Indicates if an object layer can call the <see cref="M:DevExpress.Xpo.SimpleObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method to load collection properties.</para>
      </summary>
      <value>true if collections can be loaded via an object layer&#39;s <see cref="M:DevExpress.Xpo.SimpleObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)"/> method call; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.ClearDatabase">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.CommitChanges(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
        <para>Performs object layer specific operations that are required to commit object changes made in a specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously commit object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="callback">An <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been committed. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.CommitChangesAsync(DevExpress.Xpo.Session,System.Collections.ICollection,System.Collections.ICollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> with pending object changes.</param>
      <param name="fullListForDelete">A collection of persistent objects to be deleted.</param>
      <param name="completeListForSave">A collection of persistent objects to be saved.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits specified object changes.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SimpleObjectLayer.Connection">
      <summary>
        <para>Provides access to the current object layer&#39;s <see cref="T:System.Data.IDbConnection"/> object that is used to access a database.</para>
      </summary>
      <value>An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.</value>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.CreateObjectType(DevExpress.Xpo.XPObjectType)">
      <summary>
        <para>Performs object layer specific operations that are required to create an <see cref="T:DevExpress.Xpo.XPObjectType"/> record.</para>
      </summary>
      <param name="objectType">An <see cref="T:DevExpress.Xpo.XPObjectType"/> object specifying a valid persistent type.</param>
    </member>
    <member name="P:DevExpress.Xpo.SimpleObjectLayer.DataLayer">
      <summary>
        <para>Provides access to the current object layer&#39;s data access layer that is used to access a data store.</para>
      </summary>
      <value>An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.SimpleObjectLayer.Dictionary">
      <summary>
        <para>Gets an object providing metadata on persistent objects stored in a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object, which provides metadata on persistent objects stored in a data store.</value>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.FromDataLayer(DevExpress.Xpo.IDataLayer)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.SimpleObjectLayer"/> and initializes it with a specified data access layer.</para>
      </summary>
      <param name="dataLayer">An object implementing the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface.</param>
      <returns>A <see cref="T:DevExpress.Xpo.SimpleObjectLayer"/> object which is initialized with the dataLayer. null (Nothing in Visual Basic) is returned if the dataLayer is not specified.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.GetObjectLayerWideObjectTypes">
      <summary>
        <para>Returns a Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt; specifying the correspondence of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects to <see cref="T:DevExpress.Xpo.XPObjectType"/> records.</para>
      </summary>
      <returns>A Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt;, providing a collection of complementary <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>-<see cref="T:DevExpress.Xpo.XPObjectType"/> pairs.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.GetObjectsByKey(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to return persistent objects from a specified session using queries based on specified object types and key values.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsByKeyQuery"/> objects, containing data for queries that retrieve persistent objects by specified object types and key values.</param>
      <returns>An array of persistent object collections retrieved for query data passed as the queries parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.GetObjectsByKeyAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsByKeyQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.GetStaticCache(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="info"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.IsStaticType(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadCollectionObjects(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPMemberInfo,System.Object)">
      <summary>
        <para>Performs object layer specific operations that are required to load a collection property using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load collection objects.</param>
      <param name="refProperty">The ownerObject&#39;s property that references a collection property.</param>
      <param name="ownerObject">The object that owns the collection property.</param>
      <returns>An array of collection objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadDelayedProperties(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to a specific property marked for delayed loading in specified objects.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects containing the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property whose values are loaded.</param>
      <returns>An ObjectDictionary of loaded property values that correspond to the objects list elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadDelayedProperties(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection)">
      <summary>
        <para>Performs object layer specific operations that are required to load data to specific properties marked for delayed loading in a specified object.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object containing delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object containing member paths of delayed properties whose values are loaded.</param>
      <returns>An array of loaded property values that correspond to the props collection elements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Collections.IList,DevExpress.Xpo.Metadata.XPMemberInfo,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="objects">A list of persistent objects that contain the delayed property specified by the property.</param>
      <param name="property">An <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> object specifying a delayed property that accepts the data the LoadDelayedPropertiesAsync method loads.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadDelayedPropertiesAsync(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.Helpers.MemberPathCollection,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously loads data from a session to an object&#39;s specific properties marked for delayed loading.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve data for delayed properties.</param>
      <param name="theObject">A persistent object that contains delayed properties specified by the props.</param>
      <param name="props">A MemberPathCollection object that specifies member paths for delayed properties where the LoadDelayedPropertiesAsync method loads data from a session.</param>
      <param name="cancellationToken">A CancellationToken object that delivers cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of loaded property values.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadObjects(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[])">
      <summary>
        <para>Performs object layer specific operations that are required to load persistent objects using specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <returns>An array of object collections that correspond to the queries.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously load persistent objects using specified settings and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects specifying queries that are executed to retrieve persistent objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the objects have been loaded. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.LoadObjectsAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery[],System.Threading.CancellationToken)">
      <summary>
        <para>Loads persistent objects asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to load persistent objects.</param>
      <param name="queries">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to retrieve persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of object collections. These object collections match specified query parameters.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SimpleObjectLayer.ObjectLayer">
      <summary>
        <para>Returns the current <see cref="T:DevExpress.Xpo.SimpleObjectLayer"/> object.</para>
      </summary>
      <value>The current <see cref="T:DevExpress.Xpo.SimpleObjectLayer"/> object cast to the <see cref="T:DevExpress.Xpo.IObjectLayer"/>.</value>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.Purge">
      <summary>
        <para>Performs object layer specific operations that are required to remove all objects marked for deletion.</para>
      </summary>
      <returns>A PurgeResult object containing removal statistics (the number of objects processed, purged, etc.)</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.RegisterStaticTypes(DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="types"></param>
    </member>
    <member name="E:DevExpress.Xpo.SimpleObjectLayer.SchemaInit">
      <summary>
        <para>Occurs when a data store&#39;s schema is initialized or updated for the current object layer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.SelectData(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Performs object layer specific operations that are required to retrieve object data from a session using specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <returns>A list whose elements are property values that correspond to the properties of objects retrieved from the session.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.AsyncSelectDataCallback)">
      <summary>
        <para>Performs object layer specific operations that are required to asynchronously retrieve object data from a session using specified query parameters and notifies upon completion.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieve persistent objects.</param>
      <param name="query">An <see cref="T:DevExpress.Xpo.ObjectsQuery"/> object specifying a query that is executed to retrieve persistent objects.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="callback">An AsyncLoadObjectsCallback delegate to be called after the object data have been retrieved. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.SelectDataAsync(DevExpress.Xpo.Session,DevExpress.Xpo.ObjectsQuery,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Threading.CancellationToken)">
      <summary>
        <para>Retrieves object data from a session asynchronously, according to specified query parameters.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> that is used to retrieved persistent objects.</param>
      <param name="query">An array of <see cref="T:DevExpress.Xpo.ObjectsQuery"/> objects that specifies queries executed to select data.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies object properties to be retrieved.</param>
      <param name="groupProperties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which specifies the grouping properties.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which specifies the grouping criteria for the retrieved objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of object arrays. These object arrays match specified query parameters.</returns>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.SetObjectLayerWideObjectTypes(System.Collections.Generic.Dictionary{DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.XPObjectType})">
      <summary>
        <para>Designates a Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt; specifying the correspondence of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects to <see cref="T:DevExpress.Xpo.XPObjectType"/> records.</para>
      </summary>
      <param name="loadedTypes">A Dictionary&lt;<see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>,<see cref="T:DevExpress.Xpo.XPObjectType"/>&gt;, providing a collection of complementary <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/>-<see cref="T:DevExpress.Xpo.XPObjectType"/> pairs.</param>
    </member>
    <member name="M:DevExpress.Xpo.SimpleObjectLayer.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Performs object layer specific operations that are required to update a data store&#39;s schema according to the class descriptions of the specified types.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the data store; otherwise, false.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects specifying the types of objects for which schema should be created in the data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> enumeration value which specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.SizeAttribute">
      <summary>
        <para>Specifies the maximum number of characters that can be stored in a column which is created to store the data of a property or field.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SizeAttribute.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SizeAttribute"/> class.</para>
      </summary>
      <param name="size">An integer value which specifies the maximum number of characters that can be stored. This value is assigned to the <see cref="P:DevExpress.Xpo.SizeAttribute.Size"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.SizeAttribute.DefaultStringMappingFieldSize">
      <summary>
        <para>Specifies the default size of the database column which the member&#39;s data is stored in. The default value is 100.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.SizeAttribute.Size">
      <summary>
        <para>Gets the size of the database column which the member&#39;s data is stored in.</para>
      </summary>
      <value>An integer value which specifies the maximum number of characters that can be stored.</value>
    </member>
    <member name="F:DevExpress.Xpo.SizeAttribute.Unlimited">
      <summary>
        <para>Specifies the unlimited format size of the database column which the member&#39;s data is stored in.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.SortDirection">
      <summary>
        <para>Lists the values that specify the sort order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.SortDirection.Ascending">
      <summary>
        <para>Values are sorted in ascending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.SortDirection.Descending">
      <summary>
        <para>Values are sorted in descending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.SortDirection.None">
      <summary>
        <para>No sorting is performed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.SortingCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Xpo.SortProperty"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortingCollection"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.#ctor(DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the SortingCollection class and populates it with the specified elements.</para>
      </summary>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects used to populate the SortingCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.#ctor(System.Object,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the SortingCollection class and populates it with the specified elements.</para>
      </summary>
      <param name="owner"></param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects used to populate the SortingCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.Add(DevExpress.Xpo.SortingCollection)">
      <summary>
        <para>Adds the <see cref="T:DevExpress.Xpo.SortProperty"/> objects from the specified collection.</para>
      </summary>
      <param name="sortProperties">A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which represents the collection whose elements are added to the current collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.Add(DevExpress.Xpo.SortProperty)">
      <summary>
        <para>Adds the specified <see cref="T:DevExpress.Xpo.SortProperty"/> object to the collection.</para>
      </summary>
      <param name="sortProperty">A <see cref="T:DevExpress.Xpo.SortProperty"/> object to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.AddRange(DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Adds an array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects to the current collection.</para>
      </summary>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.Clear">
      <summary>
        <para>Clears the collection.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.SortingCollection.Count">
      <summary>
        <para>Gets the number of elements contained within the collection.</para>
      </summary>
      <value>An integer value that specifies the number of elements contained within the collection.</value>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.GetEnumerator">
      <summary>
        <para>Returns a <see cref="T:System.Collections.IEnumerator"/> for the collection.</para>
      </summary>
      <returns>An object which implements the <see cref="T:System.Collections.IEnumerator"/> interface.</returns>
    </member>
    <member name="P:DevExpress.Xpo.SortingCollection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to the elements in the collection.</para>
      </summary>
      <param name="index">A zero-based index that identifies an element.</param>
      <value>A <see cref="T:DevExpress.Xpo.SortProperty"/> object that represents an item at the specified position.</value>
    </member>
    <member name="M:DevExpress.Xpo.SortingCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the specified element from the collection.</para>
      </summary>
      <param name="index">A zero-based index that identifies the SortProperty object to remove from the collection.</param>
    </member>
    <member name="T:DevExpress.Xpo.ThreadSafeDataLayer">
      <summary>
        <para>Implements a data layer that allows multiple threads to access data in a data store at the same time.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para></para>
      </summary>
      <param name="provider"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.DB.IDataStore,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="provider"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.DB.IDataStore,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="provider"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.DB.IDataStore,System.Reflection.Assembly[])">
      <summary>
        <para></para>
      </summary>
      <param name="provider"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.DB.IDataStore,System.Type[])">
      <summary>
        <para></para>
      </summary>
      <param name="provider"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="provider"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore,System.Action{DevExpress.Xpo.Metadata.XPDictionary})">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="provider"></param>
      <param name="dictionaryInit"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="provider"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="provider"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore,System.Reflection.Assembly[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ThreadSafeDataLayer"/> class.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that specifies the metadata.</param>
      <param name="provider">A <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object which implements data-specific functionality.</param>
      <param name="assemblies">An array of persistent object assemblies.</param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.IDataStore,System.Type[])">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="provider"></param>
      <param name="types"></param>
    </member>
    <member name="P:DevExpress.Xpo.ThreadSafeDataLayer.Connection">
      <summary>
        <para>This property always returns  null (Nothing in Visual Basic).</para>
      </summary>
      <value>Always null (Nothing in Visual Basic).</value>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.CreateCommand">
      <summary>
        <para>Returns null because <see cref="T:DevExpress.Xpo.ThreadSafeDataLayer"/> does not allow commands to be created manually.</para>
      </summary>
      <returns>Always null (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.InitializeDictionary(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.InitializeDictionary(DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.InitializeDictionary(DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.InitializeDictionary(DevExpress.Xpo.Metadata.XPDictionary,System.Reflection.Assembly[])">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.InitializeDictionary(DevExpress.Xpo.Metadata.XPDictionary,System.Type[])">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a data store using the specified modification statements.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>The result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.ModifyDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.IEnumerable{DevExpress.Xpo.Metadata.XPClassInfo})">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary,System.Reflection.Assembly[])">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,DevExpress.Xpo.Metadata.XPDictionary,System.Type[])">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="dictionary"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,System.Reflection.Assembly[])">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="assemblies"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.PrepareDataStore(DevExpress.Xpo.DB.IDataStore,System.Type[])">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="types"></param>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Fetches data from a data store using the specified query statements.</para>
      </summary>
      <param name="selects">An array of statements to obtain data from the data store.</param>
      <returns>The data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.SelectDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.ThreadSafeDataLayer.UpdateSchema(System.Boolean,DevExpress.Xpo.Metadata.XPClassInfo[])">
      <summary>
        <para>Updates the storage schema according to the specified class descriptions.</para>
      </summary>
      <param name="doNotCreate">true if the schema should not be created when the table that corresponds to the first item in the types array doesn&#39;t exist in the storage.</param>
      <param name="types">An array of <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> objects that specify object metadata for which schema should be created in the data store.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.UnitOfWork">
      <summary>
        <para>Maintains a list of persistent objects that are affected by a transaction. Keeps track of every change to every persistent object during a transaction that can affect a data store. See Unit of Work.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.UnitOfWork"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.#ctor(DevExpress.Xpo.IDataLayer,System.IDisposable[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.UnitOfWork"/> class with the specified settings.</para>
      </summary>
      <param name="layer">An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.DataLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects that implement the <see cref="T:System.IDisposable"/> interface. These objects are automatically disposed of when the unit of work is disconnected.</param>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.#ctor(DevExpress.Xpo.IObjectLayer,System.IDisposable[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.UnitOfWork"/> class with specified settings.</para>
      </summary>
      <param name="layer">An object implementing the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface. This value is assigned to the <see cref="P:DevExpress.Xpo.Session.ObjectLayer"/> property.</param>
      <param name="disposeOnDisconnect">An array of objects that implement the <see cref="T:System.IDisposable"/> interface. These objects are automatically disposed of when the explicit unit of work is disconnected.</param>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.#ctor(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.UnitOfWork"/> class with the specified dictionary.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> descendant that provides metadata on persistent objects in a data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.UnitOfWork"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created UnitOfWork instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.CommitChanges">
      <summary>
        <para>Commits all the changes made to persistent objects to a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.CommitChangesAsync(DevExpress.Xpo.AsyncCommitCallback)">
      <summary>
        <para>Asynchronously commits all the changes made to persistent objects to a data store and notifies upon completion.</para>
      </summary>
      <param name="callback">A <see cref="T:DevExpress.Xpo.AsyncCommitCallback"/> delegate to be called after the changes have been saved. Use the callback to store the exception information passed as a parameter, and use this information later, to raise the exception again, within the original thread. Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>An object identifying the current asynchronous operation, intended for internal use.</returns>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.CommitChangesAsync(System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously commits object changes made in a specified session and notifies upon completion.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that commits specified object changes.</returns>
    </member>
    <member name="M:DevExpress.Xpo.UnitOfWork.ReloadChangedObjects">
      <summary>
        <para>Reloads the state of persistent objects modified within the current Unit of Work from the data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.ValueConverterAttribute">
      <summary>
        <para>Specifies that a property is made persistent using a Value Converter.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ValueConverterAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.Metadata.ValueConverter"/> class.</para>
      </summary>
      <param name="converterType">The <see cref="T:System.Type"/> of the converter. This value is assigned to the <see cref="P:DevExpress.Xpo.ValueConverterAttribute.ConverterType"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.ValueConverterAttribute.Converter">
      <summary>
        <para>Gets the value converter.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Metadata.ValueConverter"/> descendant which represents the value converter.</value>
    </member>
    <member name="P:DevExpress.Xpo.ValueConverterAttribute.ConverterType">
      <summary>
        <para>Gets the converter&#39;s type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> of the converter.</value>
    </member>
    <member name="T:DevExpress.Xpo.ViewPropertiesCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Xpo.ViewProperty"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ViewPropertiesCollection.#ctor(DevExpress.Xpo.XPView)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ViewPropertiesCollection"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.XPView"/> object that represents the view which owns this collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.ViewPropertiesCollection.Add(DevExpress.Xpo.ViewPropertiesCollection)">
      <summary>
        <para>Adds the objects in the specified collection to the current collection.</para>
      </summary>
      <param name="sortProperties">A <see cref="T:DevExpress.Xpo.ViewPropertiesCollection"/> object which represents the collection whose elements are appended to the current collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.ViewPropertiesCollection.Add(DevExpress.Xpo.ViewProperty)">
      <summary>
        <para>Adds the specified object to the collection.</para>
      </summary>
      <param name="sortProperty">A <see cref="T:DevExpress.Xpo.ViewProperty"/> object to add to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.ViewPropertiesCollection.AddRange(DevExpress.Xpo.ViewProperty[])">
      <summary>
        <para>Adds an array of <see cref="T:DevExpress.Xpo.ViewProperty"/> objects to the collection.</para>
      </summary>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.ViewProperty"/> objects to add to the collection.</param>
    </member>
    <member name="P:DevExpress.Xpo.ViewPropertiesCollection.Item(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Returns an item with the specified expression.</para>
      </summary>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant that contains the expression used to calculate the values in a column.</param>
      <value>A <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified expression.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewPropertiesCollection.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to the elements in the collection.</para>
      </summary>
      <param name="index">An integer value which specifies the zero-based index which identifies an element.</param>
      <value>A <see cref="T:DevExpress.Xpo.ViewProperty"/> object which represents the item in the collection.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewPropertiesCollection.Item(System.String)">
      <summary>
        <para>Returns an item with the specified name.</para>
      </summary>
      <param name="name">A string containing the name of the required <see cref="T:DevExpress.Xpo.ViewProperty"/>.</param>
      <value>A <see cref="T:DevExpress.Xpo.ViewProperty"/> with the specified name.</value>
    </member>
    <member name="T:DevExpress.Xpo.ViewProperty">
      <summary>
        <para>A view column.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ViewProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ViewProperty"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ViewProperty.#ctor(System.String,DevExpress.Xpo.SortDirection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ViewProperty"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the column&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Sorting"/> property.</param>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which the expression used to calculate the values in a column. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Property"/> property.</param>
      <param name="group">true to group the view by the values of this property; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Group"/> property.</param>
      <param name="fetch">true to retrieve data for the property from a data store; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Fetch"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.ViewProperty.#ctor(System.String,DevExpress.Xpo.SortDirection,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ViewProperty"/> class with specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the column&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Sorting"/> property.</param>
      <param name="property">A <see cref="T:System.String"/> value which specifies the expression used to calculate the values in a column. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Property"/> property.</param>
      <param name="group">true to group the view by the values of this property; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Group"/> property.</param>
      <param name="fetch">true to retrieve data for the property from a data store; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Fetch"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.ViewProperty.Fetch">
      <summary>
        <para>Gets or sets whether to retrieve data for the property from a data store.</para>
      </summary>
      <value>true to retrieve data for the property from a data store; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewProperty.Group">
      <summary>
        <para>Gets or sets whether the view is grouped by the values of this property (column).</para>
      </summary>
      <value>true to group the view by the values of this property; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewProperty.Name">
      <summary>
        <para>Gets or sets the property&#39;s name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the property name.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewProperty.Property">
      <summary>
        <para>Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant that contains the expression used to calculate the values in a column.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewProperty.Sorting">
      <summary>
        <para>Gets or sets the column&#39;s sort order.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the column&#39;s sort order.</value>
    </member>
    <member name="T:DevExpress.Xpo.ViewRecord">
      <summary>
        <para>A record within the <see cref="T:DevExpress.Xpo.XPView"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.ViewRecord.#ctor(DevExpress.Xpo.XPView,System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.ViewRecord"/> class.</para>
      </summary>
      <param name="view">An <see cref="T:DevExpress.Xpo.XPView"/> object that represents the view to which the record belongs.</param>
      <param name="data">An array of objects that represent the record&#39;s data.</param>
    </member>
    <member name="M:DevExpress.Xpo.ViewRecord.GetObject">
      <summary>
        <para>Returns the persistent object that the current view record corresponds to.</para>
      </summary>
      <returns>An object which represents the persistent object that the current view record corresponds to.</returns>
    </member>
    <member name="P:DevExpress.Xpo.ViewRecord.Item(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Gets the value in the specified column.</para>
      </summary>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant that contains the expression used to calculate the values in a column.</param>
      <value>An object which represents the value in the specified column.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewRecord.Item(System.Int32)">
      <summary>
        <para>Gets the value of the specified column.</para>
      </summary>
      <param name="index">An integer value which represents the column&#39;s index.</param>
      <value>An object which represents the value of the specified column.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewRecord.Item(System.String)">
      <summary>
        <para>Gets the value of the specified column.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the column&#39;s name.</param>
      <value>An object which represents the value of the specified column.</value>
    </member>
    <member name="P:DevExpress.Xpo.ViewRecord.View">
      <summary>
        <para>Gets the view to which this record belongs.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.XPView"/> object which represents the view to which this record belongs.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPBaseCollection">
      <summary>
        <para>An ancestor of the <see cref="T:DevExpress.Xpo.XPCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BaseAdd(System.Object)">
      <summary>
        <para>Adds the specified persistent object to the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>.</para>
      </summary>
      <param name="newObject">The persistent object to add to the collection.</param>
      <returns>The zero-based index position at which the new element was inserted.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BaseAddRange(System.Collections.ICollection)">
      <summary>
        <para>Adds each element from a specified collection of persistent objects to the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>.</para>
      </summary>
      <param name="objects">An ICollection object, which is a collection of persistent objects to add to the XPBaseCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BaseIndexer(System.Int32)">
      <summary>
        <para>Gets the object at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the object to get.</param>
      <returns>The object at the specified index in the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BaseIndexOf(System.Object)">
      <summary>
        <para>Determines the index of the specified object in the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>.</para>
      </summary>
      <param name="value">The persistent object to locate in the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>.</param>
      <returns>The zero-based index of the object in the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>, if found; otherwise, -1.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BaseRemove(System.Object)">
      <summary>
        <para>Removes the specified persistent object from the <see cref="T:DevExpress.Xpo.XPBaseCollection"/>.</para>
      </summary>
      <param name="theObject">An object to remove from the collection.</param>
      <returns>true if the object has been successfully removed from the collection; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BeginLoad">
      <summary>
        <para>Starts the loading process.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.BeginLoad(System.Boolean)">
      <summary>
        <para>Starts the loading process.</para>
      </summary>
      <param name="force"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.BindingBehavior">
      <summary>
        <para>Defines which operations a bound control can perform on a collection.This enumeration has a FlagsAttribute that allows a bitwise combination of its member values.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Xpo.CollectionBindingBehavior"/> which specifies which operations a bound control can perform on a collection.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive">
      <summary>
        <para>Gets or sets whether string comparisons during sorting and filtering of the <see cref="T:DevExpress.Xpo.XPBaseCollection"/> are case-sensitive.</para>
      </summary>
      <value>true if string comparisons are case-sensitive; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.ClearCount">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.XPBaseCollection.CollectionChanged">
      <summary>
        <para>Occurs when an item is added to, or removed from the <see cref="T:DevExpress.Xpo.XPBaseCollection"/> (when the <see cref="M:DevExpress.Xpo.XPBaseCollection.BaseAdd(System.Object)"/> or <see cref="M:DevExpress.Xpo.XPBaseCollection.BaseRemove(System.Object)"/> method is called).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.Count">
      <summary>
        <para>Gets the number of elements contained in the <see cref="T:DevExpress.Xpo.XPBaseCollection"/> instance.</para>
      </summary>
      <value>The number of elements contained in the collection</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.Criteria">
      <summary>
        <para>Gets or sets the criteria used to filter objects on the data store side.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the criteria to filter objects on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.CriteriaString">
      <summary>
        <para>Gets or sets the criteria used to filter objects on the data store side.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the criteria to filter objects on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.DeleteObjectOnRemove">
      <summary>
        <para>Gets or sets whether the persistent object is deleted from the data store when it is removed from the collection.</para>
      </summary>
      <value>true if the persistent object is deleted from the data store when it is removed from the collection; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.DisplayableProperties">
      <summary>
        <para>Gets or sets the displayable properties list for a bound control.</para>
      </summary>
      <value>The displayable properties list, containing property paths separated by semicolons. For example, &quot;FirstName;LastName;Company.Name;Address.City&quot;.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.EnableObjectChangedNotificationsWhileEditing">
      <summary>
        <para>Specifies whether object changed notifications occur when editing a property.</para>
      </summary>
      <value>true if object changed notifications occur when editing a property; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.EndLoad(System.Collections.IEnumerable)">
      <summary>
        <para>Ends the loading process.</para>
      </summary>
      <param name="objects"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.EvaluateDatastoreCount">
      <summary>
        <para>Specifies the number of elements that will be contained in the collection after loading it.</para>
      </summary>
      <returns>An integer value specifying the number of elements that will be contained in the collection after loading it.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.Filter">
      <summary>
        <para>Gets or sets the criteria used to filter objects on the client side.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the criteria to filter objects on the client side.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.GetDefaultDisplayableProperties(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Returns the default value for the <see cref="P:DevExpress.Xpo.XPBaseCollection.DisplayableProperties"/> property for the specified object type.</para>
      </summary>
      <param name="objectInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object whose properties should be returned.</param>
      <returns>The default value for the <see cref="P:DevExpress.Xpo.XPBaseCollection.DisplayableProperties"/> property.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.GetObjectClassInfo">
      <summary>
        <para>When implemented by a class, returns the metadata information that describes the type of objects in the collection.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that specifies the type of objects in the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.GetRealFetchClassInfo">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.GetRealFetchCriteria">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.HintCollection">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <value>An object that implements the IEnumerable interface.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.IsAsyncLoading">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.IsLoaded">
      <summary>
        <para>Gets whether the <see cref="T:DevExpress.Xpo.XPBaseCollection"/> collection is loaded with objects from the data store.</para>
      </summary>
      <value>true if the collection is loaded with objects from the data store; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.Xpo.XPBaseCollection.ListChanged">
      <summary>
        <para>Occurs when the list or an item in the list of the <see cref="T:DevExpress.Xpo.XPBaseCollection"/> collection is changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.Load">
      <summary>
        <para>Loads persistent objects of a specific type from the data store into the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.LoadAsync">
      <summary>
        <para>Asynchronously loads persistent objects of a specific type from the data store into the collection.</para>
      </summary>
      <returns>true if the current method call started collection loading; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.LoadAsync(DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Asynchronously loads persistent objects of a specific type from the data store into the collection, and notifies upon completion.</para>
      </summary>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback delegate to be called after loading is complete.Use callback to do the following:Do not raise exceptions or modify persistent objects within a callback.</param>
      <returns>true if the current method call started the collection load; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.LoadingEnabled">
      <summary>
        <para>Gets or sets whether loading of data from a data store to the collection is enabled.</para>
      </summary>
      <value>true if data can be loaded; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.PreFetch(System.String[])">
      <summary>
        <para>Enforces loading data for associated collections and delayed properties.</para>
      </summary>
      <param name="propertyPaths">An array of strings that are the collection property and delayed property names, or property paths (e.g, &quot;ChildCollection.AnotherChildCollection&quot;).</param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.Reload">
      <summary>
        <para>Clears the collection and marks it to be reloaded with data from the data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPBaseCollection.ResolveSession">
      <summary>
        <para>Enables the collection to be associated with a session.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.ResumeChangedEvents">
      <summary>
        <para>Resumes the immediate update of the collection after it was suspended using the <see cref="M:DevExpress.Xpo.XPBaseCollection.SuspendChangedEvents"/> method.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.SelectDeleted">
      <summary>
        <para>Gets or sets whether objects that are marked as deleted are retrieved by a collection from a data store.</para>
      </summary>
      <value>true if objects marked as deleted are loaded to the collection from a data store; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.Session">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Xpo.Session"/> used by the current collection.</para>
      </summary>
      <value>The session with a connection to a data source. The default value is <see cref="P:DevExpress.Xpo.Session.DefaultSession"/>.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.SkipReturnedObjects">
      <summary>
        <para>Gets or sets the number of objects to exclude when populating the collection with objects from a data store.</para>
      </summary>
      <value>An integer value that specifies the number of objects to exclude when populating the collection. 0 indicates that objects are not excluded.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.Sorting">
      <summary>
        <para>Gets or sets the sort settings for the current collection.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Xpo.SortingCollection"/> that specifies the sort order for the collection.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.SuspendChangedEvents">
      <summary>
        <para>Prevents the immediate update of the collection when objects are added/removed and filtering/sorting is changed until the <see cref="M:DevExpress.Xpo.XPBaseCollection.ResumeChangedEvents"/> method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseCollection.TopReturnedObjects">
      <summary>
        <para>Gets or sets the maximum number of objects retrieved by the collection from a data store.</para>
      </summary>
      <value>An integer that specifies the maximum number of objects that will be retrieved by the collection from a data store. 0 indicates that all objects which match the criteria will be retrieved.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseCollection.ToString">
      <summary>
        <para>Returns a string that represents the current XPCollection.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value which represents the current object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.XPBaseObject">
      <summary>
        <para>Serves as a base for classes that represent persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.AddChangedEventHandler(System.Object,DevExpress.Xpo.Helpers.IObjectChange)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="persistentObject">The persistent object.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.AddChangedEventHandler(System.Object,DevExpress.Xpo.ObjectChangeEventHandler)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="persistentObject">The persistent object.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="F:DevExpress.Xpo.XPBaseObject.AutoSaveOnEndEdit">
      <summary>
        <para>Specifies whether changes in a persistent object are automatically committed to a database after you have finished editing the object in a bound control.To learn more, refer to How to: Control Automatic Saving of Objects when Editing in a Grid and How to: Prevent Changes in a Persistent Object from being Automatically Committed.</para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.XPBaseObject.Changed">
      <summary>
        <para>Occurs when a property of the object is changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Delete">
      <summary>
        <para>Deletes the persistent object and its aggregated objects from persistent storage.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Evaluate(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Evaluates the specified expression against the current instance of the persistent object.</para>
      </summary>
      <param name="expression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the expression to evaluate.</param>
      <returns>The evaluated value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Evaluate(System.String)">
      <summary>
        <para>Evaluates the specified string expression against the current instance of the persistent object.</para>
      </summary>
      <param name="expression">A string that specifies the expression to evaluate.</param>
      <returns>A value evaluated.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.EvaluateAlias(System.String)">
      <summary>
        <para>Evaluates an expression specified by the <see cref="T:DevExpress.Xpo.PersistentAliasAttribute"/> attribute for the specified property.</para>
      </summary>
      <param name="memberName">A string that specifies the name of the property that is declared with the <see cref="T:DevExpress.Xpo.PersistentAliasAttribute"/> attribute.</param>
      <returns>A value evaluated.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Fit(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Checks whether the current instance matches the specified criteria.</para>
      </summary>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies a Boolean condition to check against the current instance.</param>
      <returns>true if the current instance matches the specified criteria; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Fit(System.String)">
      <summary>
        <para>Checks whether the current instance matches the specified criteria.</para>
      </summary>
      <param name="condition">A string that specifies a Boolean condition to check against the current instance.</param>
      <returns>true if the current instance matches the specified criteria; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.GetMemberValue(System.String)">
      <summary>
        <para>Returns the value of the specified property.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the property&#39;s name. If a property with the specified name isn&#39;t found, the <see cref="T:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException"/> is thrown.</param>
      <returns>An object which represents the value of the specified property.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseObject.Loading">
      <summary>
        <para>Gets whether the object is currently being initialized.</para>
      </summary>
      <value>true if the object is currently being initialized; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.RaiseChangedEvent(System.Object,DevExpress.Xpo.ObjectChangeEventArgs)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="persistentObject"></param>
      <param name="args"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Reload">
      <summary>
        <para>Reloads the state of the specified persistent object from the data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.RemoveChangedEventHandler(System.Object,DevExpress.Xpo.Helpers.IObjectChange)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="persistentObject">The persistent object.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.RemoveChangedEventHandler(System.Object,DevExpress.Xpo.ObjectChangeEventHandler)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
      <param name="persistentObject">The persistent object.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.Save">
      <summary>
        <para>Saves the object to the data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBaseObject.SetMemberValue(System.String,System.Object)">
      <summary>
        <para>Sets the value of the specified property.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the property name. If a property with the specified name isn&#39;t found, a <see cref="T:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException"/> is thrown.</param>
      <param name="newValue">An object which represents the new value.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPBaseObject.This">
      <summary>
        <para>Refers to the current instance.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.XPBaseObject"/> object which represents the current object.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPBindingSource">
      <summary>
        <para>A binding source that binds data from a data source to a control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBindingSource.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPBindingSource"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPBindingSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPBindingSource"/> instance and adds this instance to container.</para>
      </summary>
      <param name="container">A container that is the owner of the created XPBindingSource.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.BindingBehavior">
      <summary>
        <para>Defines operations the bound control can perform with the data source.</para>
      </summary>
      <value>A CollectionBindingBehavior value that defines how the bound control interacts with the data source.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.Count">
      <summary>
        <para>Gets the number of items the data source contains.</para>
      </summary>
      <value>The number of items in the data source.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.DataSource">
      <summary>
        <para>Gets or sets a data source the <see cref="T:DevExpress.Xpo.XPBindingSource"/> binds to a control.</para>
      </summary>
      <value>An object that represents a data source for the <see cref="T:DevExpress.Xpo.XPBindingSource"/> to use.</value>
    </member>
    <member name="E:DevExpress.Xpo.XPBindingSource.DataSourceChanged">
      <summary>
        <para>Occurs when the <see cref="P:DevExpress.Xpo.XPBindingSource.DataSource"/> property value changes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.Dictionary">
      <summary>
        <para>Gets or sets an <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/>.</para>
      </summary>
      <value>An XPDictionary the XPBindingSource uses to get XPClassInfo metadata from the type of the data source&#39;s items.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPBindingSource.DisableDesignModeDetection">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.DisplayableProperties">
      <summary>
        <para>Gets or sets a list of properties available for binding.</para>
      </summary>
      <value>A string that contains property paths separated by semicolons, for example, &quot;FirstName;LastName;Company.Name;Address.City&quot;.</value>
    </member>
    <member name="E:DevExpress.Xpo.XPBindingSource.ListChanged">
      <summary>
        <para>Occurs in one of the following cases: the <see cref="P:DevExpress.Xpo.XPBindingSource.DataSource"/> property value changed, the data source&#39;s element list changed, or individual elements in the data source changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.Object(System.Int32)">
      <summary>
        <para>An indexer that provides access to the data source&#39;s specific object.</para>
      </summary>
      <param name="index">An index of the object to be accessed.</param>
      <value>An object that has the specified index.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.ObjectClassInfo">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the type of items the data source contains.</para>
      </summary>
      <value>Metadata that relates to the data source the XPBindingSource uses.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPBindingSource.ObjectType">
      <summary>
        <para>Gets or sets the type of items the data source contains.</para>
      </summary>
      <value>A type of items the data source contains.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPClassInfoStub">
      <summary>
        <para>A container for persistent class metadata passed via <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.#ctor(System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="className"></param>
    </member>
    <member name="P:DevExpress.Xpo.XPClassInfoStub.ClassName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.Equals(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.FromClassInfo(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.GetHashCode">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.GetMemberHasOldValue(DevExpress.Xpo.XPObjectStub,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <param name="memberName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.GetMemberIndex(System.String,System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="memberName"></param>
      <param name="raiseException"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.GetMemberOldValue(DevExpress.Xpo.XPObjectStub,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <param name="memberName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.GetMemberValue(DevExpress.Xpo.XPObjectStub,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <param name="memberName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.IsMemberChanged(DevExpress.Xpo.XPObjectStub,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <param name="memberName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPClassInfoStub.KeyFieldName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPClassInfoStub.MemberCount">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPClassInfoStub.MembersList">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPClassInfoStub.OptimisticLockFieldInDataLayerName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPClassInfoStub.OptimisticLockFieldName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.SetMemberOldValue(DevExpress.Xpo.XPObjectStub,System.String,System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <param name="memberName"></param>
      <param name="value"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.SetMemberValue(DevExpress.Xpo.XPObjectStub,System.String,System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <param name="memberName"></param>
      <param name="value"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPClassInfoStub.ToString">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.XPCollection">
      <summary>
        <para>The collection of persistent objects that implements delayed loading and can serve as a data source for a data-aware control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with the default <see cref="T:DevExpress.Xpo.Session"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria are evaluated.</param>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class metadata information of objects to include into the collection.</param>
      <param name="condition">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria are evaluated.</param>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
      <param name="condition">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="selectDeleted">true if objects marked as deleted are loaded to the collection from a data store; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Session,System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria are evaluated.</param>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The type of persistent objects to include into the collection.</param>
      <param name="condition">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with a specified <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
      <param name="theCriteria">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="sortProperties">An array of the <see cref="T:DevExpress.Xpo.SortProperty"/> that specify the sort order for the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
      <param name="loadingEnabled">A Boolean value that specifies whether the collection is automatically populated with objects from the data store when the collection&#39;s content is accessed for the first time (for instance, when the <see cref="P:DevExpress.Xpo.XPBaseCollection.Count"/> property is read). This parameter is used to initialize the <see cref="P:DevExpress.Xpo.XPBaseCollection.LoadingEnabled"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IEnumerable)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IEnumerable,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IEnumerable,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The persistent class&#39;s metadata information of objects to include into the collection.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
      <param name="caseSensitive">true if string comparison operators specified by the copyFilter are case-sensitive; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.XPBaseCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which objects are copied to the newly created collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which objects are copied to the newly created collection.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which objects are copied to the newly created collection.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
      <param name="caseSensitive">true if string comparison operators specified by the copyFilter are case-sensitive; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="theOwner">The object that will own the new collection.</param>
      <param name="refProperty">The owner&#39;s property for which the related object collection is created.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The type of persistent objects to include into the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with a specified <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The type of persistent objects to include into the collection.</param>
      <param name="theCriteria">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> that specifies the sort order for the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.Session,System.Type,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects.</param>
      <param name="objType">The type of persistent objects to include into the collection.</param>
      <param name="loadingEnabled">A Boolean value that specifies whether the collection is automatically populated with objects from the data store when the collection is accessed for the first time (for instance, when the <see cref="P:DevExpress.Xpo.XPBaseCollection.Count"/> property is read). This parameter is used to initialize the <see cref="P:DevExpress.Xpo.XPBaseCollection.LoadingEnabled"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.XPBaseCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specified collection.</para>
      </summary>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which objects are copied to the newly created collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which objects are copied to the newly created collection.</param>
      <param name="filter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class by copying objects from a specific collection using specified settings.</para>
      </summary>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which objects are copied to the newly created collection.</param>
      <param name="filter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
      <param name="caseSensitive">true if string comparison operators specified by the filter are case-sensitive; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created XPCollection instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with the default <see cref="T:DevExpress.Xpo.Session"/> and object type.</para>
      </summary>
      <param name="objType">The type of persistent objects to include into the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.#ctor(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection"/> class with default <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="objType">The type of persistent objects to include into the collection.</param>
      <param name="theCriteria">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> that specifies the sort order for the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.Add(System.Object)">
      <summary>
        <para>Adds the specified persistent object to the <see cref="T:DevExpress.Xpo.XPCollection"/>.</para>
      </summary>
      <param name="newObject">The persistent object to add to the collection.</param>
      <returns>The zero-based index position at which the new element is inserted.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.AddRange(System.Collections.ICollection)">
      <summary>
        <para>Adds each element from a specified collection of persistent objects to the <see cref="T:DevExpress.Xpo.XPCollection"/>.</para>
      </summary>
      <param name="objects">An ICollection object, which is a collection of persistent objects to add to the XPCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.GetObjectClassInfo">
      <summary>
        <para>Gets the metadata information for the persistent objects contained in the collection.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that specifies the metadata information for the persistent objects in the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.IndexOf(System.Object)">
      <summary>
        <para>Returns the index of the specified object in the <see cref="T:DevExpress.Xpo.XPCollection"/>.</para>
      </summary>
      <param name="theObject">The persistent object to locate in the collection.</param>
      <returns>The zero-based index of the object in the <see cref="T:DevExpress.Xpo.XPCollection"/>, if found; otherwise, -1.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.Lookup(System.Object)">
      <summary>
        <para>Retrieves an object from the collection by object ID.</para>
      </summary>
      <param name="key">ID of an object to retrieve from the collection.</param>
      <returns>An object found or null reference (Nothing in VisualBasic) if an object does not exist in the collection.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPCollection.Object(System.Int32)">
      <summary>
        <para>Gets the object at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the object to get.</param>
      <value>An object at the specified index in <see cref="T:DevExpress.Xpo.XPCollection"/>.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCollection.ObjectClassInfo">
      <summary>
        <para>Gets or sets the metadata information that describes the type of objects stored in the current collection.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> of the persistent object stored in the collection.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCollection.ObjectType">
      <summary>
        <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection.Remove(System.Object)">
      <summary>
        <para>Removes the specified object from the <see cref="T:DevExpress.Xpo.XPCollection"/>.</para>
      </summary>
      <param name="theObject">An object to remove from the collection.</param>
    </member>
    <member name="T:DevExpress.Xpo.XPCollection`1">
      <summary>
        <para>A generic type collection of persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with the default <see cref="T:DevExpress.Xpo.Session"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with default <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="theCriteria">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> that specifies the sort order for the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Session,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with specified settings.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria are evaluated.</param>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="condition">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.PersistentCriteriaEvaluationBehavior,DevExpress.Xpo.Session,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with specified settings.</para>
      </summary>
      <param name="criteriaEvaluationBehavior">A <see cref="T:DevExpress.Xpo.PersistentCriteriaEvaluationBehavior"/> enumeration value that specifies how the persistent criteria are evaluated.</param>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="condition">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="selectDeleted">true if objects marked as deleted are loaded to the collection from a data store; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with a specified <see cref="T:DevExpress.Xpo.Session"/>.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with a specified <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="theCriteria">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> that specifies the sort order for the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.XPBaseCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
      <param name="caseSensitive">true if string comparisons are case-sensitive; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="loadingEnabled">A Boolean value that specifies whether the collection is automatically populated with T objects from the data store when the collection is accessed for the first time (for instance, when the <see cref="P:DevExpress.Xpo.XPBaseCollection.Count"/> property is read). This parameter is used to initialize the <see cref="P:DevExpress.Xpo.XPBaseCollection.LoadingEnabled"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,System.Collections.IEnumerable)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,System.Collections.IEnumerable,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,System.Collections.IEnumerable,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="originalCollection">An object that implements the IEnumerable interface.</param>
      <param name="copyFilter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
      <param name="caseSensitive">true if string comparisons are case-sensitive; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.Session,System.Object,DevExpress.Xpo.Metadata.XPMemberInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class with specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save T persistent objects.</param>
      <param name="theOwner">The object that will own the new collection.</param>
      <param name="refProperty">The owner&#39;s property for which the related object collection is created.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.XPBaseCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specified collection.</para>
      </summary>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which T objects are copied to the newly created collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which T objects are copied to the newly created collection.</param>
      <param name="filter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.#ctor(DevExpress.Xpo.XPBaseCollection,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollection`1"/> class by copying T objects from a specific collection using specified settings.</para>
      </summary>
      <param name="originalCollection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> from which T objects are copied to the newly created collection.</param>
      <param name="filter">The <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> that specifies the criteria for object selection from the originalCollection.</param>
      <param name="caseSensitive">true if string comparison operators specified by the copyFilter are case-sensitive; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.XPBaseCollection.CaseSensitive"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.Add(`0)">
      <summary>
        <para>Adds a specified persistent object to the <see cref="T:DevExpress.Xpo.XPCollection`1"/>.</para>
      </summary>
      <param name="newObject">A T persistent object to add to the collection. This can be any object that implements the <see cref="T:DevExpress.Xpo.IXPSimpleObject"/> interface or has the <see cref="T:DevExpress.Xpo.PersistentAttribute"/> attribute.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>
        <para>Adds specified persistent objects to the <see cref="T:DevExpress.Xpo.XPCollection`1"/>.</para>
      </summary>
      <param name="objects">An IEnumerable&lt;T&gt; object, which is a collection of T persistent objects to add to the XPCollection&lt;T&gt;.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.GetObjectClassInfo">
      <summary>
        <para>Gets the metadata information for the persistent objects contained in the collection.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object associated with the T type.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.IndexOf(`0)">
      <summary>
        <para>Returns the index of a specified T object in the <see cref="T:DevExpress.Xpo.XPCollection`1"/>.</para>
      </summary>
      <param name="theObject">A T object to locate in the collection.</param>
      <returns>The zero-based index of the object in the collection, if found; otherwise, -1.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.Lookup(System.Object)">
      <summary>
        <para>Retrieves a T object from the collection by a specified key value.</para>
      </summary>
      <param name="key">A key value of an object to retrieve from the collection.</param>
      <returns>A T object found or null reference (Nothing in VisualBasic) if an object does not exist in the collection.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPCollection`1.Object(System.Int32)">
      <summary>
        <para>Gets a T object at a specified index in the <see cref="T:DevExpress.Xpo.XPCollection`1"/>.</para>
      </summary>
      <param name="index">The zero-based index of the object to get.</param>
      <value>A T object at the specified index in the collection.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPCollection`1.Remove(`0)">
      <summary>
        <para>Removes the specified object from the <see cref="T:DevExpress.Xpo.XPCollection`1"/>.</para>
      </summary>
      <param name="theObject">A T object to remove from the collection.</param>
      <returns>true if the specified object has been successfully removed from the collection; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Xpo.XPCollectionChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpo.XPBaseCollection.CollectionChanged"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPCollectionChangedEventArgs.#ctor(DevExpress.Xpo.XPCollectionChangedType,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollectionChangedEventArgs"/> class.</para>
      </summary>
      <param name="collectionChangedType">An <see cref="T:DevExpress.Xpo.XPCollectionChangedType"/> enumeration value which represents the kind of change. This value is assigned to the <see cref="F:DevExpress.Xpo.XPCollectionChangedEventArgs.CollectionChangedType"/> property.</param>
      <param name="changedObject">An object which represents the instance of the collection with the change. This value is assigned to the <see cref="F:DevExpress.Xpo.XPCollectionChangedEventArgs.ChangedObject"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCollectionChangedEventArgs.#ctor(DevExpress.Xpo.XPCollectionChangedType,System.Object,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCollectionChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="collectionChangedType">An <see cref="T:DevExpress.Xpo.XPCollectionChangedType"/> enumeration value which represents the kind of change. This value is assigned to the <see cref="F:DevExpress.Xpo.XPCollectionChangedEventArgs.CollectionChangedType"/> property.</param>
      <param name="changedObject">An object which represents the instance of the collection with the change. This value is assigned to the <see cref="F:DevExpress.Xpo.XPCollectionChangedEventArgs.ChangedObject"/> property.</param>
      <param name="newIndex">An integer value which specifies the object&#39;s new index within the collection. This value is assigned to the <see cref="F:DevExpress.Xpo.XPCollectionChangedEventArgs.NewIndex"/> field.</param>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedEventArgs.ChangedObject">
      <summary>
        <para>An object which represents the instance of the collection that has been changed.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedEventArgs.CollectionChangedType">
      <summary>
        <para>An <see cref="T:DevExpress.Xpo.XPCollectionChangedType"/> enumeration value which represents the kind of change.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedEventArgs.NewIndex">
      <summary>
        <para>Gets or sets the zero-based index of the object in the <see cref="T:DevExpress.Xpo.XPCollection"/>.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.XPCollectionChangedEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Xpo.XPBaseCollection.CollectionChanged"/> event.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">An <see cref="T:DevExpress.Xpo.XPCollectionChangedEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.XPCollectionChangedType">
      <summary>
        <para>Lists the values that specify how the collection has been changed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedType.AfterAdd">
      <summary>
        <para>A new element has been added to the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedType.AfterRemove">
      <summary>
        <para>An element has been removed from the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedType.BeforeAdd">
      <summary>
        <para>An element is about to be added to the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.XPCollectionChangedType.BeforeRemove">
      <summary>
        <para>An element is about to be removed from the collection.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.XPCursor">
      <summary>
        <para>A pageable collection of persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class with the specified <see cref="P:DevExpress.Xpo.XPCursor.Session"/> and <see cref="P:DevExpress.Xpo.XPCollection.ObjectClassInfo"/> properties.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the persistent class&#39;s metadata information for the objects to include in the collection. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.ObjectClassInfo"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides the persistent class&#39;s metadata information for the objects to include in the collection. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.ObjectClassInfo"/> property.</param>
      <param name="theCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class with the specified <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides the persistent class&#39;s metadata information for the objects to include in the collection. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.ObjectClassInfo"/> property.</param>
      <param name="theCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects that specify the page able collection&#39;s sort order. These objects are added to the <see cref="P:DevExpress.Xpo.XPCursor.Sorting"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,System.Collections.IList)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class and populates it with the objects whose Oid property&#39;s value is contained within the keyList.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that provides the persistent class&#39;s metadata information for the objects to include in the collection. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.ObjectClassInfo"/> property.</param>
      <param name="keysList">The list of keys that identify persistent objects to retrieve.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">The type of persistent objects to include in the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class  with the specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">The type of persistent objects to include in the collection.</param>
      <param name="theCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects that specify the page able collection&#39;s sort order. These objects are added to the <see cref="P:DevExpress.Xpo.XPCursor.Sorting"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(DevExpress.Xpo.Session,System.Type,System.Collections.IList)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class and populates it with the objects whose Oid property&#39;s value is contained within the keyList.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPCursor.Session"/> property.</param>
      <param name="objType">The type of persistent objects to include in the collection.</param>
      <param name="keysList">The list of keys that identify persistent objects to retrieve.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class with the default <see cref="T:DevExpress.Xpo.Session"/>.</para>
      </summary>
      <param name="objType">The type of persistent objects to include in the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.#ctor(System.Type,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortProperty[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPCursor"/> class with default <see cref="T:DevExpress.Xpo.Session"/> and criteria-specific options.</para>
      </summary>
      <param name="objType">The type of persistent objects to include into the collection.</param>
      <param name="theCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
      <param name="sortProperties">An array of <see cref="T:DevExpress.Xpo.SortProperty"/> objects that specify the page able collection&#39;s sort order. These objects are added to the <see cref="P:DevExpress.Xpo.XPCursor.Sorting"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies all persistent objects which are stored within the current collection to the specified array starting at the specified index.</para>
      </summary>
      <param name="array">An array which the persistent objects are copied to.</param>
      <param name="index">An integer value which specifies the zero-based index at which copying begins.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.Count">
      <summary>
        <para>Gets the number of persistent objects within the collection.</para>
      </summary>
      <value>An integer value which specifies the number of persistent objects within the collection.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPCursor.GetEnumerator">
      <summary>
        <para>Returns an <see cref="T:System.Collections.IEnumerator"/> for the collection.</para>
      </summary>
      <returns>An object which implements the <see cref="T:System.Collections.IEnumerator"/> interface.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.ObjectClassInfo">
      <summary>
        <para>Gets the metadata information for the persistent objects retrieved by the collection.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects within the collection.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.PageSize">
      <summary>
        <para>Gets or sets the maximum number of persistent objects that can be contained in a single page.</para>
      </summary>
      <value>An integer value which specifies the maximum number of persistent objects that can be contained in a single page. If less than or equal to 0, an <see cref="T:System.ArgumentOutOfRangeException"/> is raised.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.SelectDeleted">
      <summary>
        <para>Gets or sets whether deleted objects are retrieved by the <see cref="T:DevExpress.Xpo.XPCursor"/> the next time it is reloaded.</para>
      </summary>
      <value>true to load deleted objects to the collection the next time it&#39;s reloaded; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.Session">
      <summary>
        <para>Gets the session which is used to load and save persistent objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that is used to load and save persistent objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.Sorting">
      <summary>
        <para>Provides access to the collection whose elements identify the sorted columns in a data store.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which contains information on the sorted columns in a data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPCursor.TopReturnedObjects">
      <summary>
        <para>Gets or sets the maximum number of objects retrieved by the <see cref="T:DevExpress.Xpo.XPCursor"/> collection.</para>
      </summary>
      <value>An integer value which specifies the maximum number of objects retrieved by the collection. A 0 value indicates that all objects which match the criteria and sort order will be retrieved.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPCustomObject">
      <summary>
        <para>Implements the <see cref="T:DevExpress.Xpo.IXPObject"/> and provides a custom key definition.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.XPDataObject">
      <summary>
        <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDataObject.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataObject"/> class.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> descendant which provides the class metadata.</param>
    </member>
    <member name="T:DevExpress.Xpo.XPDataView">
      <summary>
        <para>The data source that displays data from result sets.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class with the specified metadata provider.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class, and populates it with columns based on the specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose persistent properties provide metadata information to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.DB.SelectedData)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class, populates it with columns and loads data based on the specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose persistent properties provide metadata information to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
      <param name="data">An <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object which represents a result set providing data to be loaded into the data view.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[],DevExpress.Xpo.DB.SelectedData)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class, populates it with columns and loads data based on the specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose persistent properties provide metadata information to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information.</param>
      <param name="data">An <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object which represents a result set providing data to be loaded into the data view.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.Metadata.XPClassInfo,System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class and populates it with columns based on the specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose members are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
      <param name="members">An array of property names that are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Type})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class, and creates columns based on the specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
      <param name="names">A list of names for columns to be created and added to the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
      <param name="types">A list of types for columns to be created and added to the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class and populates it with columns based on the specified settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which represents the metadata provider. This value is assigned to the <see cref="P:DevExpress.Xpo.XPDataView.Dictionary"/> property.</param>
      <param name="memberInfoList">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects identifying persistent properties that are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDataView"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created XPDataView instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.AddProperty(System.String,System.Type)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.DataViewProperty"/> object with the specified name and type, and appends it to the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the column name. This value is assigned to the <see cref="P:DevExpress.Xpo.DataViewProperty.Name"/> property.</param>
      <param name="valueType">A <see cref="T:System.Type"/> value which specifies the column&#39;s type. This value is assigned to the <see cref="P:DevExpress.Xpo.DataViewProperty.ValueType"/> property.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DataViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.CaseSensitive">
      <summary>
        <para>Gets or sets whether string comparisons evaluated by the <see cref="T:DevExpress.Xpo.XPDataView"/> on the client are case-sensitive.</para>
      </summary>
      <value>true if string comparisons are case-sensitive; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.Count">
      <summary>
        <para>Gets the number of records within the data view.</para>
      </summary>
      <value>An integer value which specifies the number of records within the data view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.Dictionary">
      <summary>
        <para>Gets or sets the metadata provider used to filter and sort data using custom function operators.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which provides support for custom function operators used to filter and sort data displayed in the data view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.Filter">
      <summary>
        <para>Gets or sets the criteria used to perform client-side filtering of data view rows.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the criteria used to filter data view rows.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.FilterString">
      <summary>
        <para>Gets or sets the string representation of the criteria used to perform client-side filtering of data view rows.</para>
      </summary>
      <value>A string representation of a <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the filtering criteria.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.GetTargetResultSet(DevExpress.Xpo.DB.SelectedData)">
      <summary>
        <para></para>
      </summary>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to individual records within the data view.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the record&#39;s position within the data view. If it&#39;s negative or exceeds the last available index, an exception is thrown.</param>
      <value>A <see cref="T:DevExpress.Xpo.DataViewRecord"/> object which represents the record at the specified position.</value>
    </member>
    <member name="E:DevExpress.Xpo.XPDataView.ListChanged">
      <summary>
        <para>Occurs when the data view&#39;s settings are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.LoadData(DevExpress.Xpo.DB.SelectedData)">
      <summary>
        <para>Loads data from the specified result set to the data view.</para>
      </summary>
      <param name="data">An <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object which represents a result set, providing data to be loaded into the data view.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.LoadOrderedData(DevExpress.Xpo.LoadDataMemberOrderItem[],DevExpress.Xpo.DB.SelectedData)">
      <summary>
        <para>Loads data from the specified result set to the data view, mapping data view columns to result set columns.</para>
      </summary>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information.</param>
      <param name="data">An <see cref="T:DevExpress.Xpo.DB.SelectedData"/> object which represents a result set providing data to be loaded into the data view.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.PopulateProperties(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Populates the data view with columns based on the specified metadata information.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose persistent properties are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.PopulateProperties(DevExpress.Xpo.Metadata.XPClassInfo,System.String[])">
      <summary>
        <para>Populates the data view with columns based on the specified metadata information.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose persistent properties are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
      <param name="members">An array of property names that are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.PopulateProperties(System.Collections.Generic.List{DevExpress.Xpo.Metadata.XPMemberInfo})">
      <summary>
        <para>Populates the data view with columns based on the specified metadata information.</para>
      </summary>
      <param name="memberInfoList">A list of <see cref="T:DevExpress.Xpo.Metadata.XPMemberInfo"/> objects identifying persistent properties that are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPDataView.PopulatePropertiesOrdered(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.LoadDataMemberOrderItem[])">
      <summary>
        <para>Populates the data view with columns based on the specified metadata and mapping information.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object containing metadata information on the object whose persistent properties are used to populate the <see cref="P:DevExpress.Xpo.XPDataView.Properties"/> collection.</param>
      <param name="members">An array of <see cref="T:DevExpress.Xpo.LoadDataMemberOrderItem"/> objects which provide mapping information.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.Properties">
      <summary>
        <para>Provides access to the data view&#39;s columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DataViewPropertiesCollection"/> object representing a collection of data view columns.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDataView.Sorting">
      <summary>
        <para>Provides access to the collection whose elements specify sorting options for the data view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which contains information on the columns used in data view sorting.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPDelayedProperty">
      <summary>
        <para>A delayed property. The delayed property will be loaded the first time it is accessed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDelayedProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPDelayedProperty"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPDelayedProperty.IsLoaded">
      <summary>
        <para>Gets whether the property&#39;s value remains unassigned after the persistent object has been loaded from the data store.</para>
      </summary>
      <value>true if the property&#39;s value is unassigned after the persistent object has been loaded from the data store; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDelayedProperty.IsModified">
      <summary>
        <para>Gets the property value&#39;s modified status.</para>
      </summary>
      <value>true if the property value has been modified since the last load; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPDelayedProperty.Value">
      <summary>
        <para>Gets the value of the property which is delayed for loading.</para>
      </summary>
      <value>An object which represents the property&#39;s value.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPDictionaryStub">
      <summary>
        <para>A container for persistent class metadata providers passed via <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDictionaryStub.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPDictionaryStub.#ctor(DevExpress.Xpo.XPClassInfoStub[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfoList"></param>
    </member>
    <member name="P:DevExpress.Xpo.XPDictionaryStub.ClassInfoList">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.XPInstantFeedbackSource">
      <summary>
        <para>The data source for a <see cref="T:DevExpress.XtraGrid.GridControl"/> and <see cref="T:DevExpress.XtraEditors.SearchLookUpEdit"/> controls that binds these controls to data in Instant Feedback Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the persistent class describing the target database table.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the persistent class describing the target data table.</param>
      <param name="displayableProperties">A string that is  a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object, specifying the filter expression applied to data on the data store side.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.Action{DevExpress.Xpo.ResolveSessionEventArgs},System.Action{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the persistent class describing the target data table.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
      <param name="resolveSession">A System.Action&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event. The specified delegate is attached to the ResolveSession event.</param>
      <param name="dismissSession">A System.Action&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event. The specified delegate is attached to the DismissSession event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs},System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="classInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the persistent class describing the target data table.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
      <param name="resolveSession">An EventHandler&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event. The specified delegate is attached to the ResolveSession event.</param>
      <param name="dismissSession">An EventHandler&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event. The specified delegate is attached to the DismissSession event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created XPInstantFeedbackSource instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class.</para>
      </summary>
      <param name="assemblyName">A string containing the name of the assembly where a persistent class describing the target database table is declared.</param>
      <param name="typeName">A string containing the name of a persistent class describing the target database table.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.String,System.String,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="assemblyName">A string containing the name of the assembly where a persistent class describing the target database table is declared.</param>
      <param name="typeName">A string containing the name of a persistent class describing the target database table.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.String,System.String,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.Action{DevExpress.Xpo.ResolveSessionEventArgs},System.Action{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="assemblyName">A string containing the name of the assembly where a persistent class describing the target database table is declared.</param>
      <param name="typeName">A string containing the name of a persistent class describing the target database table.</param>
      <param name="displayableProperties">A string representing a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
      <param name="resolveSession">A System.Action&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event. The specified delegate is attached to the ResolveSession event.</param>
      <param name="dismissSession">A System.Action&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event. The specified delegate is attached to the DismissSession event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.String,System.String,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs},System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="assemblyName">A string containing the name of the assembly where a persistent class describing the target database table is declared.</param>
      <param name="typeName">A string containing the name of a persistent class describing the target database table.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
      <param name="resolveSession">An EventHandler&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event. The specified delegate is attached to the ResolveSession event.</param>
      <param name="dismissSession">An EventHandler&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event. The specified delegate is attached to the DismissSession event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that specifies the type of a persistent class describing the target database table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.ObjectType"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.Type,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that specifies the type of a persistent class describing the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.ObjectType"/> property.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.Type,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.Action{DevExpress.Xpo.ResolveSessionEventArgs},System.Action{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that specifies the type of a persistent class describing the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.ObjectType"/> property.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
      <param name="resolveSession">A System.Action&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event. The specified delegate is attached to the ResolveSession event.</param>
      <param name="dismissSession">A System.Action&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event. The specified delegate is attached to the DismissSession event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.#ctor(System.Type,System.String,DevExpress.Data.Filtering.CriteriaOperator,System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs},System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> class for the specified persistent class, with the specified settings.</para>
      </summary>
      <param name="objectType">A <see cref="T:System.Type"/> object that specifies the type of a persistent class describing the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.ObjectType"/> property.</param>
      <param name="displayableProperties">A string that is a list of displayable properties, containing property paths separated by semicolons. This parameter value is used to initialize the <see cref="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties"/> property.</param>
      <param name="fixedCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</param>
      <param name="resolveSession">An EventHandler&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession"/> event. The specified delegate is attached to the ResolveSession event.</param>
      <param name="dismissSession">An EventHandler&lt;ResolveSessionEventArgs&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession"/> event. The specified delegate is attached to the DismissSession event.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackSource.CanChangeProperties">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object which contains the names of the columns against which data source contents are sorted.</value>
    </member>
    <member name="E:DevExpress.Xpo.XPInstantFeedbackSource.DismissSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> no longer needs the Session it used to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackSource.DisplayableProperties">
      <summary>
        <para>Specifies the properties that are available for binding in bound data-aware controls.</para>
      </summary>
      <value>A string representing a list of property descriptors, containing property paths separated by semicolons. For example, &quot;FirstName;LastName;Company.Name;Address.City&quot;.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.ExtractOriginalRow(System.Object)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="uiThreadRow"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackSource.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackSource.FixedFilterString">
      <summary>
        <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.</para>
      </summary>
      <value>A string specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackSource.ObjectType">
      <summary>
        <para>Specifies the persistent class describing the target database table.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object that specifies the type of a persistent class describing the target database table.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackSource.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPInstantFeedbackSource.ResolveSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPInstantFeedbackSource"/> needs a Session, to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.XPInstantFeedbackView">
      <summary>
        <para>A data source that binds DevExpress grid controls with data tables and allows retrieving data from the server side in InstantFeedback mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance that is assigned object type metadata.</para>
      </summary>
      <param name="classInfo">The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the target data table in the data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Uses specified settings to initialize a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class.</para>
      </summary>
      <param name="classInfo">The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the target data table in the data store.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator,System.Action{DevExpress.Xpo.ResolveSessionEventArgs},System.Action{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Uses specified settings to initialize a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class.</para>
      </summary>
      <param name="classInfo">The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the target data table in the data store.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
      <param name="resolveSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession"/> event.</param>
      <param name="dismissSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession"/> event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator,System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs},System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class, and assigns specified settings to this instance.</para>
      </summary>
      <param name="classInfo">The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the target data table in the data store.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
      <param name="resolveSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession"/> event.</param>
      <param name="dismissSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession"/> event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance and adds it to a container.</para>
      </summary>
      <param name="container">A container that is the owner of the created XPInstantFeedbackView.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class.</para>
      </summary>
      <param name="assemblyName">The name of the assembly that contains the required persistent type.</param>
      <param name="typeName">The name of the persistent type that defines the target database table.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.String,System.String,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Uses specified settings to initialize a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class.</para>
      </summary>
      <param name="assemblyName">The name of the assembly that contains the required persistent type.</param>
      <param name="typeName">The name of the persistent type that defines the target database table.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.String,System.String,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator,System.Action{DevExpress.Xpo.ResolveSessionEventArgs},System.Action{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class, and assigns specified settings to this instance.</para>
      </summary>
      <param name="assemblyName">The name of the assembly that contains the required persistent type.</param>
      <param name="typeName">The name of the persistent type that defines the target database table.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
      <param name="resolveSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession"/> event.</param>
      <param name="dismissSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession"/> event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.String,System.String,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator,System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs},System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Uses specified settings to initialize a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified persistent class.</para>
      </summary>
      <param name="assemblyName">The name of the assembly that contains the required persistent type.</param>
      <param name="typeName">The name of the persistent type that defines the target database table.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
      <param name="resolveSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession"/> event.</param>
      <param name="dismissSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession"/> event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.Type)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance for a specified object type.</para>
      </summary>
      <param name="objectType">A persistent type. This value is assigned to the <see cref="P:DevExpress.Xpo.XPInstantFeedbackView.ObjectType"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.Type,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance that has specified settings.</para>
      </summary>
      <param name="objectType">A persistent type. This value is assigned to the <see cref="P:DevExpress.Xpo.XPInstantFeedbackView.ObjectType"/> property.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.Type,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator,System.Action{DevExpress.Xpo.ResolveSessionEventArgs},System.Action{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance that has specified settings.</para>
      </summary>
      <param name="objectType">A persistent type. This value is assigned to the <see cref="P:DevExpress.Xpo.XPInstantFeedbackView.ObjectType"/> property.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
      <param name="resolveSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession"/> event.</param>
      <param name="dismissSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession"/> event.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.#ctor(System.Type,DevExpress.Xpo.ServerViewProperty[],DevExpress.Data.Filtering.CriteriaOperator,System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs},System.EventHandler{DevExpress.Xpo.ResolveSessionEventArgs})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> instance that has specified settings.</para>
      </summary>
      <param name="objectType">A persistent type. This value is assigned to the <see cref="P:DevExpress.Xpo.XPInstantFeedbackView.ObjectType"/> property.</param>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.ServerViewProperty"/> objects that specifies property names to be loaded from the data store.</param>
      <param name="fixedCriteria">A filter expression to be applied to data on the data store side.</param>
      <param name="resolveSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession"/> event.</param>
      <param name="dismissSession">A delegate that is attached to the <see cref="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession"/> event.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackView.CanChangeProperties">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.XPInstantFeedbackView.DismissSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/> no longer needs the <see cref="T:DevExpress.Xpo.Session"/> it used to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.ExtractOriginalRow(System.Object)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="uiThreadRow"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackView.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter items on the data store side. Bound data-aware controls never affect the criteria.</para>
      </summary>
      <value>An expression that filters items on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackView.FixedFilterString">
      <summary>
        <para>Specifies a string that contains the criteria used to filter items on the data store side. Bound data-aware controls never affect the criteria.</para>
      </summary>
      <value>A string that represents a filter expression. The expression contains criteria to filter items on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackView.ObjectType">
      <summary>
        <para>Gets or sets the type of items the target data table contains.</para>
      </summary>
      <value>The type of items the data source contains.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.PopulateProperties">
      <summary>
        <para>Clears the <see cref="P:DevExpress.Xpo.XPInstantFeedbackView.Properties"/> collection and populates it with properties of the persistent type specified by the <see cref="P:DevExpress.Xpo.XPInstantFeedbackView.ObjectType"/> property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPInstantFeedbackView.Properties">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/> object that contains information on a persistent type&#39;s property names, criteria, and sort order.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object collection that contains information on a persistent type&#39;s property names, criteria, and sort order.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPInstantFeedbackView.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Xpo.XPInstantFeedbackView"/>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPInstantFeedbackView.ResolveSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPServerModeView"/> requests a <see cref="T:DevExpress.Xpo.Session"/> to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.XPLiteObject">
      <summary>
        <para>Implements the <see cref="T:DevExpress.Xpo.IXPObject"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.XPObject">
      <summary>
        <para>Implements the <see cref="T:DevExpress.Xpo.IXPObject"/> and provides an autogenerated integer key mapped to the &#39;OID&#39; field.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObject.Fields">
      <summary>
        <para>Gets an object that contains field identifies for Simplified Criteria Syntax.</para>
      </summary>
      <value>The FieldsClass object that can contain field identifies.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObject.Oid">
      <summary>
        <para>Gets or set a value which identifies the persistent object.</para>
      </summary>
      <value>An integer value which identifies the object.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectSource">
      <summary>
        <para>Enables binding reports to XPO persistent class&#39; data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectSource"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectSource"/> class with a specified container.</para>
      </summary>
      <param name="container">An <see cref="T:System.ComponentModel.IContainer"/> object that specifies the container of the <see cref="T:DevExpress.Xpo.XPObjectSource"/>.</param>
    </member>
    <member name="E:DevExpress.Xpo.XPObjectSource.AfterFill">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Base64">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.XPObjectSource.BeforeFill">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.ConnectionString">
      <summary>
        <para>Specifies a connection string used to connect to a database.</para>
      </summary>
      <value>A <see cref="T:System.String"/> that contains database connection parameters.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.ConnectionStringName">
      <summary>
        <para>Specifies the name of the connection string used to connect to a database. The specified name should exist in the application configuration file.</para>
      </summary>
      <value>A <see cref="T:System.String"/> specifying the name of a the connection string.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.ConnectionStringsProvider">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Dictionary">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.XPObjectSource.DismissSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPObjectSource"/> no longer needs the Session it used to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.EntityType">
      <summary>
        <para>Specifies metadata information for an XPO class mapped to the required data.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object specifying XPO class metadata.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.EntityTypeString">
      <summary>
        <para>Specifies the fully qualified name of an XPO class mapped to the required data.</para>
      </summary>
      <value>A string which is a fully qualified name of an XPO class.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.Fill">
      <summary>
        <para>Retrieves the data from the data source and populates the internal objects collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.Fill(System.Collections.Generic.IEnumerable{DevExpress.Data.IParameter})">
      <summary>
        <para>Retrieves the data from the data source and populates the internal objects collection using the specified parameters.</para>
      </summary>
      <param name="sourceParameters">A collection of <see cref="T:DevExpress.Data.IParameter"/> objects.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Filter">
      <summary>
        <para>Specifies the criteria used to filter data.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> used to filter data retried from the database.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.FilterString">
      <summary>
        <para>Specifies the string criteria used to filter data.</para>
      </summary>
      <value>A string representation of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> assigned to the <see cref="P:DevExpress.Xpo.XPObjectSource.Filter"/> property.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.GroupFilter">
      <summary>
        <para>Specifies the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> containing grouped/aggregated columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> containing grouped/aggregated columns.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.GroupFilterString">
      <summary>
        <para>Specifies the string criteria containing grouped/aggregated columns.</para>
      </summary>
      <value>A string criteria containing grouped/aggregated columns.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.LoadFromXml(System.Xml.Linq.XElement)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="element"></param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Parameters">
      <summary>
        <para>Gets a list of parameters you can use in <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>s passed to the <see cref="P:DevExpress.Xpo.XPObjectSource.Filter"/>, <see cref="P:DevExpress.Xpo.XPObjectSource.GroupFilter"/>, <see cref="P:DevExpress.Xpo.XPObjectSource.Properties"/> and <see cref="P:DevExpress.Xpo.XPObjectSource.Sorting"/> properties.</para>
      </summary>
      <value>A list of DataSourceParameterBase objects that specify supported parameters.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.PopulateProperties">
      <summary>
        <para>Clears the <see cref="P:DevExpress.Xpo.XPObjectSource.Properties"/> collection and populates it with properties of the persistent class specified by the <see cref="P:DevExpress.Xpo.XPObjectSource.EntityType"/> property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Properties">
      <summary>
        <para>Specifies the list of persistent class&#39; properties loaded by <see cref="T:DevExpress.Xpo.XPObjectSource"/>. When the list is not emply, only the listed properties are loaded. Otherwise, XPObjectSource loads all properties of the class specified by <see cref="P:DevExpress.Xpo.XPObjectSource.EntityType"/>.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection"/> object specifying the list of persistent class&#39; properties.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.Reset(System.Boolean)">
      <summary>
        <para>Triggers the IBindingList.ListChanged event.</para>
      </summary>
      <param name="metadataChanged">true, if metadata is changed; otherwise, false.</param>
    </member>
    <member name="E:DevExpress.Xpo.XPObjectSource.ResolveSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPObjectSource"/> needs a Session to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.SaveToXml">
      <summary>
        <para>For internal use.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSource.SetEntityType(System.Type)">
      <summary>
        <para>Gets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object corresponding to the specified type and assigns this object to the <see cref="P:DevExpress.Xpo.XPObjectSource.EntityType"/> property.</para>
      </summary>
      <param name="type">The persistent class type.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.SkipReturnedRecords">
      <summary>
        <para>Specifies the number of records to exclude when loading data.</para>
      </summary>
      <value>An integer value that specifies the number of records to exclude when loading data.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Sorting">
      <summary>
        <para>Specifies the data sorting within the <see cref="T:DevExpress.Xpo.XPObjectSource"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.SortingCollection"/> object that specifies the data sorting.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.Tag">
      <summary>
        <para>Specifies the data associated with the <see cref="T:DevExpress.Xpo.XPObjectSource"/> object. This data is passed to the <see cref="E:DevExpress.Xpo.XPObjectSource.ResolveSession"/> and <see cref="E:DevExpress.Xpo.XPObjectSource.DismissSession"/> events.</para>
      </summary>
      <value>An <see cref="T:System.Object"/> associated with <see cref="T:DevExpress.Xpo.XPObjectSource"/>.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSource.TopReturnedRecords">
      <summary>
        <para>Specifies the maximum number of retrieved records.</para>
      </summary>
      <value>An integer value that specifies the maximum number of retrieved records.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSourcePropertiesCollection.#ctor(DevExpress.Xpo.XPObjectSource)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Xpo.XPObjectSource"/> object that owns the <see cref="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection"/> collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSourcePropertiesCollection.Add(DevExpress.Xpo.XPObjectSourcePropertiesCollection)">
      <summary>
        <para></para>
      </summary>
      <param name="properties"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSourcePropertiesCollection.Add(DevExpress.Xpo.XPObjectSourceProperty)">
      <summary>
        <para>Adds the specified property to the <see cref="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection"/>.</para>
      </summary>
      <param name="property">A property to be added.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSourcePropertiesCollection.AddRange(DevExpress.Xpo.XPObjectSourceProperty[])">
      <summary>
        <para>Adds each element from a specified array to the <see cref="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection"/>.</para>
      </summary>
      <param name="properties">An array of <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/> objects to be added to the current collection.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourcePropertiesCollection.Item(System.Int32)">
      <summary>
        <para>Gets an <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/> object at the specified index.</para>
      </summary>
      <param name="index">An integer value which is the index of a property.</param>
      <value>An <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/> object at the specified index.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectSourceProperty">
      <summary>
        <para>Stores information on persistent object&#39;s properties loaded to <see cref="T:DevExpress.Xpo.XPObjectSource"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSourceProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourceProperty.Fetch">
      <summary>
        <para>Specifies if the current <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/> should be loaded from the data source.</para>
      </summary>
      <value>true, if the property value should be loaded from the data source; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourceProperty.Group">
      <summary>
        <para>Specifies if the <see cref="T:DevExpress.Xpo.XPObjectSourcePropertiesCollection"/> should be sorted by the current <see cref="T:DevExpress.Xpo.XPObjectSourceProperty"/>.</para>
      </summary>
      <value>true, if the collection should be grouped by the current property; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourceProperty.Name">
      <summary>
        <para>Specifies the property name.</para>
      </summary>
      <value>A string specifying the property name.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourceProperty.Property">
      <summary>
        <para>Specifies the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> used to calculate the property value.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> used to calculate the property value.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourceProperty.PropertyString">
      <summary>
        <para>Specifies the string criteria used to calculate the property value.</para>
      </summary>
      <value>A string criteria used to calculate the property value.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectSourceRecord">
      <summary>
        <para>Represents a data record in an <see cref="T:DevExpress.Xpo.XPObjectSource"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectSourceRecord.#ctor(System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectSourceRecord"/> class.</para>
      </summary>
      <param name="data">An array of property values.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectSourceRecord.Item(System.Int32)">
      <summary>
        <para>Gets the value of a property with the specified index.</para>
      </summary>
      <param name="index">An integer value which represents the index of a property.</param>
      <value>The value of a property with the specified index.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectStub">
      <summary>
        <para>A container for object data passed via the <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor(DevExpress.Xpo.XPClassInfoStub)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor(DevExpress.Xpo.XPClassInfoStub,System.Guid)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="guid"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor(DevExpress.Xpo.XPClassInfoStub,System.Guid,System.Object[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="guid"></param>
      <param name="data"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor(DevExpress.Xpo.XPClassInfoStub,System.Object[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="classInfo"></param>
      <param name="data"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor(System.String,System.Guid,System.Object[],DevExpress.Xpo.XPClassInfoStubOldValueContainer[],System.Boolean[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="className"></param>
      <param name="guid"></param>
      <param name="data"></param>
      <param name="oldData"></param>
      <param name="changed"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.#ctor(System.String,System.Object[],DevExpress.Xpo.XPClassInfoStubOldValueContainer[],System.Boolean[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="className"></param>
      <param name="data"></param>
      <param name="oldData"></param>
      <param name="changed"></param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.Changed">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.ClassName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.Data">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.Equals(System.Object)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.GetEvaluatorContextDescriptor(DevExpress.Xpo.Metadata.Helpers.IXPDictionaryProvider)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="dictionaryProvider"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.GetHashCode">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.Guid">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.HasGuid">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.IsIntermediate">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.IsNew">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.Key">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.MarkAsIntermediate">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.MarkAsNew">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.OldData">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStub.OptimisticLockFieldInDataLayer">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStub.ToString">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectStubCollection">
      <summary>
        <para>A collection of <see cref="T:DevExpress.Xpo.XPObjectStub"/> objects passed via <see cref="T:DevExpress.Xpo.ISerializableObjectLayer"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.#ctor(System.Collections.Generic.IEnumerable{DevExpress.Xpo.XPObjectStub})">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="collection"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.#ctor(System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="capacity"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.Add(DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="item"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.AddRange(System.Collections.Generic.IEnumerable{DevExpress.Xpo.XPObjectStub})">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="collection"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.AsReadOnly">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.Clear">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.Contains(DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.CopyTo(DevExpress.Xpo.XPObjectStub[],System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="array"></param>
      <param name="arrayIndex"></param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStubCollection.Count">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.GetEnumerator">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.GetInnerList">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.IndexOf(DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.Insert(System.Int32,DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStubCollection.IsReadOnly">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStubCollection.Item(System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="index"></param>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectStubCollection.Items">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.Remove(DevExpress.Xpo.XPObjectStub)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="item"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectStubCollection.RemoveAt(System.Int32)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="T:DevExpress.Xpo.XPObjectType">
      <summary>
        <para>Provides object type information for a complex inheritance hierarchy. XPO automatically updates the information on the object types declared in your object model.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectType.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectType"/> class with the specified dictionary and type-specific settings.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> descendant that provides metadata information.</param>
      <param name="assemblyName">A <see cref="T:System.String"/> value which specifies the assembly name. This value is assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.AssemblyName"/> property.</param>
      <param name="typeName">A <see cref="T:System.String"/> value which specifies the type name. This value is assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.TypeName"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectType.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectType"/> class with the specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectType.#ctor(DevExpress.Xpo.Session,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPObjectType"/> class with the specified session and type-specific settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object.</param>
      <param name="assemblyName">A <see cref="T:System.String"/> value which specifies the assembly name. This value is assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.AssemblyName"/> property.</param>
      <param name="typeName">A <see cref="T:System.String"/> value which specifies the type name. This value is assigned to the <see cref="P:DevExpress.Xpo.XPObjectType.TypeName"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectType.AssemblyName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the assembly name.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectType.Fields">
      <summary>
        <para>Gets an object that contains field identifiers for Simplified Criteria Syntax.</para>
      </summary>
      <value>The FieldsClass object that can contain field identifiers.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPObjectType.GetClassInfo">
      <summary>
        <para>Returns the persistent class metadata information for the current type.</para>
      </summary>
      <returns>The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> for the specified class type.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectType.IsValidType">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A boolean value.</value>
    </member>
    <member name="F:DevExpress.Xpo.XPObjectType.ObjectTypePropertyName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.XPObjectType.Oid">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectType.SystemType">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the system type.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectType.TypeClassInfo">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPObjectType.TypeName">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the type name.</value>
    </member>
    <member name="T:DevExpress.Xpo.XpoDataSource">
      <summary>
        <para>A collection of persistent objects for ASP.NET controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XpoDataSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XpoDataSource"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSource.Criteria">
      <summary>
        <para>Gets or sets the string representation of criteria used to filter persistent objects to be retrieved by the data source control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that represents the filter criteria.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSource.CriteriaParameters">
      <summary>
        <para>Provides access to the collection of parameter values that are used to build the data source control&#39;s filter criteria.</para>
      </summary>
      <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection"/> object that stores the filter criteria&#39;s parameter values.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object which contains the names of the columns against which data source contents are sorted.</value>
    </member>
    <member name="E:DevExpress.Xpo.XpoDataSource.Inserted">
      <summary>
        <para>Enables you to respond to inserting a persistent object via a bound data-aware control.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSource.ServerMode">
      <summary>
        <para>Gets or sets whether server mode is enabled for the data-aware control bound to the current data source control.</para>
      </summary>
      <value>true to enable server mode; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSource.Session">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Xpo.Session"/> used by the current data source control to load and save persistent objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object connected to a data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSource.TypeName">
      <summary>
        <para>Gets or sets the type name of persistent objects to be retrieved by the data source control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the type name.</value>
    </member>
    <member name="T:DevExpress.Xpo.XpoDataSourceInsertedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Xpo.XpoDataSource.Inserted"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XpoDataSourceInsertedEventArgs.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XpoDataSourceInsertedEventArgs"/> class with a persistent object that has been inserted in the <see cref="T:DevExpress.Xpo.XpoDataSource"/> via a bound data-aware control.</para>
      </summary>
      <param name="value">An <see cref="T:DevExpress.Xpo.XPObject"/> descendant representing the inserted persistent object.</param>
    </member>
    <member name="P:DevExpress.Xpo.XpoDataSourceInsertedEventArgs.Value">
      <summary>
        <para>Provides access to the persistent object that has been inserted in the <see cref="T:DevExpress.Xpo.XpoDataSource"/> via a bound data-aware control.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.XPObject"/> descendant representing the persistent object that has been inserted.</value>
    </member>
    <member name="T:DevExpress.Xpo.XpoDataSourceInsertedEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Xpo.XpoDataSource.Inserted"/> event.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">An <see cref="T:DevExpress.Xpo.XpoDataSourceInsertedEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Xpo.XpoDefault">
      <summary>
        <para>Provides global settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.ActiveConnectionString">
      <summary>
        <para>Gets the connection string which is used by newly created connection providers.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the connection string.</value>
    </member>
    <member name="F:DevExpress.Xpo.XpoDefault.AppSettingsConnectionStringKey">
      <summary>
        <para>Returns the name of the application configuration file&#39;s key that specifies the default connection string. You can add this key to the application configuration file, and specify a connection string. In case the connection string isn&#39;t defined in the application, the connection string specified by this key will be used instead of the XPO&#39;s default MS Access connection string.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.CacheBehavior">
      <summary>
        <para>Gets or sets the cache behavior.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.CacheBehavior"/> enumeration value that specifies the cache behavior.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.ConnectionString">
      <summary>
        <para>Gets or sets the string which is used to open a database, by default.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the parameters needed to establish the initial connection.</value>
    </member>
    <member name="F:DevExpress.Xpo.XpoDefault.CustomGuidGenerationHandler">
      <summary>
        <para>Specifies a Func&lt;Guid&gt; delegate called to generate a new GUID value. Refer to the <see cref="T:DevExpress.Xpo.GuidGenerationMode"/> topic to see the example.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.DataLayer">
      <summary>
        <para>Gets or sets the default data access layer which is used by <see cref="T:DevExpress.Xpo.Session"/> objects by default, to access a data store.</para>
      </summary>
      <value>An object which implements the <see cref="T:DevExpress.Xpo.IDataLayer"/> interface; null - in this case, every new session will create and use its own data layer.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.DataStoreAsyncBehavior">
      <summary>
        <para>Gets or sets an <see cref="T:DevExpress.Xpo.AsyncBehavior"/> value. The value determines how <see cref="T:DevExpress.Xpo.IDataLayerAsync"/> descendants call <see cref="T:DevExpress.Xpo.DB.IDataStore"/>&#39;s and <see cref="T:DevExpress.Xpo.DB.IDataStoreAsync"/>&#39;s methods in asynchronous operations.</para>
      </summary>
      <value>A value that determines how asynchronous operations behave.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.DefaultCaseSensitive">
      <summary>
        <para>Specifies the default setting of the <see cref="P:DevExpress.Xpo.Session.CaseSensitive"/> and <see cref="P:DevExpress.Xpo.XPDataView.CaseSensitive"/> properties.</para>
      </summary>
      <value>true to enable case-sensitive string comparisons in sessions, units of work, and <see cref="T:DevExpress.Xpo.XPDataView"/> components; otherwise, false.</value>
    </member>
    <member name="F:DevExpress.Xpo.XpoDefault.DefaultIdentityMapBehavior">
      <summary>
        <para>Returns the default Identity Map behavior. See <see cref="T:DevExpress.Xpo.IdentityMapBehavior"/> for details.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.XpoDefault.DefaultOptimisticLockingReadBehavior">
      <summary>
        <para>Specifies the value which is assigned to the <see cref="P:DevExpress.Xpo.XpoDefault.OptimisticLockingReadBehavior"/> property when it is set to the <see cref="F:DevExpress.Xpo.OptimisticLockingReadBehavior.Default"/> value. By default, this field returns the <see cref="F:DevExpress.Xpo.OptimisticLockingReadBehavior.Mixed"/> value.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.DefaultStringMappingFieldSize">
      <summary>
        <para>Specifies the default size of the database column which the member&#39;s data is stored in. The default value is 100.</para>
      </summary>
      <value>An integer value representing the default size of the database column created for persistent properties or fields.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.Dictionary">
      <summary>
        <para>Gets or sets metadata on the persistent objects in a data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object which provides metadata on the persistent objects in a data store.</value>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.ForcePerformanceCountersCreation">
      <summary>
        <para>Forces the XPO to create performance counters.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionPoolString(System.String)">
      <summary>
        <para>Gets a connection pool&#39;s connection string based on a specified standard connection string. The pool&#39;s capacity and connection limit are set to default values.</para>
      </summary>
      <param name="connectionString">A <see cref="T:System.String"/> value which specifies the parameters required to establish a connection.</param>
      <returns>A <see cref="T:System.String"/> value which specifies the parameters needed to establish a connection pool&#39;s connection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionPoolString(System.String,System.Int32)">
      <summary>
        <para>Gets a connection pool&#39;s connection string based on a specified standard connection string and pool capacity.</para>
      </summary>
      <param name="connectionString">A <see cref="T:System.String"/> value which specifies the parameters required to establish a connection.</param>
      <param name="poolSize">A connection pool&#39;s capacity (the number of connections to be made available within the pool).</param>
      <returns>A <see cref="T:System.String"/> value which specifies the parameters needed to establish a connection pool&#39;s connection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionPoolString(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Gets a connection pool&#39;s connection string based on a specified standard connection string, pool capacity, and connection limit.</para>
      </summary>
      <param name="connectionString">A <see cref="T:System.String"/> value which specifies the parameters required to establish a connection.</param>
      <param name="poolSize">A connection pool&#39;s capacity (the number of connections to be made available within the pool). If null (Nothing in Visual Basic) is passed as this parameter, the default value (8) is used. If a negative number is passed as this parameter, the pool capacity is unrestricted.</param>
      <param name="maxConnections">The total number of connections to be established, including the poolSize. If null (Nothing in Visual Basic) or negative number is passed as this parameter, the connection limit is considered unspecified. If the maxConnections is less than the poolSize, the maxConnections is assumed be equal to the poolSize.</param>
      <returns>A <see cref="T:System.String"/> value which specifies the parameters needed to establish a connection pool&#39;s connection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionProvider(DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates an instance of a connection provider using settings from the <see cref="P:DevExpress.Xpo.XpoDefault.ActiveConnectionString"/>.</para>
      </summary>
      <param name="defaultAutoCreateOption">A <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a session is connected to a data store.</param>
      <returns>The created connection provider.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionProvider(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates an instance of a connection provider using the specified settings.</para>
      </summary>
      <param name="connection">An IDbConnection object that represents an open connection to a data source.</param>
      <param name="autoCreateOption">A <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a session is connected to a data store.</param>
      <returns>The created connection provider.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionProvider(System.String,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates an instance of a connection provider using the specified settings.</para>
      </summary>
      <param name="connectionString">The connection string which is used to instantiate a connection provider.</param>
      <param name="defaultAutoCreateOption">A <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a session is connected to a data store.</param>
      <returns>The created connection provider.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetConnectionProvider(System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Creates an instance of a connection provider using the specified settings.</para>
      </summary>
      <param name="connectionString">The connection string which is used to instantiate a connection provider.</param>
      <param name="defaultAutoCreateOption">A <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a session is connected to a data store.</param>
      <param name="objectsToDisposeOnDisconnect">An array of IDisposable objects that must be disposed on disconnect from the datasource.</param>
      <returns>The created connection provider.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data layer for the default connection string and default metadata information.</para>
      </summary>
      <param name="defaultAutoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data layer for the default connection string and specified metadata information.</para>
      </summary>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that provides the metadata information.</param>
      <param name="defaultAutoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data layer for the specified connection and the default metadata.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(System.Data.IDbConnection,DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data layer for the specified connection and metadata information.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that provides the metadata information.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(System.Data.IDbConnection,DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Creates a data layer for the specified connection and metadata information and returns objects that need to be disposed of when a connection to a data store is closed.</para>
      </summary>
      <param name="connection">An object implementing the <see cref="T:System.Data.IDbConnection"/> interface that represents an open connection to a data source.</param>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that provides the metadata information.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <param name="objectsToDisposeOnDisconnect">Returns an array of objects that should be disposed of when a connection to a data store is closed.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(System.String,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data layer for the specified connection string and the default metadata.</para>
      </summary>
      <param name="connectionString">A connection string to a data store.</param>
      <param name="defaultAutoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(System.String,DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data layer for the specified connection string and metadata information.</para>
      </summary>
      <param name="connectionString">A connection string to a data store.</param>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that provides the metadata information.</param>
      <param name="defaultAutoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDataLayer(System.String,DevExpress.Xpo.Metadata.XPDictionary,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Creates a data layer for the specified connection string and metadata information and returns objects that need to be disposed of when a connection to a data store is closed.</para>
      </summary>
      <param name="connectionString">A connection string to a data store.</param>
      <param name="dictionary">An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that provides the metadata information.</param>
      <param name="defaultAutoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations should be performed when a data store is accessed for the first time.</param>
      <param name="objectsToDisposeOnDisconnect">Returns an array of objects that should be disposed of when a connection to a data store is closed.</param>
      <returns>The created <see cref="T:DevExpress.Xpo.SimpleDataLayer"/> object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetDictionary">
      <summary>
        <para>Gets the dictionary where metadata on persistent objects is stored by default.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> object that provides metadata on persistent objects in a data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetTerminalInSize(System.Int32)">
      <summary>
        <para>Returns the optimal packet size (the number of operands in a packet) for a specified number of operands passed to the <see cref="T:DevExpress.Data.Filtering.InOperator"/>.</para>
      </summary>
      <param name="size">An integer value which specifies the projected number of operands to be passed to the <see cref="P:DevExpress.Data.Filtering.InOperator.Operands"/> collection.</param>
      <returns>An integer value which specifies the optimal packet size, in operands.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.GetTerminalInSize(System.Int32,System.Int32)">
      <summary>
        <para>Returns the optimal packet size (the number of operands in a packet) for a specified number of operands passed to the <see cref="T:DevExpress.Data.Filtering.InOperator"/>.</para>
      </summary>
      <param name="size">An integer value which specifies the projected number of operands to be passed to the <see cref="P:DevExpress.Data.Filtering.InOperator.Operands"/> collection.</param>
      <param name="parametersPerObject">An integer value which specifies the number of SQL parameters needed to represent an operand.</param>
      <returns>An integer value which specifies the optimal packet size, in operands.</returns>
    </member>
    <member name="F:DevExpress.Xpo.XpoDefault.GuidGenerationMode">
      <summary>
        <para>Specifies how globally unique identifiers are generated (if the <see cref="P:DevExpress.Xpo.KeyAttribute.AutoGenerate"/> property is true). The default value is FrameworkDefault. To provide a custom Guid primary key generation algorithm, set this field to Custom and assign a Func&lt;Guid&gt; delegate to the <see cref="F:DevExpress.Xpo.XpoDefault.CustomGuidGenerationHandler"/> field. Refer to the <see cref="T:DevExpress.Xpo.GuidGenerationMode"/> topic to see the example.</para>
      </summary>
      <value>Specifies how XPO generates new globally unique identifier values.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.IdentityMapBehavior">
      <summary>
        <para>Gets or sets the Identity Map behavior used by Sessions by default.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.IdentityMapBehavior"/> enumeration value that specifies the Identity Map behavior.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.IsObjectModifiedOnNonPersistentPropertyChange">
      <summary>
        <para>Specifies whether or not a persistent object is marked modified when its non-persistent property value is changed.</para>
      </summary>
      <value>true, if a persistent object is marked modified when its non-persistent property value is changed; otherwise - false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.MaxInSize">
      <summary>
        <para>Gets the maximum optimal packet size (the number of operands in a packet) for the <see cref="P:DevExpress.Data.Filtering.InOperator.Operands"/> collection.</para>
      </summary>
      <value>An integer value that is the maximum value returned by the  method.</value>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.NewGuid">
      <summary>
        <para>Generates a new globally unique identifier (GUID).</para>
      </summary>
      <returns>A <see cref="T:System.Guid"/> structure that represents a globally unique identifier.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.NullableBehavior">
      <summary>
        <para>Specifies if nullable columns should be created when updating the database schema.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.NullableBehavior"/> enumeration value specifying if a nullable column should be created when updating the database schema.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.ObjectLayer">
      <summary>
        <para>Specifies the default object access layer which is used by <see cref="T:DevExpress.Xpo.Session"/> objects by default, to retrieve and update object data in a data store.</para>
      </summary>
      <value>An object which implements the <see cref="T:DevExpress.Xpo.IObjectLayer"/> interface; null - in this case, every new session will create and use its own object layer.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.OptimisticLockingReadBehavior">
      <summary>
        <para>Gets or sets a value which specifies how XPO behaves by default when reloading changed objects (objects with different versions).</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.OptimisticLockingReadBehavior"/> enumeration value which specifies how XPO behaves when reloading changed objects.</value>
    </member>
    <member name="M:DevExpress.Xpo.XpoDefault.RegisterBonusProviders">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.Session">
      <summary>
        <para>Gets or sets the default session.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object that represents the default session which is used to load and save persistent objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.TrackPropertiesModifications">
      <summary>
        <para>Specifies the default value of the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> property of all Sessions.</para>
      </summary>
      <value>The boolean value specifying the default value of the <see cref="P:DevExpress.Xpo.Session.TrackPropertiesModifications"/> property of all Sessions. The default is false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XpoDefault.UseFastAccessors">
      <summary>
        <para>Gets or sets whether XPO uses its internal mechanism to create new instances of persistent classes, and to set and retrieve object property values.</para>
      </summary>
      <value>true if XPO uses its internal mechanism to create new instances of persistent classes, and to set and retrieve object property values; false, to use the Reflection.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPPageSelector">
      <summary>
        <para>Presents the <see cref="T:DevExpress.Xpo.XPCollection"/> as a pageable collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPPageSelector.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPPageSelector"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPPageSelector.#ctor(DevExpress.Xpo.XPBaseCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPPageSelector"/> class with the specified collection.</para>
      </summary>
      <param name="collection">An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> descendant which represents the collection of persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPPageSelector.Collection"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPPageSelector.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPPageSelector"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created XPPageSelector instance.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPPageSelector.Collection">
      <summary>
        <para>Gets or sets the collection of persistent objects that the page selector is bound to.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.XPBaseCollection"/> descendant which represents the collection of persistent objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPPageSelector.CurrentPage">
      <summary>
        <para>Gets or sets the current page in the pageable collection.</para>
      </summary>
      <value>An integer value which specifies the index of the current page. If less than zero or exceeds the number of pages, an <see cref="T:System.ArgumentOutOfRangeException"/> exception is raised.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPPageSelector.PageCount">
      <summary>
        <para>Gets the number of pages.</para>
      </summary>
      <value>An integers value which specifies the number of pages acquired when the source collection is paginated.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPPageSelector.PageSize">
      <summary>
        <para>Gets or sets the maximum number of persistent objects that can be contained in a single page.</para>
      </summary>
      <value>An integer value which specifies the maximum number of persistent objects that can be contained in a single page. If less than or equal to 0, an <see cref="T:System.ArgumentOutOfRangeException"/> is raised.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPQuery`1">
      <summary>
        <para>A query that allows the construction of LINQ queries for persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.#ctor(DevExpress.Xpo.IDataLayer)">
      <summary>
        <para></para>
      </summary>
      <param name="dataLayer"></param>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.#ctor(DevExpress.Xpo.Metadata.XPDictionary)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class with the specified settings.</para>
      </summary>
      <param name="dictionary">The <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> class descendant&#39;s instance which provides metadata on persistent objects in a data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.#ctor(DevExpress.Xpo.Metadata.XPDictionary,System.Boolean)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class with specified settings.</para>
      </summary>
      <param name="dictionary">The <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> class descendant&#39;s instance, which provides metadata on persistent objects in a data store.</param>
      <param name="inTransaction">true to enable the InTransaction mode; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class with the specified settings.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> class instance which is used to retrieve persistent objects in LINQ queries.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.#ctor(DevExpress.Xpo.Session,System.Boolean)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class with specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> class instance which is used to retrieve persistent objects in LINQ queries.</param>
      <param name="inTransaction">true to enable the InTransaction mode; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.Clone">
      <summary>
        <para>Clones the current query.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.XPQuery`1"/> object which represents a clone of the current query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.Deserialize(DevExpress.Xpo.IDataLayer,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="dataLayer"></param>
      <param name="data"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.Deserialize(DevExpress.Xpo.Metadata.XPDictionary,System.String)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class from its string representation.</para>
      </summary>
      <param name="dictionary">The <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> class descendant&#39;s instance which provides metadata on persistent objects in a data store.</param>
      <param name="data">The string representation of the query, obtained via the <see cref="M:DevExpress.Xpo.XPQueryBase.Serialize"/> method.</param>
      <returns>An instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.Deserialize(DevExpress.Xpo.Session,System.String)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class from its string representation.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> class instance which is used to retrieve persistent objects in LINQ queries.</param>
      <param name="data">The string representation of the query, obtained via the <see cref="M:DevExpress.Xpo.XPQueryBase.Serialize"/> method.</param>
      <returns>An instance of the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="expression"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.InTransaction">
      <summary>
        <para>Creates an InTransaction instance of an <see cref="T:DevExpress.Xpo.XPQuery`1"/> based on the current <see cref="T:DevExpress.Xpo.XPQuery`1"/> instance.</para>
      </summary>
      <returns>An InTransaction <see cref="T:DevExpress.Xpo.XPQuery`1"/> instance created from the current <see cref="T:DevExpress.Xpo.XPQuery`1"/>, using the corresponding constructor with true passed to the inTransaction parameter.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.TransformExpression(DevExpress.Xpo.Metadata.XPDictionary,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},DevExpress.Xpo.CustomCriteriaCollection)">
      <summary>
        <para></para>
      </summary>
      <param name="dictionary"></param>
      <param name="expression"></param>
      <param name="customCriteriaCollection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.TransformExpression(DevExpress.Xpo.Session,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
        <para>Converts a lambda expression into an instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class descendant.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> class instance whose <see cref="P:DevExpress.Xpo.Session.Dictionary"/> and <see cref="P:DevExpress.Xpo.Session.TypesManager"/> are used in the construction of the criteria operator.</param>
      <param name="expression">A lambda expression.</param>
      <returns>An instance of the CriteriaOperator class descendant that represents the lambda expression.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.TransformExpression(DevExpress.Xpo.Session,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},DevExpress.Xpo.CustomCriteriaCollection)">
      <summary>
        <para>Intended for internal use.</para>
      </summary>
      <param name="session"></param>
      <param name="expression"></param>
      <param name="customCriteriaCollection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.TransformExpression(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
        <para>Converts a lambda expression into an instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class descendant.</para>
      </summary>
      <param name="expression">A lambda expression.</param>
      <returns>An instance of the CriteriaOperator class descendant that represents the lambda expression.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.TransformExpression(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},DevExpress.Xpo.CustomCriteriaCollection)">
      <summary>
        <para>Intended for internal use.</para>
      </summary>
      <param name="expression"></param>
      <param name="customCriteriaCollection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.WithCustomCriteria(DevExpress.Xpo.CustomCriteriaCollection)">
      <summary>
        <para>Intended for internal use.</para>
      </summary>
      <param name="customCriteriaCollection"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.WithCustomCriteria(DevExpress.Xpo.ICustomCriteriaOperatorQueryable)">
      <summary>
        <para>Intended for internal use.</para>
      </summary>
      <param name="customCriteria"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQuery`1.WithDeleted">
      <summary>
        <para>Creates an XPQuery&lt;T&gt; based on the current XPQuery&lt;T&gt; instance. The new query retrieves objects specified by the original query and also selects objects marked as deleted that match that query.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Xpo.XPQuery`1"/> instance.</returns>
    </member>
    <member name="T:DevExpress.Xpo.XPQueryBase">
      <summary>
        <para>Serves as the  base class for the <see cref="T:DevExpress.Xpo.XPQuery`1"/> class. Intended for internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPQueryBase.Dictionary">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> class descendant&#39;s instance which provides metadata on persistent objects in a data store.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Xpo.Metadata.XPDictionary"/> class descendant&#39;s instance.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryBase.Serialize">
      <summary>
        <para>Converts the current <see cref="T:DevExpress.Xpo.XPQueryBase"/> class instance to string representation.</para>
      </summary>
      <returns>A string value that represents the query.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPQueryBase.Session">
      <summary>
        <para>Gets or sets the session that is used to retrieve persistent objects in queries.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Xpo.Session"/> class instance.</value>
    </member>
    <member name="F:DevExpress.Xpo.XPQueryBase.SuppressNonPersistentPropertiesCheck">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.XPQueryExtensions">
      <summary>
        <para>Provides extension methods to work with <see cref="T:DevExpress.Xpo.XPQuery`1"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously checks whether all objects in a selection meet specific requirements.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements persistent objects need to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns true if all objects in a selection meet specific requirements. Otherwise, it returns false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously checks whether any object in a selection meets specific requirements.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements persistent objects need to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns true if any object in a selection meets specific requirements. Otherwise, it returns false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously checks whether any objects exist in a selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns true if any objects exist in a selection. Otherwise, it returns false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Int64 fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Double fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Double fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Int32 fields, for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Int32 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Int64 fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Single fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Single fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Decimal fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Decimal fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Double fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Double fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Int32 fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Int32 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Int64 fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates an average of objects&#39; specific Decimal fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an average of objects&#39; specific Decimal fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CachedExpression``2(System.Linq.IQueryable{``0},System.Func{System.Linq.IQueryable{``0},``1})">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="source"></param>
      <param name="f"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CachedExpression``3(System.Linq.IQueryable{``0},System.Func{System.Linq.IQueryable{``0},``1,``2},``1)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="source"></param>
      <param name="f"></param>
      <param name="a1"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CachedExpression``4(System.Linq.IQueryable{``0},System.Func{System.Linq.IQueryable{``0},``1,``2,``3},``1,``2)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="source"></param>
      <param name="f"></param>
      <param name="a1"></param>
      <param name="a2"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CachedExpression``5(System.Linq.IQueryable{``0},System.Func{System.Linq.IQueryable{``0},``1,``2,``3,``4},``1,``2,``3)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="source"></param>
      <param name="f"></param>
      <param name="a1"></param>
      <param name="a2"></param>
      <param name="a3"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CachedExpression``6(System.Linq.IQueryable{``0},System.Func{System.Linq.IQueryable{``0},``1,``2,``3,``4,``5},``1,``2,``3,``4)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="source"></param>
      <param name="f"></param>
      <param name="a1"></param>
      <param name="a2"></param>
      <param name="a3"></param>
      <param name="a4"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CachedExpression``7(System.Linq.IQueryable{``0},System.Func{System.Linq.IQueryable{``0},``1,``2,``3,``4,``5,``6},``1,``2,``3,``4,``5)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="source"></param>
      <param name="f"></param>
      <param name="a1"></param>
      <param name="a2"></param>
      <param name="a3"></param>
      <param name="a4"></param>
      <param name="a5"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously checks whether a specific object exists in a selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="item">An object, which specifies a persistent object to be found in a selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns true if a specific object exists in a selection. Otherwise, it returns false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously counts the number of objects that meet specific requirements in a specified selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements persistent objects need to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>An Task that returns an Int32 value. This value demonstrates how many objects in a selection meet specific requirements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously counts the number of objects in a selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>An Task that returns an Int32 value. This value is how many objects a selection contains.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CustomAggregate``1(System.Linq.IQueryable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>
        <para></para>
      </summary>
      <param name="query"></param>
      <param name="customAggregateName"></param>
      <param name="arguments"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CustomAggregateAsync``1(System.Linq.IQueryable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="query"></param>
      <param name="customAggregateName"></param>
      <param name="argument"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CustomAggregateAsync``1(System.Linq.IQueryable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
      <summary>
        <para></para>
      </summary>
      <param name="query"></param>
      <param name="customAggregateName"></param>
      <param name="arguments"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.CustomAggregateAsync``1(System.Linq.IQueryable{``0},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="query"></param>
      <param name="customAggregateName"></param>
      <param name="arguments"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ElementAtAsync``1(System.Linq.IQueryable{``0},System.Int32,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets an object that has a specific index in a selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="index">An Int32 value, which specifies a persistent object&#39;s index.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object has a specific index.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ElementAtOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Int32,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets an object that has a specific index in a selection. If the index is not valid, returns a default value for &lt;T&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="index">An Int32 value, which specifies a persistent object&#39;s index.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object, if the index is valid, or a default value for &lt;T&gt; if the index is not valid.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.EnumerateAsync``1(System.Linq.IQueryable{``0},DevExpress.Xpo.XPQueryExtensions.AsyncEnumerateCallback)">
      <summary>
        <para>Asynchronously enumerates a specified query and notifies upon completion.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="callback">An AsyncEnumerateCallback delegate, which is a method to be called after all elements in the query are enumerated.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.EnumerateAsync``1(System.Linq.IQueryable{``0},DevExpress.Xpo.XPQueryExtensions.AsyncEnumerateCallback{``0})">
      <summary>
        <para>Asynchronously enumerates a specified query and notifies upon completion.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="callback">An AsyncEnumerateCallback&lt;T&gt; delegate, which is a method to be called after all elements in the query are enumerated.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.EnumerateAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a specified query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a collection of enumerated objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the first object that meets specified requirements in a selection. Throws an exception for empty selections.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements the persistent object needs to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the first object to meet specified requirements in a selection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the first object in a selection. Throws an exception for empty selections.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the first object in a selection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the first object that meets specified requirements in a selection. If the selection is empty, returns a default value for &lt;T&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements the persistent object needs to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the first object to meet specified requirements in a selection or a default value for &lt;T&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the first object in a selection. If the selection is empty, returns a default value for &lt;T&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the first object in a selection or a a default value for &lt;T&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the last object that meets specified requirements in a selection. Throws an exception for empty selections.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements the persistent object needs to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the last object to meet specified requirements in a selection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the last object in a selection. Throws an exception for empty selections.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the last object in a selection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the last object that meets specified requirements in a selection. If the selection is empty, returns a default value for &lt;T&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements the persistent object needs to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the last object to meet specified requirements in a selection or a default value for &lt;T&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the last object in a selection. If the selection is empty, returns a default value for &lt;T&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the last object in a selection or a default value for &lt;T&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously counts the number of objects that meet specific requirements in a specified selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements persistent objects need to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>An Task that returns an Int64 value. This value demonstrates how many objects in a selection meet specific requirements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously counts the number of objects in a selection.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>An Task that returns an Int64 value. This value demonstrates how many objects a selection contains.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the maximum value from a specified query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a object. This object is the maximum value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the maximum value from a specified query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object is the maximum value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the minimum value from a specified query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object is the minimum value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the minimum value from a specified query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object is the minimum value.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.Query``1(DevExpress.Xpo.IDataLayer)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.XPQuery`1"/> instance from a specified session&#39;s scope.</para>
      </summary>
      <param name="layer">An <see cref="T:DevExpress.Xpo.IDataLayer"/> object specifying the data access layer.</param>
      <returns>An <see cref="T:DevExpress.Xpo.XPQuery`1"/> object instantiated from the session&#39;s scope.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.Query``1(DevExpress.Xpo.Session)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.XPQuery`1"/> instance from a specified session&#39;s scope.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object or its descendant, which instantiates an <see cref="T:DevExpress.Xpo.XPQuery`1"/>. The specified session is assigned to the <see cref="P:DevExpress.Xpo.XPQueryBase.Session"/> property.</param>
      <returns>An <see cref="T:DevExpress.Xpo.XPQuery`1"/> object instantiated from the session&#39;s scope.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.QueryInTransaction``1(DevExpress.Xpo.Session)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.XPQuery`1"/> instance with the InTransaction (<see cref="M:DevExpress.Xpo.XPQuery`1.InTransaction"/>) mode enabled, from a specified session&#39;s scope.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object or its descendant, which instantiates an <see cref="T:DevExpress.Xpo.XPQuery`1"/>. The specified session is assigned to the <see cref="P:DevExpress.Xpo.XPQueryBase.Session"/> property.</param>
      <returns>An <see cref="T:DevExpress.Xpo.XPQuery`1"/> object, instantiated from the session&#39;s scope, with the InTransaction mode enabled.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the object from a selection if only one object in the selection meets the specified requirements. Otherwise, throws an exception.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements the persistent object needs to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns one object if this is the only object in a selection to meet the specified requirements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the object from a selection if this selection has only one object. Otherwise, throws an exception.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the only object in a selection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the object from a selection if only one object in the selection meets the specified requirements. If the selection is empty, returns a default value for &lt;T&gt;.
If the selection has more than one of such elements, throws an exception.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="predicate">An expression which determines requirements the persistent object needs to meet.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns that returns one object if this is the only object in a selection to meet the specified requirements.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously gets the only object in a selection. If the selection is empty, returns a default value for &lt;T&gt;. If the selection has more than one element, throws an exception.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a selection of persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns the only object in a selection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Decimal fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Decimal fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Double fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Double fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Int32 fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Int32 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Int64 fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Decimal fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Decimal fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Double fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Double fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Int32 fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Int32 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Int64 fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Single fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Single fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Single fields for a query.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Single fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Int64 fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Double fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Double fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Int32 fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Int32 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Int64 fields, for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Int64 fields, for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Decimal fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Decimal fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Double fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> object that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Double fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Int32 fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Int32 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Int64 fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Int64 fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific nullable Single fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific nullable Single fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously calculates a sum of objects&#39; specific Decimal fields for a query. Uses a lambda expression to obtain values.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> that specifies a persistent object selection.</param>
      <param name="selector">A lambda expression that gets a value from a persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a sum of objects&#39; specific Decimal fields for a query.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates all objects in a query and saves them to an array.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an array of objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector and an element selector to construct a Dictionary&lt;TKey,TValue&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="equalityComparer">A function that returns a result value for each persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Dictionary&lt;TKey,TValue&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector to construct a Dictionary&lt;TKey,TValue&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Dictionary&lt;TKey,TValue&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector, an element selector, and a comparer to construct a Dictionary&lt;TKey,TValue&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="elementSelector">A function that returns a result value for each persistent object.</param>
      <param name="equalityComparer">An IEqualityComparer&lt;T&gt; object that compares keys created for persistent objects.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Dictionary&lt;TKey,TValue&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector and an element selector to construct a Dictionary&lt;TKey,TValue&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">An function that acquires each persistent object&#39;s key.</param>
      <param name="elementSelector">A function that returns a result value for each persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Dictionary&lt;TKey,TValue&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates all elements in a query and saves them to a list.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a list of objects.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToLookupAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector and a comparer to construct a Lookup&lt;TKey,TElement&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="equalityComparer">A function that returns a result value for each persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Lookup&lt;TKey,TElement&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToLookupAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector to construct a Lookup&lt;TKey,TElement&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Lookup&lt;TKey,TElement&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToLookupAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector, an element selector and an comparer to construct a Lookup&lt;TKey,TElement&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="elementSelector">A function that returns a result value for each persistent object.</param>
      <param name="equalityComparer">A function that returns a result value for each persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Lookup&lt;TKey,TElement&gt;.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPQueryExtensions.ToLookupAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously enumerates a query and uses a key selector and an element selector to construct a Lookup&lt;TKey,TElement&gt;.</para>
      </summary>
      <param name="query">An <see cref="T:DevExpress.Xpo.XPQuery`1"/> to be enumerated.</param>
      <param name="keySelector">A function that acquires each persistent object&#39;s key.</param>
      <param name="elementSelector">A function that returns a result value for each persistent object.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns a Lookup&lt;TKey,TElement&gt;.</returns>
    </member>
    <member name="T:DevExpress.Xpo.XPServerCollectionSource">
      <summary>
        <para>The data source for a <see cref="T:DevExpress.XtraGrid.GridControl"/> and <see cref="T:DevExpress.XtraEditors.GridLookUpEdit"/> controls that binds these controls to data in Server Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> class with a given <see cref="T:DevExpress.Xpo.Session"/> and object type.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.Session"/> property.</param>
      <param name="objectClassInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the class describing the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectClassInfo"/> property, and indirectly the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectType"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> class with a given <see cref="T:DevExpress.Xpo.Session"/>, object type and filter criteria.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.Session"/> property.</param>
      <param name="objectClassInfo">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that identifies the class describing the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectClassInfo"/> property, and indirectly the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectType"/> property.</param>
      <param name="fixedFilterCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies a filter expression applied to data on the data store side. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.FixedFilterCriteria"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.#ctor(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> class with a given <see cref="T:DevExpress.Xpo.Session"/> and object type.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.Session"/> property.</param>
      <param name="objectType">The type of an object that describes the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectType"/> property, and indirectly the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectClassInfo"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.#ctor(DevExpress.Xpo.Session,System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> class with a given <see cref="T:DevExpress.Xpo.Session"/>, object type and filter criteria.</para>
      </summary>
      <param name="session">The <see cref="T:DevExpress.Xpo.Session"/> that will be used to load and save persistent objects. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.Session"/> property.</param>
      <param name="objectType">The type of an object that describes the target data table. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectType"/> property, and indirectly the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.ObjectClassInfo"/> property.</param>
      <param name="fixedFilterCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies a filter expression applied to data on the data store side. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerCollectionSource.FixedFilterCriteria"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created XPServerCollectionSource instance.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.AllowEdit">
      <summary>
        <para>Gets or sets whether data editing is allowed.</para>
      </summary>
      <value>true to allow data editing; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.AllowNew">
      <summary>
        <para>Gets or sets whether new items can be added to a collection by a bound control.</para>
      </summary>
      <value>true to allow adding new items; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.AllowRemove">
      <summary>
        <para>Gets or sets whether items can be removed from a collection by a bound control.</para>
      </summary>
      <value>true to allow remove items; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object which contains the names of the columns against which data source contents are sorted.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.DeleteObjectOnRemove">
      <summary>
        <para>Gets or sets whether the persistent object is deleted from the data store when it is removed from the collection.</para>
      </summary>
      <value>true if the persistent object is deleted from the data store when it is removed from the collection; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.DisplayableProperties">
      <summary>
        <para>Gets or sets properties that are available for binding in a bound data-aware control at design time.</para>
      </summary>
      <value>The displayable properties list, containing property paths separated by semicolons. For example, &quot;FirstName;LastName;Company.Name;Address.City&quot;.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.FixedFilterCriteria">
      <summary>
        <para>Gets or sets the criteria used to filter objects on the data store side. These criteria are never affected by the data-aware control that is bound to the current <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> object.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the criteria to filter objects on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.FixedFilterString">
      <summary>
        <para>Gets or sets an expression in a string format, used to filter objects on the data store side. This filter is never affected by the data-aware control that is bound to the current <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> object.</para>
      </summary>
      <value>A string that specifies the filter expression applied to data on the data server side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.ObjectClassInfo">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that describes the target data table in the data store.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object that describes the target data table in the data store.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.ObjectType">
      <summary>
        <para>Gets the type of the object that describes the target data table in the data store.</para>
      </summary>
      <value>The <see cref="T:System.Type"/> of the object that describes the target data table.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPServerCollectionSource.Reload">
      <summary>
        <para>Forces the bound data-aware control to reload data from the data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPServerCollectionSource.ResolveSession">
      <summary>
        <para>Enables the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> to be associated with a session.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPServerCollectionSource.ServerExceptionThrown">
      <summary>
        <para>Fires when a data server throws an exception.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.Session">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Xpo.Session"/> used by the current <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> object.</para>
      </summary>
      <value>The session with a connection to a data source. The default value is <see cref="P:DevExpress.Xpo.Session.DefaultSession"/>.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerCollectionSource.TrackChanges">
      <summary>
        <para>Gets or sets whether the <see cref="T:DevExpress.Xpo.XPServerCollectionSource"/> tracks item changes.</para>
      </summary>
      <value>true to raise the ListChange event after an item has been changed; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPServerModeView">
      <summary>
        <para>A data source that binds DevExpress grid controls with data tables and allows retrieving data from the server side.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPServerModeView"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Uses a <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/> and object type metadata to initialize a new <see cref="T:DevExpress.Xpo.XPServerModeView"/> instance.</para>
      </summary>
      <param name="session">The session used to load persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/> property.</param>
      <param name="objectClassInfo">The  <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the target data table in the data store.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Uses a <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/>, object type metadata, and filter criteria to initialize a new <see cref="T:DevExpress.Xpo.XPServerModeView"/> instance.</para>
      </summary>
      <param name="session">The session used to load persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/> property.</param>
      <param name="objectClassInfo">The <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> metadata that describes the target data table in the data store.</param>
      <param name="fixedFilterCriteria">An expression that calculates values to be displayed in a data table. The expression is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.#ctor(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Uses a <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/> and object type to initialize a new <see cref="T:DevExpress.Xpo.XPServerModeView"/> instance.</para>
      </summary>
      <param name="session">The session used to load persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/> property.</param>
      <param name="objectType">A persistent type. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.ObjectType"/> property and indirectly assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.ObjectClassInfo"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.#ctor(DevExpress.Xpo.Session,System.Type,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Uses a <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/>, an object type and filter criteria to initialize a new <see cref="T:DevExpress.Xpo.XPServerModeView"/> instance.</para>
      </summary>
      <param name="session">The session used to load persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.Session"/> property.</param>
      <param name="objectType">A persistent type. This value is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.ObjectType"/> property and indirectly assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.ObjectClassInfo"/> property.</param>
      <param name="fixedFilterCriteria">An expression that calculates values to be displayed in a data table. The expression is assigned to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.XPServerModeView"/> instance and adds it to a container.</para>
      </summary>
      <param name="container">A container that is the owner of the created XPServerModeView.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.AddProperty(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</para>
      </summary>
      <param name="property">The expression used to calculate values in a column on the data store side.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object that was added to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.AddProperty(System.String)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</para>
      </summary>
      <param name="property">A string value that specifies the expression used to calculate values in a column on the data store side. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object that was added to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.AddProperty(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</para>
      </summary>
      <param name="name">A string value that specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="property">The expression used to calculate values in a column on the data store side.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object that was added to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.AddProperty(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.SortDirection)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</para>
      </summary>
      <param name="name">A string value that specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="property">The expression used to calculate values in a column on the data store side.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value that specifies a sort order for property values to be retrieved from the data store. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Sorting"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object that was added to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.AddProperty(System.String,System.String)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</para>
      </summary>
      <param name="name">A string value that specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="property">A string value that specifies the expression used to calculate values in a column on the data store side. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object that was added to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.AddProperty(System.String,System.String,DevExpress.Xpo.SortDirection)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</para>
      </summary>
      <param name="name">A string value that specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Name"/> property.</param>
      <param name="property">A string value that specifies the expression used to calculate values in a column on the data store side. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Property"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value that specifies a sort order for property values to be retrieved from the data store. This value is assigned to the <see cref="P:DevExpress.Xpo.ServerViewProperty.Sorting"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object that was added to the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPServerModeView.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter items on the data store side. Bound data-aware controls never affect the criteria.</para>
      </summary>
      <value>An expression that filters items on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerModeView.FixedFilterString">
      <summary>
        <para>Specifies a string that contains the criteria used to filter items on the data store side. Bound data-aware controls never affect the criteria.</para>
      </summary>
      <value>A string that represents a filter expression. The expression contains criteria to filter items on the data store side.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerModeView.ObjectClassInfo">
      <summary>
        <para>Gets or sets the <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> that describes the type of items the target data table contains.</para>
      </summary>
      <value>Metadata that relates to the type of items the target data table contains.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPServerModeView.ObjectType">
      <summary>
        <para>Gets or sets the type of items the target data table contains.</para>
      </summary>
      <value>The type of items the data source contains.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.PopulateProperties">
      <summary>
        <para>Clears the <see cref="P:DevExpress.Xpo.XPServerModeView.Properties"/> collection and populates it with properties of the persistent type specified by the <see cref="P:DevExpress.Xpo.XPServerModeView.ObjectType"/> property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPServerModeView.Properties">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Xpo.ServerViewPropertiesCollection"/> object that contains information on a persistent type&#39;s property names, criteria, and sort order.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.ServerViewProperty"/> object collection that contains information on a persistent type&#39;s property names, criteria, and sort order.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPServerModeView.Reload">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPServerModeView.ResolveSession">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Xpo.XPServerModeView"/> requests a <see cref="T:DevExpress.Xpo.Session"/> to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPServerModeView.ServerExceptionThrown">
      <summary>
        <para>Occurs when a data server throws an exception.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPServerModeView.Session">
      <summary>
        <para>Gets or sets a session used to load persistent objects.</para>
      </summary>
      <value>The session used to load persistent objects.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPView">
      <summary>
        <para>The view that stores data retrieved from persistent objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified <see cref="P:DevExpress.Xpo.XPView.Session"/> and <see cref="P:DevExpress.Xpo.XPView.ObjectClassInfo"/> properties.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="info">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to add to the view. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.ObjectClassInfo"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="info">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to add to the view. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.ObjectClassInfo"/> property.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which represents a collection whose elements are added to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="info">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to add to the view. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.ObjectClassInfo"/> property.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which represents a collection whose elements are added to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
      <param name="groupCriteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the grouping criteria.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,DevExpress.Xpo.Metadata.XPClassInfo,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="info">An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to add to the view. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.ObjectClassInfo"/> property.</param>
      <param name="properties">A <see cref="T:System.String"/> value which lists the property names separated by semicolons. For example, &quot;FirstName + LastName;Company.Name;Address.City&quot;.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified session and type of persistent objects to include in the view.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="objType">The type of persistent objects to include into the view.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,System.Type,DevExpress.Data.Filtering.CriteriaOperatorCollection,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="objType">The type of persistent objects to include into the view.</param>
      <param name="properties">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object which represents a collection whose elements are added to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(DevExpress.Xpo.Session,System.Type,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class with the specified settings.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that will be used to load and save persistent objects. This value is assigned to the <see cref="P:DevExpress.Xpo.XPView.Session"/> property.</param>
      <param name="objType">The type of persistent objects to include in the view.</param>
      <param name="properties">A <see cref="T:System.String"/> value which lists the property names separated by semicolons. For example, &quot;FirstName + LastName;Company.Name;Address.City&quot;.</param>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter criteria.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPView"/> class and adds it to a form&#39;s container.</para>
      </summary>
      <param name="container">An IContainer object, which is the owner container of the created XPView instance.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the expression used to calculate the values in a column.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified name and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="property">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified expression and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the expression used to calculate the values in a column.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified expression and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the expression used to calculate the values in a column.</param>
      <param name="group">true to group the view by this property; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Group"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String,DevExpress.Data.Filtering.CriteriaOperator,System.Boolean,System.Boolean,DevExpress.Xpo.SortDirection)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified settings and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the expression used to calculate the values in a column.</param>
      <param name="group">true to group the view by this property; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Group"/> property.</param>
      <param name="fetch">true to retrieve data; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Fetch"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the column&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Sorting"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String,System.String)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified expression and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="property">A <see cref="T:System.String"/> value which specifies the expression used to calculate the values in a column. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Property"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String,System.String,System.Boolean)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified expression and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="property">A <see cref="T:System.String"/> value which specifies the expression used to calculate the values in a column. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Property"/> property.</param>
      <param name="group">true to group the view by this property; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Group"/> property.</param>
      <returns>The <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.AddProperty(System.String,System.String,System.Boolean,System.Boolean,DevExpress.Xpo.SortDirection)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Xpo.ViewProperty"/> object with the specified settings and appends it to the <see cref="P:DevExpress.Xpo.XPView.Properties"/> collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value which specifies the property name. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Name"/> property.</param>
      <param name="property">A <see cref="T:System.String"/> value which specifies the expression used to calculate the values in a column. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Property"/> property.</param>
      <param name="group">true to group the view by this property; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Group"/> property.</param>
      <param name="fetch">true to retrieve data; otherwise, false. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Fetch"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the column&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.ViewProperty.Sorting"/> property.</param>
      <returns>A <see cref="T:DevExpress.Xpo.ViewProperty"/> object that was added to the collection.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPView.CaseSensitive">
      <summary>
        <para>Gets or sets whether string comparisons evaluated by the <see cref="T:DevExpress.Xpo.XPView"/> on the client are case-sensitive.</para>
      </summary>
      <value>true if string comparisons are case-sensitive; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Count">
      <summary>
        <para>Gets the number of records within the view.</para>
      </summary>
      <value>An integer value which specifies the number of records within the view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Criteria">
      <summary>
        <para>Gets or sets the criteria associated with the view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the criteria associated with the view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.CriteriaString">
      <summary>
        <para>Gets or sets the criteria used to filter objects while the view is being loaded.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the criteria used to filter objects while the view is being loaded.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Filter">
      <summary>
        <para>Gets or sets the expression used to filter the rows displayed in the view (on the client side).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the expression used to filter the rows displayed in the view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.GroupCriteria">
      <summary>
        <para>Gets or sets the grouping criteria which is associated with the view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the grouping criteria.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.GroupCriteriaString">
      <summary>
        <para>Gets or sets the grouping criteria which is associated with the view.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the grouping criteria.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to individual records within the view.</para>
      </summary>
      <param name="index">A zero-based integer which specifies the record&#39;s position within the view. If it&#39;s negative or exceeds the last available index, an exception is raised.</param>
      <value>A <see cref="T:DevExpress.Xpo.ViewRecord"/> object which represents the record at the specified position.</value>
    </member>
    <member name="E:DevExpress.Xpo.XPView.ListChanged">
      <summary>
        <para>Occurs when the view&#39;s settings are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPView.LoadAsync">
      <summary>
        <para>Asynchronously loads data from the data store into the view.</para>
      </summary>
      <returns>true, if the current method call started collection loading; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.XPView.LoadAsync(DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback)">
      <summary>
        <para>Asynchronously loads data from the data store into the view, and notifies upon completion.</para>
      </summary>
      <param name="callback">A DevExpress.Xpo.Helpers.AsyncLoadObjectsCallback delegate to be called after loading is complete.</param>
      <returns>true, if the current method call started collection loading; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.XPView.ObjectClassInfo">
      <summary>
        <para>Gets the metadata information for the persistent objects retrieved by the view.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.Metadata.XPClassInfo"/> object which provides the metadata information for the objects to add to the view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.ObjectType">
      <summary>
        <para>Gets the type of the class whose metadata is provided by the <see cref="P:DevExpress.Xpo.XPView.ObjectClassInfo"/> property.</para>
      </summary>
      <value>The <see cref="T:System.Type"/> of the class.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Properties">
      <summary>
        <para>Gets a collection of <see cref="T:DevExpress.Xpo.ViewProperty"/> objects that represent view columns.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.ViewPropertiesCollection"/> object which represents the collection of <see cref="T:DevExpress.Xpo.ViewProperty"/> objects.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPView.Reload">
      <summary>
        <para>Clears the view and marks it to be reloaded with data from the data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Xpo.XPView.ResolveSession">
      <summary>
        <para>Enables the view to be associated with a session.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.XPView.SelectDeleted">
      <summary>
        <para>Specifies whether objects marked as deleted are retrieved by the <see cref="T:DevExpress.Xpo.XPView"/>.</para>
      </summary>
      <value>true, if objects marked as deleted are loaded to the collection from a data store; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Session">
      <summary>
        <para>Gets or sets the session which is used to load and save persistent objects.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.Session"/> object which represents the session that is used to load and save persistent objects.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.SkipReturnedRecords">
      <summary>
        <para>Gets or sets the number of records to exclude when populating the view.</para>
      </summary>
      <value>An integer value that specifies the number of records to exclude when populating the view. 0 indicates that records are not excluded.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.Sorting">
      <summary>
        <para>Provides access to the collection whose elements identify the sorted columns within the view.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.SortingCollection"/> object which contains information on the sorted columns within the view.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPView.TopReturnedRecords">
      <summary>
        <para>Gets or sets the maximum number of records retrieved by the view.</para>
      </summary>
      <value>An integer value that specifies the maximum number of records retrieved by the view.</value>
    </member>
    <member name="T:DevExpress.Xpo.XPWeakReference">
      <summary>
        <para>A persistent weak reference to a persistent object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPWeakReference.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPWeakReference"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.XPWeakReference.#ctor(DevExpress.Xpo.IXPSimpleObject)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPWeakReference"/> class with the specified targeted object.</para>
      </summary>
      <param name="target">An object that will be referenced by the newly created <see cref="T:DevExpress.Xpo.XPWeakReference"/> object. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPWeakReference.Target"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPWeakReference.#ctor(DevExpress.Xpo.Session)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPWeakReference"/> class with the specified session.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which the created reference belongs.</param>
    </member>
    <member name="M:DevExpress.Xpo.XPWeakReference.#ctor(DevExpress.Xpo.Session,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.XPWeakReference"/> class with the specified session and targeted object.</para>
      </summary>
      <param name="session">A <see cref="T:DevExpress.Xpo.Session"/> object to which the target belongs.</param>
      <param name="target">An object that will be referenced by the newly created <see cref="T:DevExpress.Xpo.XPWeakReference"/> object. This value is used to initialize the <see cref="P:DevExpress.Xpo.XPWeakReference.Target"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.XPWeakReference.IsAlive">
      <summary>
        <para>Gets whether the object referenced by this instance has been garbage collected.</para>
      </summary>
      <value>true if the referenced object has been garbage collected; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Xpo.XPWeakReference.KeyToString(System.Object)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used direcly from your code.</para>
      </summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpo.XPWeakReference.Oid">
      <summary>
        <para>A key of the current weak reference.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.XPWeakReference.StringToKey(System.String)">
      <summary>
        <para>This method supports the internal infrastructure and is not intended to be used direcly from your code.</para>
      </summary>
      <param name="s"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.XPWeakReference.Target">
      <summary>
        <para>Gets or sets the object referenced by the current <see cref="T:DevExpress.Xpo.XPWeakReference"/> instance.</para>
      </summary>
      <value>An object referenced by the current <see cref="T:DevExpress.Xpo.XPWeakReference"/> instance.</value>
    </member>
    <member name="P:DevExpress.Xpo.XPWeakReference.TargetKey_">
      <summary>
        <para>This property isn&#39;t used.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.XPWeakReference.TargetType_">
      <summary>
        <para>This property isn&#39;t used.</para>
      </summary>
      <value></value>
    </member>
    <member name="N:Microsoft.Extensions.DependencyInjection">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.DataLayerOptions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptions.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.AutoCreateOption">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptions.Clone">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.ConnectionPoolMaxConnections">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.ConnectionPoolSize">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.ConnectionString">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.CustomDataStoreFactory">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.CustomDictionaryFactory">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.DataLayerInitializedHandler">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.DataStoreInitializedHandler">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.DictionaryInitializedHandler">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.EntityTypes">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptions.Equals(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptions.GetHashCode">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.NullableBehavior">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.UseConnectionPool">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.UseInMemoryDataStore">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.UseThreadSafeDataLayer">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptions.UseThreadSafeDataLayerSchemaInitialization">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.DataLayerOptions">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseAutoCreationOption(DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para></para>
      </summary>
      <param name="autoCreateOption"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseConnectionPool(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useConnectionPool"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseConnectionPoolSize(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseConnectionPoolSizeAndMaxConnections(System.Int32,System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="size"></param>
      <param name="maxConnections"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseConnectionString(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="connectionString"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseCustomDataStoreFactory(System.Func{Microsoft.Extensions.DependencyInjection.XpoDataStoreResult})">
      <summary>
        <para></para>
      </summary>
      <param name="factory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseCustomDictionaryFactory(System.Func{DevExpress.Xpo.Metadata.XPDictionary})">
      <summary>
        <para></para>
      </summary>
      <param name="factory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseDataLayerInitializedHandler(System.Action{DevExpress.Xpo.IDataLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseDataStoreInitializedHandler(System.Action{DevExpress.Xpo.DB.IDataStore})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseDictionaryInitializedHandler(System.Action{DevExpress.Xpo.Metadata.XPDictionary})">
      <summary>
        <para></para>
      </summary>
      <param name="action"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseEntityTypes(System.Type[])">
      <summary>
        <para></para>
      </summary>
      <param name="entityTypes"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseInMemoryDataStore(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useInMemoryDataStore"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseNullableBehavior(DevExpress.Xpo.NullableBehavior)">
      <summary>
        <para></para>
      </summary>
      <param name="nullableBehavior"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseThreadSafeDataLayer(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="isThreadSafe"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder.UseThreadSafeDataLayerSchemaInitialization(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="useThreadSafeDataLayerSchemaInitialization"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.XpoDataStoreResult">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoDataStoreResult.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoDataStoreResult.#ctor(DevExpress.Xpo.DB.IDataStore,System.IDisposable[])">
      <summary>
        <para></para>
      </summary>
      <param name="dataStore"></param>
      <param name="objectsToDisposeOnDisconnect"></param>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.XpoDataStoreResult.DataStore">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:Microsoft.Extensions.DependencyInjection.XpoDataStoreResult.ObjectsToDisposeOnDisconnect">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoCustomSession``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoCustomSession``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Action{Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useDataLayerAsSingleton"></param>
      <param name="dataLayerOptionsBuildAction"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoCustomSession``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Func{System.IServiceProvider,DevExpress.Xpo.IDataLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useDataLayerAsSingleton"></param>
      <param name="dataLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoCustomSession``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Func{System.IServiceProvider,DevExpress.Xpo.IObjectLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useObjectLayerAsSingleton"></param>
      <param name="objectLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultDataLayer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Action{Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="lifetime"></param>
      <param name="dataLayerOptionsBuildAction"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultDataLayer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{System.IServiceProvider,DevExpress.Xpo.IDataLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="lifetime"></param>
      <param name="dataLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultObjectLayer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{System.IServiceProvider,DevExpress.Xpo.IObjectLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="lifetime"></param>
      <param name="objectLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultSession(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Action{Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useDataLayerAsSingleton"></param>
      <param name="dataLayerOptionsBuildAction"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultSession(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Func{System.IServiceProvider,DevExpress.Xpo.IDataLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useDataLayerAsSingleton"></param>
      <param name="dataLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultSession(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Func{System.IServiceProvider,DevExpress.Xpo.IObjectLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useObjectLayerAsSingleton"></param>
      <param name="objectLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultUnitOfWork(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultUnitOfWork(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Action{Microsoft.Extensions.DependencyInjection.DataLayerOptionsBuilder})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useDataLayerAsSingleton"></param>
      <param name="dataLayerOptionsBuildAction"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultUnitOfWork(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Func{System.IServiceProvider,DevExpress.Xpo.IDataLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useDataLayerAsSingleton"></param>
      <param name="dataLayerFactory"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.XpoServiceCollectionExtensions.AddXpoDefaultUnitOfWork(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Func{System.IServiceProvider,DevExpress.Xpo.IObjectLayer})">
      <summary>
        <para></para>
      </summary>
      <param name="serviceCollection"></param>
      <param name="useObjectLayerAsSingleton"></param>
      <param name="objectLayerFactory"></param>
      <returns></returns>
    </member>
  </members>
</doc>