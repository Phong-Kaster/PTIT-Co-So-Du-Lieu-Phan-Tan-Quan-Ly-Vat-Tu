<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>DevExpress.Data.v19.2</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Data">
      <summary>
        <para>Contains classes implementing the common data management functionality for DevExpress controls.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.Browsing">
      <summary>
        <para>Contains classes that assist in obtaining information about a data source.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Browsing.DataContext">
      <summary>
        <para>Provides information about a data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Browsing.DataContext"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Browsing.DataContext"/> class with the specified settings.</para>
      </summary>
      <param name="suppressListFilling">A Boolean value.</param>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.GetCustomDataSourceDisplayName(System.Object)">
      <summary>
        <para>Returns the display name of a custom data source.</para>
      </summary>
      <param name="dataSource">A <see cref="T:System.Object"/> value, specifying the data source.</param>
      <returns>A <see cref="T:System.String"/> value, specifying the custom data source display name.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.GetDataMemberDisplayName(System.Object,System.String)">
      <summary>
        <para>Returns the display name of a data member.</para>
      </summary>
      <param name="dataSource">A <see cref="T:System.Object"/> value, specifying the data source.</param>
      <param name="dataMember">A <see cref="T:System.String"/> value, specifying the data member.</param>
      <returns>A <see cref="T:System.String"/> value, specifying the data member display name.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.GetDataMemberDisplayName(System.Object,System.String,System.String)">
      <summary>
        <para>Returns the display name of a data member.</para>
      </summary>
      <param name="dataSource">A <see cref="T:System.Object"/> value, specifying the data source.</param>
      <param name="dataMemberPrefix">A <see cref="T:System.String"/> value, specifying the data member prefix.</param>
      <param name="dataMember">A <see cref="T:System.String"/> value, specifying the data member.</param>
      <returns>A <see cref="T:System.String"/> value, specifying the data member display name.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.GetDataSourceDisplayName(System.Object,System.String)">
      <summary>
        <para>Returns the display name of a data source.</para>
      </summary>
      <param name="dataSource">A <see cref="T:System.Object"/> value, specifying the data source.</param>
      <param name="dataMember">A <see cref="T:System.String"/> value, specifying the data member.</param>
      <returns>A <see cref="T:System.String"/> value, specifying the data source display name.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.GetItemProperties(System.Object,System.String,System.Boolean)">
      <summary>
        <para>Returns the array of data source item properties.</para>
      </summary>
      <param name="dataSource">A <see cref="T:System.Object"/> value, specifying the data source.</param>
      <param name="dataMember">A <see cref="T:System.String"/> value, specifying the data member.</param>
      <param name="forceList">A Boolean value.</param>
      <returns>An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.IsComplexType(System.Type)">
      <summary>
        <para>Indicates whether the data source is of a custom type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> value.</param>
      <returns>true if the data source is custom; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.IsStandardType(System.Type)">
      <summary>
        <para>Indicates whether the data source is of the standard type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> value.</param>
      <returns>true if the data source is standard; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.DataContext.TryGetDataMemberDisplayName(System.Object,System.String,System.String@)">
      <summary>
        <para>Attempts to obtain the display name of the specified data member.</para>
      </summary>
      <param name="dataSource">A <see cref="T:System.Object"/> value, specifying the data source.</param>
      <param name="dataMember">A <see cref="T:System.String"/> value, specifying the data member.</param>
      <param name="result">A <see cref="T:System.String"/> value, specifying the result.</param>
      <returns>true if the data member&#39;s display name has been obtained; otherwise false.</returns>
    </member>
    <member name="N:DevExpress.Data.Browsing.Design">
      <summary>
        <para>Contains types implementing common design-time data browsing functionality for DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Browsing.Design.ITypeSpecificsService">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.ITypeSpecificsService.GetPropertyTypeSpecifics(System.ComponentModel.PropertyDescriptor)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="property"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.ITypeSpecificsService.GetTypeSpecifics(System.Type)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Data.Browsing.Design.PickManagerBase">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.AreContainDummyNode(System.Collections.IList)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.ContainsDummyNode(System.Collections.IList)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="list"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Browsing.Design.PickManagerBase.Executor">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FillContent(System.Collections.IList,System.Collections.IList,System.Boolean)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <param name="dataSources"></param>
      <param name="addNoneNode"></param>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FillContent(System.Collections.IList,System.Collections.ObjectModel.Collection{DevExpress.XtraPrinting.Native.Pair{System.Object,System.String}},System.Boolean)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <param name="dataSources"></param>
      <param name="addNoneNode"></param>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FillNodes(System.Object,System.String,System.Collections.IList)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="dataSource"></param>
      <param name="dataMember"></param>
      <param name="nodes"></param>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindDataMemberNode(System.Collections.IList,System.Object,System.String)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <param name="dataSource"></param>
      <param name="dataMember"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindDataMemberNode(System.Collections.IList,System.String)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <param name="dataMember"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindDataMemberNode(System.Collections.IList,System.String,System.Action{DevExpress.Data.Browsing.Design.INode})">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <param name="dataMember"></param>
      <param name="callback"></param>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindNoneNode(System.Collections.IList)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.FindSourceNode(System.Collections.IList,System.Object)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="nodes"></param>
      <param name="dataSource"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.GetDataSourceName(System.Object,System.String,DevExpress.Data.Browsing.Design.IPropertiesProvider,System.EventHandler{DevExpress.Data.Browsing.Design.GetDataSourceDisplayNameEventArgs})">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="dataSource"></param>
      <param name="dataMember"></param>
      <param name="provider"></param>
      <param name="callback"></param>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.GetDataSourceNode(DevExpress.Data.Browsing.Design.INode)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="node"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.PickManagerBase.OnNodeExpand(System.Object,DevExpress.Data.Browsing.Design.INode)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="dataSource"></param>
      <param name="node"></param>
    </member>
    <member name="T:DevExpress.Data.Browsing.Design.TypeSpecifics">
      <summary>
        <para>Lists the available column types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Array">
      <summary>
        <para>The array column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Bool">
      <summary>
        <para>The Boolean column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcBool">
      <summary>
        <para>The Boolean calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcDate">
      <summary>
        <para>The date-time calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcDefault">
      <summary>
        <para>The default calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcFloat">
      <summary>
        <para>The floating point number calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcGuid">
      <summary>
        <para>The GUID calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcInteger">
      <summary>
        <para>The integer number calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.CalcString">
      <summary>
        <para>The string calculated field column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Date">
      <summary>
        <para>The date-time column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Default">
      <summary>
        <para>The default column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Enum">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Float">
      <summary>
        <para>The floating point number column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Guid">
      <summary>
        <para>The GUID column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Integer">
      <summary>
        <para>The integer number column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.List">
      <summary>
        <para>The list column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.ListOfParameters">
      <summary>
        <para>The parameter list column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.ListSource">
      <summary>
        <para>The source list column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.None">
      <summary>
        <para>No column type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.Range">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Browsing.Design.TypeSpecifics.String">
      <summary>
        <para>The string column type.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Browsing.Design.TypeSpecificsService">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.TypeSpecificsService.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Browsing.Design.TypeSpecificsService"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.TypeSpecificsService.GetPropertyTypeSpecifics(System.ComponentModel.PropertyDescriptor)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="property"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Browsing.Design.TypeSpecificsService.GetTypeSpecifics(System.Type)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="N:DevExpress.Data.Camera">
      <summary>
        <para>Provides types that describe video capture devices and video properties.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Camera.CameraDeviceBase">
      <summary>
        <para>The base class for classes that describe video capture devices.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.#ctor(DevExpress.Data.Camera.CameraDeviceInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Camera.CameraDeviceBase"/> class with the specified settings.</para>
      </summary>
      <param name="deviceInfo">An object that comprises system information about the video capture device.</param>
    </member>
    <member name="P:DevExpress.Data.Camera.CameraDeviceBase.DeviceMoniker">
      <summary>
        <para>Gets the string representation of the moniker for the current device.</para>
      </summary>
      <value>A String value that specifies the string representation of the moniker for the current device.</value>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Dispose">
      <summary>
        <para>Disposes of the current object and releases all the allocated resources.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current object.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.GetAvailableResolutions">
      <summary>
        <para>Returns the list of video resolutions available on the current device.</para>
      </summary>
      <returns>The list of video resolutions available on the current device.</returns>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.GetAvailiableResolutions">
      <summary>
        <para>Returns the list of video resolutions available on the current device.</para>
      </summary>
      <returns>The list of video resolutions available on the current device.</returns>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.GetHashCode">
      <summary>
        <para>Returns the hash code for the current <see cref="T:DevExpress.Data.Camera.CameraDeviceBase"/> object.</para>
      </summary>
      <returns>The hash code for the current <see cref="T:DevExpress.Data.Camera.CameraDeviceBase"/> object.</returns>
    </member>
    <member name="P:DevExpress.Data.Camera.CameraDeviceBase.IsBusy">
      <summary>
        <para>Gets whether the video capture device is already in use in another application.</para>
      </summary>
      <value>true, the video capture device is already in use in another application; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.CameraDeviceBase.IsRunning">
      <summary>
        <para>Gets whether the device is currently capturing video.</para>
      </summary>
      <value>true, if the device is currently capturing video; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.CameraDeviceBase.Name">
      <summary>
        <para>Gets the UI display name of the video capture device.</para>
      </summary>
      <value>A String value that specifies the UI display name of the video capture device.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.CameraDeviceBase.Resolution">
      <summary>
        <para>Gets or sets the resolution of a video stream captured by the current device.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Size"/> structure that specifies the resolution of a video stream captured by the current device.</value>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.SetClient(DevExpress.Data.Camera.Interfaces.ICameraDeviceClient)">
      <summary>
        <para>Sets the ICameraDeviceClient object that processes the video from the current capture device.</para>
      </summary>
      <param name="client">An ICameraDeviceClient object that processes the video from the current capture device.</param>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Start">
      <summary>
        <para>Starts capturing video from the current device.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.Stop">
      <summary>
        <para>Stops capturing video from the current device.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.TakeSnapshot">
      <summary>
        <para>Returns the video frame currently captured by the device.</para>
      </summary>
      <returns>A <see cref="T:System.Drawing.Bitmap"/> object that is the video frame currently captured by the device.</returns>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceBase.WndProc(System.Windows.Forms.Message@)">
      <summary>
        <para>Processes Windows messages.</para>
      </summary>
      <param name="m">The Windows Message to process.</param>
    </member>
    <member name="T:DevExpress.Data.Camera.CameraDeviceInfo">
      <summary>
        <para>Contains system information used to identify a video capture device.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Camera.CameraDeviceInfo"/> class with the specified settings.</para>
      </summary>
      <param name="monikerString">A String value that specifies the string representation of the moniker for the video capture device. This value is assigned to the <see cref="F:DevExpress.Data.Camera.CameraDeviceInfo.MonikerString"/> field.</param>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Camera.CameraDeviceInfo"/> class with the specified settings.</para>
      </summary>
      <param name="monikerString">A String value that specifies the string representation of the moniker for the video capture device. This value is assigned to the <see cref="F:DevExpress.Data.Camera.CameraDeviceInfo.MonikerString"/> field.</param>
      <param name="name">A String value that specifies the UI display name of the video capture device. This value is assigned to the <see cref="F:DevExpress.Data.Camera.CameraDeviceInfo.Name"/> field.</param>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.CompareTo(System.Object)">
      <summary>
        <para>Compares the current instance with a specified object and indicates whether the current instance precedes, follows, or appears at the same position in the sort order as the specified object.</para>
      </summary>
      <param name="value">An object to compare with the current instance.</param>
      <returns>An integer value that specifies whether the current instance precedes, follows, or appears at the same position in the sort order as the specified object.</returns>
    </member>
    <member name="F:DevExpress.Data.Camera.CameraDeviceInfo.MonikerString">
      <summary>
        <para>The string representation of the moniker for the video capture device.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Data.Camera.CameraDeviceInfo.Name">
      <summary>
        <para>The UI display name of the video capture device.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.Camera.CameraDeviceInfo.ToString">
      <summary>
        <para>Returns the UI display name of the video capture device.</para>
      </summary>
      <returns>A String value that is the UI display name of the video capture device.</returns>
    </member>
    <member name="T:DevExpress.Data.Camera.DeviceVideoProperty">
      <summary>
        <para>Describes a video property on a video capture device.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Default">
      <summary>
        <para>Gets the default value of the video property.</para>
      </summary>
      <value>An <see cref="T:System.Int32"/> value that specifies the default value of the video property.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Max">
      <summary>
        <para>Gets the maximum value of the video property.</para>
      </summary>
      <value>An <see cref="T:System.Int32"/> value that specifies the maximum value of the video property.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Min">
      <summary>
        <para>Gets  the minimum value of the video property.</para>
      </summary>
      <value>An <see cref="T:System.Int32"/> value that specifies the minimum value of the video property.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Name">
      <summary>
        <para>Gets the name of the video property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the video property.</value>
    </member>
    <member name="E:DevExpress.Data.Camera.DeviceVideoProperty.PropertyChanged">
      <summary>
        <para>Occurs when a property value changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.DeviceVideoProperty.ResetToDefault">
      <summary>
        <para>Resets the video property value to its default.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.SteppingDelta">
      <summary>
        <para>Gets the step size for the video property. The step size is the smallest increment by which the property can change.</para>
      </summary>
      <value>An <see cref="T:System.Int32"/> value that specifies the step size for the video property.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoProperty.Value">
      <summary>
        <para>Gets or sets the current setting of the video property.</para>
      </summary>
      <value>An <see cref="T:System.Int32"/> value that specifies the current setting of the video property.</value>
    </member>
    <member name="T:DevExpress.Data.Camera.DeviceVideoSettings">
      <summary>
        <para>Provides access to the video properties on a video capture device.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.DeviceVideoSettings.#ctor(DevExpress.Data.Camera.Interfaces.ICameraDeviceClient)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Camera.DeviceVideoSettings"/> class with the specified settings.</para>
      </summary>
      <param name="client">An ICameraDeviceClient object that processes the video stream received from a video capture device.</param>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.BacklightCompensation">
      <summary>
        <para>Provides access to the video property that specifies the backlight compensation setting.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the backlight compensation setting.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Brightness">
      <summary>
        <para>Provides access to the video property that specifies the brightness, also called the black level.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the brightness, also called the black level.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.ColorEnable">
      <summary>
        <para>Provides access to the video property that specifies the color enable setting.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the color enable setting.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Contrast">
      <summary>
        <para>Provides access to the video property that specifies the contrast.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the contrast.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Gain">
      <summary>
        <para>Provides access to the video property that specifies the gain adjustment.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the gain adjustment.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Gamma">
      <summary>
        <para>Provides access to the video property that specifies the gamma.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the gamma.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Hue">
      <summary>
        <para>Provides access to the video property that specifies the hue.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the hue.</value>
    </member>
    <member name="E:DevExpress.Data.Camera.DeviceVideoSettings.PropertyChanged">
      <summary>
        <para>Occurs when a property value changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Camera.DeviceVideoSettings.ResetToDefaults">
      <summary>
        <para>Resets the video properties to their defaults.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Saturation">
      <summary>
        <para>Provides access to the video property that specifies the saturation.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the saturation.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.Sharpness">
      <summary>
        <para>Provides access to the video property that specifies the sharpness.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the sharpness.</value>
    </member>
    <member name="P:DevExpress.Data.Camera.DeviceVideoSettings.WhiteBalance">
      <summary>
        <para>Provides access to the video property that specifies the white balance, as a color temperature in degrees Kelvin.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Camera.DeviceVideoProperty"/> object that is the video property specifying the white balance, as a color temperature in degrees Kelvin.</value>
    </member>
    <member name="T:DevExpress.Data.ColumnSortOrder">
      <summary>
        <para>Lists values specifying the sort orders.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.ColumnSortOrder.Ascending">
      <summary>
        <para>Sorts the column in ascending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.ColumnSortOrder.Descending">
      <summary>
        <para>Sorts the columns in descending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.ColumnSortOrder.None">
      <summary>
        <para>No sorting is applied to a column.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.Controls">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Controls.ControlRows">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ControlRows.Selected">
      <summary>
        <para>The Chart Control visualizes data rows that are selected within a source control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ControlRows.Source">
      <summary>
        <para>The Chart Control visualizes a source control&#39;s all data rows.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ControlRows.Visible">
      <summary>
        <para>The Chart Control visualizes data rows that the source control filters.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Controls.ControlRowSource">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ControlRowSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ControlRowSource"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Controls.ControlRowSource.Control">
      <summary>
        <para>Gets or sets the control that provides its data rows to another control.</para>
      </summary>
      <value>The control that provides its data rows to another control.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ControlRowSource.ControlRows">
      <summary>
        <para>Gets or sets the type of rows that the source control provides.</para>
      </summary>
      <value>The type of rows that the source control provides.</value>
    </member>
    <member name="E:DevExpress.Data.Controls.ControlRowSource.PropertyChanged">
      <summary>
        <para>Occurs every time any of the class&#39; properties has changed its value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ControlRowSource.ReloadRows(System.Boolean)">
      <summary>
        <para>Reloads data rows from the source control.</para>
      </summary>
      <param name="raiseList">The value indicating whether the PropertyChanged event should be raised.</param>
    </member>
    <member name="T:DevExpress.Data.Controls.ControlRowSourceChangedEventArgs">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ControlRowSourceChangedEventArgs.#ctor(DevExpress.Data.Controls.ControlRows)">
      <summary>
        <para>Initializes new instance of the <see cref="T:DevExpress.Data.Controls.ControlRowSourceChangedEventArgs"></see> class with the specified settings.</para>
      </summary>
      <param name="changedRows">The value indicating the currently provided data row type.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ControlRowSourceChangedEventArgs.ChangedRows">
      <summary>
        <para>Returns the type of changed rows.</para>
      </summary>
      <value>The type of changed rows.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ControlRowSourceChangedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:DevExpress.Data.Controls.IControlRowSource.Changed"/> event.</para>
      </summary>
      <param name="sender">An object of any type that triggers the <see cref="E:DevExpress.Data.Controls.IControlRowSource.Changed"/> event.</param>
      <param name="e">Event arguments that provide data for the <see cref="E:DevExpress.XtraPrinting.PrintingSystemBase.PrintProgress"/> event.</param>
    </member>
    <member name="N:DevExpress.Data.Controls.ExpressionEditor">
      <summary>
        <para>Contains classes and interfaces enabling you to customize the Expression Editor in WinForms applications.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem">
      <summary>
        <para>Enables customization of Expression Editor items for which automatic completion is available.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.#ctor(System.String,System.String,DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem"/> class with the specified settings.</para>
      </summary>
      <param name="value">A <see cref="T:System.String"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Value"/> property.</param>
      <param name="description">A <see cref="T:System.String"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Description"/> property.</param>
      <param name="itemKind">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.ItemKind"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Description">
      <summary>
        <para>Specifies the description of a suggested automatic completion item displayed in a corresponding tool tip.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.ItemKind">
      <summary>
        <para>Indicates the kind of an item for which automatic code completion is available.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem.Value">
      <summary>
        <para>Specifies the value of a suggested automatic completion item added to an expression on selecting this item.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind">
      <summary>
        <para>Lists the items for which automatic completion is available in the Expression Editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Column">
      <summary>
        <para>The item is a data column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Function">
      <summary>
        <para>The item is a function.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Operator">
      <summary>
        <para>The item is an operator.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItemKind.Parameter">
      <summary>
        <para>The item is a parameter.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo">
      <summary>
        <para>Provides information about a data column listed in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.ColumnInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> class with the specified prototype.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> object, specifying a prototype for a new <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> class with the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.Children">
      <summary>
        <para>Returns the list of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> objects associated with columns owned by this column.</para>
      </summary>
      <value>A List&lt;<see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/>&gt; object that stores <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> objects associated with this column&#39;s children.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.Parent">
      <summary>
        <para>Gets or sets the ColumnInfo object related to a column that owns this column.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> object associated with this column&#39;s parent.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo.Type">
      <summary>
        <para>Specifies the type declaration of a data column.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo">
      <summary>
        <para>Provides information about a static constant listed in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.ConstantInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> class with the specified prototype.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> object, specifying a prototype for a new <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> class with the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.</param>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext">
      <summary>
        <para>Enables customization of the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.AutoCompleteItemsProvider">
      <summary>
        <para>Specifies an object providing a list of items suggested for automatic completion in the Expression Editor.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IAutoCompleteItemsProvider"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.ColorProvider">
      <summary>
        <para>Specifies an object providing a color scheme for painting expression elements in the Expression Editor.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorColorProvider"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.ColumnDynamicProvider">
      <summary>
        <para>Specifies an object that provides information about columns which becomes available only at runtime (as is the case with recurrent data fields in a report&#39;s <see cref="P:DevExpress.XtraReports.UI.XtraReportBase.DataSource"/>).</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IColumnDynamicProvider"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Columns">
      <summary>
        <para>Provides access to the collection of data columns available in the Expression Editor.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ColumnInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Constants">
      <summary>
        <para>Provides access to the collection of static constants available in the Expression Editor.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ConstantInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.CriteriaOperatorValidatorProvider">
      <summary>
        <para>Specifies the object that enables you to access the criteria validator assigned to an Expression Editor.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ICriteriaOperatorValidatorProvider"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Default">
      <summary>
        <para>Provides access to the default <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> instance.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Functions">
      <summary>
        <para>Provides access to the collection of functions available in the Expression Editor.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Operators">
      <summary>
        <para>Provides access to the collection of operators available in the Expression Editor.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.OptionsBehavior">
      <summary>
        <para>Gets an object providing additional customization settings for the Expression Editor.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior"/> object.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.Parameters">
      <summary>
        <para>Provides access to the collection of parameters available in the Expression Editor.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> objects.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext.UseRichDocumentation">
      <summary>
        <para>Specifies whether or not the Expression Editor should use the rich text control for operators, functions, and constant descriptions.</para>
      </summary>
      <value>true, to display descriptions using rich text; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel">
      <summary>
        <para>The Expression Editor model.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel"/> class with the specified expression.</para>
      </summary>
      <param name="expressionString">A <see cref="T:System.String"/> value, specifying the expression.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel.ExpressionString">
      <summary>
        <para>Specifies the expression string.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the expression.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior">
      <summary>
        <para>Enables additional customization of the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior.AutoSelectFocusedItem">
      <summary>
        <para>Specifies whether to select the function (and display its description) that is currently being focused in the Expression Editor.</para>
      </summary>
      <value>true, to select the focused function and display its description; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorOptionsBehavior.CapitalizeFunctionNames">
      <summary>
        <para>Specifies whether or not to spell function names in uppercase.</para>
      </summary>
      <value>true, to spell function names in uppercase; false, to spell function names in camel case.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorPresenter">
      <summary>
        <para>Provides the Presenter functionality to an Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorPresenter.#ctor(DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel,DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView,DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext,System.Func{System.String,System.String})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorPresenter"/> class with the specified settings.</para>
      </summary>
      <param name="model">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel"/> object.</param>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView"/> interface.</param>
      <param name="context">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</param>
      <param name="validate">A function delegate, providing additional expression validation on closing the editor with the specified expression (the first string) and error text (the second string). Validation is passed when this parameter is null or empty. Otherwise, the editor cannot be closed (this behavior is defined by the view&#39;s default implementation).</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorPresenter.#ctor(DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel,DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView,System.Func{System.String,System.String},DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorPresenter"/> class with the specified settings.</para>
      </summary>
      <param name="model">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorModel"/> object.</param>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView"/> interface.</param>
      <param name="validate">A function delegate, providing additional expression validation on closing the editor with the specified expression (the first string) and error text (the second string). Validation is passed when this parameter is null or empty. Otherwise, the editor cannot be closed (this behavior is defined by the view&#39;s default implementation).</param>
      <param name="context">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorPresenter.Context">
      <summary>
        <para>Gets an object enabling customization of the Expression Editor.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorUIHelper">
      <summary>
        <para>Enables you to launch the Expression Editor in your application at runtime with the specified settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorUIHelper.RunExpressionEditor(System.String@,DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView,DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext)">
      <summary>
        <para>Runs the Expression Editor with the specified settings.</para>
      </summary>
      <param name="expressionString">A <see cref="T:System.String"/> value, specifying the expression.</param>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView"/> interface.</param>
      <param name="context">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</param>
      <returns>true, if the editor was closed by clicking the OK button; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorUIHelper.RunExpressionEditor(System.String@,DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView,DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext,System.Func{System.String,System.String})">
      <summary>
        <para>Runs the Expression Editor with the specified settings.</para>
      </summary>
      <param name="expressionString">A <see cref="T:System.String"/> value, specifying the expression.</param>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView"/> interface.</param>
      <param name="context">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</param>
      <param name="validate">A function delegate, providing additional expression validation on closing the editor with the specified expression (the first string) and error text (the second string). Validation is passed when this parameter is null or empty. Otherwise, the editor cannot be closed (this behavior is defined by the view&#39;s default implementation).</param>
      <returns>true, if the editor was closed by clicking the OK button; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind">
      <summary>
        <para>Lists the elements of an expression available in the Expression Editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Column">
      <summary>
        <para>The expression element is a data column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Constant">
      <summary>
        <para>The expression element is a static constant.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Error">
      <summary>
        <para>The expression element is an error.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Function">
      <summary>
        <para>The expression element is a function.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Group">
      <summary>
        <para>The expression element is a group of items.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind.Operator">
      <summary>
        <para>The expression element is an operator.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo">
      <summary>
        <para>Provides information about a function listed in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.FunctionInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> class with the specified prototype.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> object, specifying a prototype for a new <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(DevExpress.Data.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> class with the specified function operator.</para>
      </summary>
      <param name="functionOperator">An object implementing the <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> interface. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CustomFunctionOperator"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(DevExpress.Data.Filtering.ICustomFunctionOperator,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> class with the specified settings.</para>
      </summary>
      <param name="functionOperator">An object implementing the <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> interface. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CustomFunctionOperator"/> property.</param>
      <param name="category">A <see cref="T:System.String"/> value, specifying the item category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.FunctionCategory"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo"/> class with the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.ArgumentTypes">
      <summary>
        <para>Specifies the type declarations of function arguments.</para>
      </summary>
      <value>An array of <see cref="T:System.Type"/> objects.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CaretOffset">
      <summary>
        <para>Specifies the caret position after adding a function to an expression.</para>
      </summary>
      <value>An integer value, specifying the number of symbols to the right of the caret position until the end of the function body.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.CustomFunctionOperator">
      <summary>
        <para>Specifies an object providing instructions required for evaluation of a function.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.DisplayName">
      <summary>
        <para>Specifies the full name of a function in the Expression Editor (including the function syntax).</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.FunctionCategory">
      <summary>
        <para>Specifies the category to which a function belongs (e.g., &quot;Math&quot;, &quot;String&quot; or &quot;DateTime&quot;).</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.FunctionInfo.UsageSample">
      <summary>
        <para>Specifies the example illustrating the function syntax in the Expression Editor panel and tooltip.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.IAutoCompleteItemsProvider">
      <summary>
        <para>If implemented, enables you to obtain the list of suggestions corresponding to a specific part of an expression.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.IAutoCompleteItemsProvider.GetAutoCompleteItems(System.String,System.Int32)">
      <summary>
        <para>Returns the collection of suggestions corresponding to a specific caret position within an expression.</para>
      </summary>
      <param name="expression">A <see cref="T:System.String"/> value, specifying the expression.</param>
      <param name="caretPosition">An integer value, specifying the symbol in the expression where the caret position is.</param>
      <returns>A collection of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.AutoCompleteItem"/> objects.</returns>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.IColumnDynamicProvider">
      <summary>
        <para>Provides information about data columns which becomes available only at runtime (as is the case with recurrent data fields in a report&#39;s <see cref="P:DevExpress.XtraReports.UI.XtraReportBase.DataSource"/>)</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.IColumnDynamicProvider.GetColumnInfo(DevExpress.Data.Controls.ExpressionEditor.ColumnDynamicArguments)">
      <summary>
        <para></para>
      </summary>
      <param name="arguments"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ICriteriaOperatorValidatorProvider">
      <summary>
        <para>If implemented, enables you to access the criteria validator assigned to an Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ICriteriaOperatorValidatorProvider.GetCriteriaOperatorValidator(DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext)">
      <summary>
        <para>Provides access to an object enabling you to manage the collection of errors found during criteria validation in the Expression Editor.</para>
      </summary>
      <param name="context">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator"/> object.</returns>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorColorProvider">
      <summary>
        <para>If implemented, provides a color scheme for painting expression elements in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorColorProvider.GetColorForElement(DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind)">
      <summary>
        <para>Returns a color used for painting a specific expression element kind.</para>
      </summary>
      <param name="elementKind">An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionElementKind"/> enumeration value.</param>
      <returns>A <see cref="T:System.Drawing.Color"/> structure.</returns>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorPresenter">
      <summary>
        <para>If implemented, provides the Presenter functionality to an Expression Editor.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorPresenter.Context">
      <summary>
        <para>Gets an object enabling customization of the Expression Editor.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ExpressionEditorContext"/> object.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView">
      <summary>
        <para>If implemented, provides the View functionality to an Expression Editor.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.IExpressionEditorView.ExpressionString">
      <summary>
        <para>Specifies the expression (in plain text).</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase">
      <summary>
        <para>The base for classes that provide functionality to Expression Editor items (such as constants, functions and data columns).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.#ctor(DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase"/> class with the specified prototype.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase"/> object, specifying a prototype for a new <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase"/> class with the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category">
      <summary>
        <para>Specifies the name of a category to which the Expression Editor item belongs.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Description">
      <summary>
        <para>Specifies the description displayed for an item in the Expression Editor.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Name">
      <summary>
        <para>Specifies the name of an Expression Editor item.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.ToString">
      <summary>
        <para>Returns the textual representation of <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase"/>.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value.</returns>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo">
      <summary>
        <para>Provides information about an operator listed in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.OperatorInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> class with the specified prototype.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> object, specifying a prototype for a new <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.OperatorInfo"/> class with the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.</param>
    </member>
    <member name="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo">
      <summary>
        <para>Provides information about a parameter listed in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor(DevExpress.Data.Controls.ExpressionEditor.ParameterInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> class with the specified prototype.</para>
      </summary>
      <param name="other">A <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> object, specifying a prototype for a new <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor(DevExpress.Data.IParameter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> class with the specified parameter.</para>
      </summary>
      <param name="parameter">An object implementing the <see cref="T:DevExpress.Data.IParameter"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo"/> class with the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.String"/> value, specifying the category name. This value is assigned to the <see cref="P:DevExpress.Data.Controls.ExpressionEditor.ItemInfoBase.Category"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Controls.ExpressionEditor.ParameterInfo.Type">
      <summary>
        <para>Specifies the parameter&#39;s type declaration.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object.</value>
    </member>
    <member name="T:DevExpress.Data.Controls.IControlRowSource">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.Controls.IControlRowSource.Changed">
      <summary>
        <para>Occurs every time the data source is changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Controls.IControlRowSource.GetRows(DevExpress.Data.Controls.ControlRows)">
      <summary>
        <para>Returns data rows of the specified row type.</para>
      </summary>
      <param name="rows">The requested row type.</param>
      <returns>Data rows of the specified row type.</returns>
    </member>
    <member name="P:DevExpress.Data.Controls.IControlRowSource.RowSource">
      <summary>
        <para>Returns the data row source.</para>
      </summary>
      <value>The data row source.</value>
    </member>
    <member name="T:DevExpress.Data.CustomSummaryEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.CustomSummaryEventArgs.#ctor(System.Int32,System.Object,System.Object,System.Int32,DevExpress.Data.CustomSummaryProcess,System.Object,System.Int32)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object.</para>
      </summary>
      <param name="controllerRow">An integer value identifying the processed row by its handle. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle"/> property.</param>
      <param name="totalValue">An object representing the custom calculated summary value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue"/> property.</param>
      <param name="fieldValue">An object representing the currently processed field value. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue"/> property.</param>
      <param name="groupRowHandle">An integer value identifying the group row whose child data rows are involved in summary calculation. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle"/> property.</param>
      <param name="summaryProcess">A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value identifying the current calculation stage. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess"/> property.</param>
      <param name="item">An object representing the summary item whose value is being calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.Item"/> property.</param>
      <param name="groupLevel">An integer value indicating the nested group level of the processed row. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.FieldValue">
      <summary>
        <para>Gets the processed field value.</para>
      </summary>
      <value>An object representing the processed field value.</value>
    </member>
    <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetGroupSummary(System.Int32,System.Object)">
      <summary>
        <para>Returns the value of the specified group summary for the specified group row.</para>
      </summary>
      <param name="groupRowHandle">An integer that specifies a group row&#39;s handle.</param>
      <param name="summaryItem">An object representing the group summary item. In the GridControl, it&#39;s represented by the <see cref="T:DevExpress.XtraGrid.GridGroupSummaryItem"/> class.</param>
      <returns>The specified group summary&#39;s value.</returns>
    </member>
    <member name="M:DevExpress.Data.CustomSummaryEventArgs.GetValue(System.String)">
      <summary>
        <para>Returns the value in the specified field</para>
      </summary>
      <param name="fieldName">A string that identifies the field whose value must be returned.</param>
      <returns>An object that represents the value of the specified field.</returns>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupLevel">
      <summary>
        <para>Gets the nested level of the group whose summary value is being calculated.</para>
      </summary>
      <value>An integer value representing the zero-based nested level of the processed group.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.GroupRowHandle">
      <summary>
        <para>Gets a value identifying the group row whose child data rows are involved in summary calculation.</para>
      </summary>
      <value>An integer value representing the handle of the group row containing the processed row as a child. 0 when calculating a total summary value.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsGroupSummary">
      <summary>
        <para>Gets whether a group summary value is being calculated.</para>
      </summary>
      <value>true if a group summary value is being calculated; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.IsTotalSummary">
      <summary>
        <para>Gets whether a total summary value is being calculated.</para>
      </summary>
      <value>true if a total summary value is being calculated; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.Item">
      <summary>
        <para>Gets a summary item whose value is being calculated.</para>
      </summary>
      <value>An object representing a summary item whose value is being calculated.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.Row">
      <summary>
        <para>Gets the currently processed row.</para>
      </summary>
      <value>The currently processed row.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.RowHandle">
      <summary>
        <para>Gets the handle of the processed row.</para>
      </summary>
      <value>An integer value identifying the processed data row by its handle.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.SummaryProcess">
      <summary>
        <para>Gets a value indicating calculation stage.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.CustomSummaryProcess"/> enumeration value indicating calculation stage.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValue">
      <summary>
        <para>Gets or sets the total summary value.</para>
      </summary>
      <value>An object representing the total summary value.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryEventArgs.TotalValueReady">
      <summary>
        <para>Gets or sets whether the Calculation stage of the custom summary calculation process should be skipped.</para>
      </summary>
      <value>true if the Calculation stage of the custom summary calculation process should be skipped; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.CustomSummaryEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryCalculate"/> event.</para>
      </summary>
      <param name="sender">The event source.</param>
      <param name="e">A <see cref="T:DevExpress.Data.CustomSummaryEventArgs"/> object containing data related to the event.</param>
    </member>
    <member name="T:DevExpress.Data.CustomSummaryExistEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.CustomSummaryExistEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> class.</para>
      </summary>
      <param name="groupRowHandle">An integer value specifying the handle of the group row whose summary value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle"/> property.</param>
      <param name="groupLevel">An integer value specifying the zero-based nesting level of the processed group. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel"/> property.</param>
      <param name="item">An object which represents the summary item whose value is about to be calculated. This value is assigned to the <see cref="P:DevExpress.Data.CustomSummaryExistEventArgs.Item"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Exists">
      <summary>
        <para>Gets or sets whether the summary value should be calculated and displayed.</para>
      </summary>
      <value>true to calculate and display the summary value; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupLevel">
      <summary>
        <para>Gets the nesting level of the group whose summary value is being calculated.</para>
      </summary>
      <value>An integer value representing the zero-based nesting level of the processed group.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.GroupRowHandle">
      <summary>
        <para>Gets a value identifying the group row whose summary value is about to be calculated.</para>
      </summary>
      <value>An integer value representing the handle of the group row whose summary value is about to be calculated. 0 when calculating a total summary value.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsGroupSummary">
      <summary>
        <para>Gets whether a group summary value is about to be calculated.</para>
      </summary>
      <value>true if a group summary value is about to be calculated; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.IsTotalSummary">
      <summary>
        <para>Gets whether a total summary value is about to be calculated.</para>
      </summary>
      <value>true if a total summary value is about to be calculated; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.CustomSummaryExistEventArgs.Item">
      <summary>
        <para>Gets a summary item whose value is about to be calculated.</para>
      </summary>
      <value>An object representing a summary item whose value is about to be calculated.</value>
    </member>
    <member name="T:DevExpress.Data.CustomSummaryExistEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomSummaryExists"/> event.</para>
      </summary>
      <param name="sender">The event source.</param>
      <param name="e">A <see cref="T:DevExpress.Data.CustomSummaryExistEventArgs"/> object containing data related to the event.</param>
    </member>
    <member name="T:DevExpress.Data.CustomSummaryProcess">
      <summary>
        <para>Specifies the current status of custom summary calculation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.CustomSummaryProcess.Calculate">
      <summary>
        <para>Indicates that custom summary calculation is in progress. This means the event is raised for a specific data row containing the field value used to calculate the processed custom summary.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.CustomSummaryProcess.Finalize">
      <summary>
        <para>Indicates that the process of custom summary calculation is finished.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.CustomSummaryProcess.Start">
      <summary>
        <para>Indicates that the process of custom summary calculation is about to be started.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.Entity">
      <summary>
        <para>Contains classes that provide functionality required for connecting to Entity Framework data sources.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Entity.DataConnectionLocation">
      <summary>
        <para>Lists the values indicating from where the Report Wizard obtains its data connection settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Entity.DataConnectionLocation.Both">
      <summary>
        <para>The Report Wizard lists all available data connections (both the data connections stored in an application&#39;s settings, and in the Visual Studio Server Explorer).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Entity.DataConnectionLocation.None">
      <summary>
        <para>The Report Wizard does not suggest using any of the available data connections.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Entity.DataConnectionLocation.ServerExplorer">
      <summary>
        <para>The Report Wizard lists the data connections available in the Visual Studio Server Explorer.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Entity.DataConnectionLocation.SettingsFile">
      <summary>
        <para>The Report Wizard lists the data connections available in the application&#39;s configuration file.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Entity.IConnectionConfigProvider">
      <summary>
        <para>Provides the path to the file that stores connection strings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Entity.IConnectionConfigProvider.GetConnectionConfigPath">
      <summary>
        <para>Returns the full path to the file that stores connection strings.</para>
      </summary>
      <returns>The full path to the file that stores connection strings</returns>
    </member>
    <member name="T:DevExpress.Data.Entity.IConnectionStringInfo">
      <summary>
        <para>If implemented, provides information about a connection string.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.Location">
      <summary>
        <para>Indicates from where the Report Wizard obtains its data connection settings.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Entity.DataConnectionLocation"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.Name">
      <summary>
        <para>If implemented, specifies the name of a connection string.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the connection string name.</value>
    </member>
    <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.ProviderName">
      <summary>
        <para>If implemented, gets the name of the data provider.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value specifying the data provider name.</value>
    </member>
    <member name="P:DevExpress.Data.Entity.IConnectionStringInfo.RunTimeConnectionString">
      <summary>
        <para>If implemented, obtains the connection string used to establish the data connection at run time.</para>
      </summary>
      <value>A <see cref="T:System.String"/> containing a connection string.</value>
    </member>
    <member name="T:DevExpress.Data.Entity.IConnectionStringsProvider">
      <summary>
        <para>If implemented, provides access to the available connection strings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConfigFileConnections">
      <summary>
        <para>If implemented, obtains information about connection strings defined in the application configuration file.</para>
      </summary>
      <returns>An array of objects implementing the <see cref="T:DevExpress.Data.Entity.IConnectionStringInfo"/> interface, which contain information about available connection strings.</returns>
    </member>
    <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConnections">
      <summary>
        <para>If implemented, obtains information about the available connection strings.</para>
      </summary>
      <returns>An array of objects implementing the <see cref="T:DevExpress.Data.Entity.IConnectionStringInfo"/> interface, that contain information about the available connection strings.</returns>
    </member>
    <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConnectionString(System.String)">
      <summary>
        <para>If implemented, obtains the specified connection string.</para>
      </summary>
      <param name="connectionStringName">A <see cref="T:System.String"/> value specifying a connection string by its name.</param>
      <returns>A <see cref="T:System.String"/> containing a connection sting.</returns>
    </member>
    <member name="M:DevExpress.Data.Entity.IConnectionStringsProvider.GetConnectionStringInfo(System.String)">
      <summary>
        <para>If implemented, obtains information about a specified connection string.</para>
      </summary>
      <param name="connectionStringName">A <see cref="T:System.String"/> value specifying the stored procedure name.</param>
      <returns>An object implementing the <see cref="T:DevExpress.Data.Entity.IConnectionStringInfo"/> interface that contains information about a connection string.</returns>
    </member>
    <member name="T:DevExpress.Data.ExceptionAction">
      <summary>
        <para>Specifies how to resolve exceptions while performing an action.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.ExceptionAction.CancelAction">
      <summary>
        <para>Cancel the action that caused an exception.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.ExceptionAction.RetryAction">
      <summary>
        <para>Retry the action that caused an exception.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.Filtering">
      <summary>
        <para>Contains classes that support the data filtering feature.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.Aggregate">
      <summary>
        <para>Enumerates aggregate functions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Avg">
      <summary>
        <para>Evaluates the average of the values in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Count">
      <summary>
        <para>Returns the number of objects in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Custom">
      <summary>
        <para>Returns a custom aggregate function&#39;s result.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Exists">
      <summary>
        <para>Determines whether the object exists in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Max">
      <summary>
        <para>Returns the maximum expression value in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Min">
      <summary>
        <para>Returns the minimum expression value in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Single">
      <summary>
        <para>Returns a single object from the collection. The collection must contain no more than one object.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Aggregate.Sum">
      <summary>
        <para>Returns the sum of all the expression values in the collection.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.AggregateOperand">
      <summary>
        <para>An aggregate operator which calculates aggregate expressions (MIN, MAX, SUM, etc.)</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(DevExpress.Data.Filtering.OperandProperty,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.</para>
      </summary>
      <param name="collectionProperty">An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the collection property. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> property.</param>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression"/> property.</param>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(DevExpress.Data.Filtering.OperandProperty,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator},System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with specified settings.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value that specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="aggregatedExpressions">A collection of aggregated expressions to be assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CustomAggregateOperands"/> property.</param>
      <param name="customAggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,DevExpress.Data.Filtering.Aggregate)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified collection property and operator type.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with specified settings.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value that specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="customAggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.Aggregate)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value which specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="aggregatedExpression">A <see cref="T:System.String"/> value which specifies the name of the persistent property of the object from the property collection.</param>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with the specified settings.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value which specifies the name of the collection property. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="aggregatedExpression">A <see cref="T:System.String"/> value which specifies the name of the persistent property of the object from the property collection.</param>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> class with specified settings.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value that specifies the name of the collection property whose values are used to calculate the aggregate expression. It can be represented by a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="customAggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression">
      <summary>
        <para>Gets or sets the aggregated expression.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType">
      <summary>
        <para>Gets or sets the type of the aggregate operator.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value which specifies the type of the aggregate operator.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Avg(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/>  which returns the average of values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty">
      <summary>
        <para>Gets or sets a collection property whose elements are used to calculate an aggregate expression.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the collection property.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.Condition">
      <summary>
        <para>Gets or sets the filter criteria which is applied to <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> values.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Count">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which returns the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Count(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which returns the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. This parameter may be ignored in certain circumstances.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Custom(System.String,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Creates a new custom <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> that returns values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="customAggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <param name="aggregatedExpressions">A collection of aggregated expressions to be assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CustomAggregateOperands"/> property.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.CustomAggregateName">
      <summary>
        <para>Gets or sets a custom aggregate function&#39;s name. The property value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</para>
      </summary>
      <value>A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.CustomAggregateOperands">
      <summary>
        <para>Gets an operand collection passed to a custom aggregate function.</para>
      </summary>
      <value>A collection of operand values.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Exists">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which determines whether or not the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> is greater than zero.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Exists(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which determines whether or not the count of <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> elements that match the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/> is greater than zero.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.AggregateOperand.IsTopLevel">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>true if the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> is null reference; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Max(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which returns the maximum of the values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.  This parameter may be ignored in certain circumstances.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Min(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which returns the minimum of the values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Single(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which returns the single object from the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that matches the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>. The collection must be empty or contain exactly one object.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.Sum(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> which returns the sum of values calculated by the given aggregate expression. This expression is evaluated against elements of the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CollectionProperty"/> that match the specified <see cref="P:DevExpress.Data.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object which calculates an aggregate expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.TopLevel(DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new top-level <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> that returns values calculated by the given custom aggregate expression.</para>
      </summary>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregateType"/> property.</param>
      <param name="aggregatedExpression">An aggregated expression assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.AggregatedExpression"/> property.</param>
      <returns>An operand collection passed to a custom aggregate function.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.AggregateOperand.TopLevel(System.String,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Creates a new top-level <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> that returns values calculated by the given custom aggregate expression.</para>
      </summary>
      <param name="customAggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <param name="aggregatedExpressions">A collection of aggregated expressions to be assigned to the <see cref="P:DevExpress.Data.Filtering.AggregateOperand.CustomAggregateOperands"/> property.</param>
      <returns>An operand collection passed to a custom aggregate function.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.BaseNodeEventArgs">
      <summary>
        <para>The base class that provides data for a Filter Control&#39;s events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.BaseNodeEventArgs.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the class.</para>
      </summary>
      <param name="propertyName">The value used to initialize the PropertyName property.</param>
      <param name="propertyType">The value used to initialize the PropertyType property.</param>
    </member>
    <member name="P:DevExpress.Data.Filtering.BaseNodeEventArgs.PropertyName">
      <summary>
        <para>Gets the name of the current property (column/field).</para>
      </summary>
      <value>The property name (column/field name).</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.BaseNodeEventArgs.PropertyType">
      <summary>
        <para>Gets the type of the current property (column/field).</para>
      </summary>
      <value>The type of the current property (column/field).</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.BetweenOperator">
      <summary>
        <para>An operator which determines whether a criteria expression lies between the specified range of values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property and the specified range of values.</para>
      </summary>
      <param name="testExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression that identifies the property whose values are tested.</param>
      <param name="beginExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.LeftOperand"/> property.</param>
      <param name="endExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.RightOperand"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property and the specified range of values.</para>
      </summary>
      <param name="testPropertyName">A <see cref="T:System.String"/> value which identifies the property whose values are tested.</param>
      <param name="beginExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression"/> property.</param>
      <param name="endExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.#ctor(System.String,System.Object,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> class with the specified property name and the specified range of values.</para>
      </summary>
      <param name="testPropertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are tested.</param>
      <param name="beginValue">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression"/> property.</param>
      <param name="endValue">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.BetweenOperator.BeginExpression">
      <summary>
        <para>Gets the expression for the first operand.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.BetweenOperator.EndExpression">
      <summary>
        <para>Gets the expression for the second operand.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.BetweenOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.BetweenOperator.LeftOperand">
      <summary>
        <para>Gets the expression for the first (left) operand.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the lower value in the range.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.BetweenOperator.Property">
      <summary>
        <para>Gets or sets the test expression.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the test expression.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.BetweenOperator.RightOperand">
      <summary>
        <para>Gets the expression for the second (right) operand.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the upper value in the range.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.BetweenOperator.TestExpression">
      <summary>
        <para>Gets or sets the test expression.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the test expression.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.BinaryOperator">
      <summary>
        <para>A logical expression which consists of a <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> operation between two operands.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified left and right operands and binary operator type.</para>
      </summary>
      <param name="opLeft">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the first operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.LeftOperand"/> property.</param>
      <param name="opRight">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the expression for the second operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.RightOperand"/> property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Boolean"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Boolean,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Boolean"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Byte"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Byte"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to an array of <see cref="T:System.Byte"/> values.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">An array of <see cref="T:System.Byte"/> values to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Byte[],DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Byte"/> values.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">An array of <see cref="T:System.Byte"/> values to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Char)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Char"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Char,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Char"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.DateTime)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.DateTime"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.DateTime,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.DateTime"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Decimal)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Decimal"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Decimal,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Decimal"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to <see cref="T:System.Double"/> values.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Double,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Double"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Guid"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Guid,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Guid"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int16)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Int16"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int16,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Int16"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to integer values.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int32,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator. This binary operator is used to compare the values of the specified property to the specified integer value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.Int64"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Int64,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Int64"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">An <see cref="T:System.Object"/> value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Object,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of the binary operator.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">An <see cref="T:System.Object"/> value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to <see cref="T:System.String"/> values.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.Single,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of the binary operator. This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.Single"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.String"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.String,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.String"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class which is used to compare the values of the specified property to the <see cref="T:System.TimeSpan"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan,DevExpress.Data.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> class with the specified type of binary operator.  This binary operator is used to compare the values of the specified property to the specified <see cref="T:System.TimeSpan"/> value.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property whose values are compared to the value.</param>
      <param name="value">The value to compare with the values of the specified property.</param>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.BinaryOperatorType"/> enumeration value which specifies the type of the binary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.BinaryOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperator.LeftOperand">
      <summary>
        <para>The left operand.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperator.OperatorType">
      <summary>
        <para>Gets the type of the binary operator.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperator.RightOperand">
      <summary>
        <para>The right operand.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.Filtering.BinaryOperatorType">
      <summary>
        <para>Enumerates binary operator types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseAnd">
      <summary>
        <para>Represents the bitwise AND operator.To create the bitwise AND operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &amp; 128 = 128&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseOr">
      <summary>
        <para>Represents the bitwise OR operator.To create the bitwise OR operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 | 3&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.BitwiseXor">
      <summary>
        <para>Represents the bitwise XOR operator.To create the bitwise XOR operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;(Field1 ^ Field2) = 1&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Divide">
      <summary>
        <para>Represents the division operator.To create the division operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 / Field2 = 2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Equal">
      <summary>
        <para>Represents the Boolean equality operator.To create the Boolean equality operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 = Field2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Greater">
      <summary>
        <para>Represents the Boolean greater-than operator.To create the Boolean greater&#0045;than operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &gt; Field2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.GreaterOrEqual">
      <summary>
        <para>Represents the Boolean greater-than-or-equal-to operator.To create the Boolean greater&#0045;than&#0045;or&#0045;equal&#0045;to operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &gt;= Field2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Less">
      <summary>
        <para>Represents the Boolean less-than operator.To create the Boolean less&#0045;than operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &lt; Field2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.LessOrEqual">
      <summary>
        <para>Represents the Boolean less-than-or-equal-to operator.To create the Boolean less&#0045;than&#0045;or&#0045;equal&#0045;to operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &lt;= Field2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Like">
      <summary>
        <para>The LIKE operator. This operator behavior is different, depending on current circumstances. We recommend that you use StartsWith, Contains and EndsWith function operators instead of Like, where possible.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Minus">
      <summary>
        <para>Represents the subtraction operator.To create the subtraction operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 - Field2 = 10&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Modulo">
      <summary>
        <para>Represents the modulus operator (computes the remainder after dividing its first operand by its second).To create the modulus operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 % Field2 = 1&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Multiply">
      <summary>
        <para>Represents the multiplication operator.To create the multiplication operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 * Field2 = 100&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.NotEqual">
      <summary>
        <para>Represents the Boolean inequality operator.To create the Boolean inequality operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 != Field2&quot;) or CriteriaOperator.Parse(&quot;Field1 &lt;&gt; Field2&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.BinaryOperatorType.Plus">
      <summary>
        <para>Represents the addition operator.To create the addition operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 + Field2 = 20&quot;)</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.ConstantValue">
      <summary>
        <para>A constant value operand in criteria expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ConstantValue.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ConstantValue"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ConstantValue.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ConstantValue"/> class with the specified constant value.</para>
      </summary>
      <param name="value">The constant value for the operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.OperandValue.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ConstantValue.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.ConstantValue"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.ConstantValue"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.ConstantValue.Equals(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.ConstantValue.GetHashCode">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ContainsOperator">
      <summary>
        <para>An operator which checks if a collection contains at least one object matching a specific criteria.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor(DevExpress.Data.Filtering.OperandProperty,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with the specified property operand and criteria expression.</para>
      </summary>
      <param name="collectionProperty">An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents the property operand in the criteria expression.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the search criteria.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ContainsOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.ContainsOperator"/> class with the specified property and criteria expression.</para>
      </summary>
      <param name="collectionProperty">A <see cref="T:System.String"/> value which identifies the property whose values will be searched.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents a search criteria.</param>
    </member>
    <member name="T:DevExpress.Data.Filtering.CriteriaOperator">
      <summary>
        <para>Provides the abstract (MustInherit in Visual Basic) base class for criteria operators.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Returns the expression which groups two operands with logical AND.</para>
      </summary>
      <param name="left">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.</param>
      <param name="right">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands with logical AND.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Returns the expression which groups the specified operands with logical AND.</para>
      </summary>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.And(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Returns the expression which groups the specified operands with logical AND.</para>
      </summary>
      <param name="operands">A list of operands to be grouped.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical AND.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.</para>
      </summary>
      <param name="origin">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object to clone.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents an exact copy of the specified object. null (Nothing in Visual Basic) if the specified object is null reference.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Clone(DevExpress.Data.Filtering.OperandProperty)">
      <summary>
        <para>Creates a copy of the specified <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.</para>
      </summary>
      <param name="origin">An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object to clone.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents an exact copy of the specified object. null (Nothing in Visual Basic) if the specified object is a null reference.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.CriterionEquals(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.CriteriaOperator.CustomAggregateCount">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.Filtering.CriteriaOperator.CustomFunctionCount">
      <summary>
        <para>Returns the number of custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomFunctionOperator})"/> method calls.</para>
      </summary>
      <value>An integer value which specifies the number of elements in a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomAggregate(System.String)">
      <summary>
        <para>Searches custom aggregate functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregate)"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregates(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomAggregate})"/> method calls for a function with a specified name.</para>
      </summary>
      <param name="aggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.ICustomAggregate"/> object that corresponds to the aggregateName, if found; otherwise, null (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomAggregates">
      <summary>
        <para>Searches custom aggregate functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregate)"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregates(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomAggregate})"/> method calls.</para>
      </summary>
      <returns>A collection of all registered custom aggregtate functions.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunction(System.String)">
      <summary>
        <para>Searches custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomFunctionOperator})"/> method calls for a function with a specified name.</para>
      </summary>
      <param name="functionName">The name of a custom function to search. You specify a custom function&#39;s name by implementing the <see cref="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name"/> property.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object that corresponds to the functionName, if found; otherwise, null (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions">
      <summary>
        <para>Returns custom functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomFunctionOperator})"/> method calls.</para>
      </summary>
      <returns>A DevExpress.Data.Filtering.CustomFunctionCollection object containing all custom functions registered via the methods mentioned above.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNotNull">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.IsNull">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString">
      <summary>
        <para>Returns the string representation of the criteria specified by the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <returns>A string equivalent of the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> instance.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.LegacyToString(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Returns the string representation of a specified criteria.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> instance specifying the criteria used to convert to a string equivalent.</param>
      <returns>A string equivalent of the criteria.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Not">
      <summary>
        <para>Returns an instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> represents.</para>
      </summary>
      <returns>An instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> that represents the criterion resulting from the logical inversion of the criterion the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> represents.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Returns the expression which groups two operands with logical OR.</para>
      </summary>
      <param name="left">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.</param>
      <param name="right">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands with logical OR.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Returns the expression which groups the specified operands with logical OR.</para>
      </summary>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical OR.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Or(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Returns the expression which groups the specified operands with logical OR.</para>
      </summary>
      <param name="operands">A list of operands to be grouped.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands with logical OR.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.</para>
      </summary>
      <param name="stringCriteria">A <see cref="T:System.String"/> value, that is the expression to convert.</param>
      <param name="criteriaParametersList">[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in criteria.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.Parse(System.String,System.Object[])">
      <summary>
        <para>Converts the specified string, specifying an expression, to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.</para>
      </summary>
      <param name="criteria">A <see cref="T:System.String"/> value, that is the expression to convert.</param>
      <param name="parameters">The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in criteria.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,DevExpress.Data.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.</para>
      </summary>
      <param name="criteriaList">A <see cref="T:System.String"/> value that represents the expressions to convert. The expressions are divided by a semicolon.</param>
      <param name="criteriaParametersList">[out] Receives the values that are substituted into the expression in place of question mark characters. These parameters can be omitted.</param>
      <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in criteriaList.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ParseList(System.String,System.Object[])">
      <summary>
        <para>Converts the specified string representation of expressions that are divided by a semicolon into their <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents.</para>
      </summary>
      <param name="criteriaList">A <see cref="T:System.String"/> value that represents the expressions to convert. The expressions are divided by a semicolon.</param>
      <param name="parameters">The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.</param>
      <returns>An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalents to the expressions contained in criteriaList.</returns>
    </member>
    <member name="E:DevExpress.Data.Filtering.CriteriaOperator.QueryCustomFunctions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregate)">
      <summary>
        <para>Registers a custom aggregate function to use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customAggregate">A custom aggregate function to register.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregates(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomAggregate})">
      <summary>
        <para>Registers custom aggregate functions to use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customAggregates">A collection of custom aggregate functions to register.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Registers a specified custom function to use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customFunction">An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object specifying a custom function to register.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomFunctionOperator})">
      <summary>
        <para>Registers specified custom functions to use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customFunctions">A collection of <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> objects specifying custom functions to register.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its equivalent string in VB style.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.</param>
      <returns>A string representation of the specified expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified expression into its equivalent string in VB style.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.</param>
      <param name="criteriaParametersList">[out] Receives the values that are marked by a question mark character in the result string.</param>
      <returns>A string representation of the specified expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its equivalent string in C# style.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.</param>
      <returns>A string representation of the specified expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToCStyleString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified expression into its equivalent string in C# style.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.</param>
      <param name="criteriaParametersList">[out] Receives the values that are marked by a question mark character in the result string.</param>
      <returns>A string representation of the specified expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString">
      <summary>
        <para>Converts the current expression into its VB equivalent string.</para>
      </summary>
      <returns>A string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its equivalent string in VB style.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.</param>
      <returns>A string representation of the specified expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.ToString(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified expression into its equivalent string in VB style.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression to convert.</param>
      <param name="criteriaParametersList">[out] Receives the values that are marked by question mark character in the result string.</param>
      <returns>A string representation of the specified expression.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.TryParse(System.String,System.Object[])">
      <summary>
        <para>Tries to convert the specified string representation of an expression to its <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent.</para>
      </summary>
      <param name="criteria">A <see cref="T:System.String"/> value that represents the expression to convert.</param>
      <param name="parameters">The values that are substituted into the expression in place of question mark characters. These parameters can be omitted.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> equivalent to the expression contained in criteria.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregate)">
      <summary>
        <para>Unregisters a specified custom aggregate function from use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customAggregate">A custom aggregate function to unregister.</param>
      <returns>true, if a custom aggregate function was unregistered; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomAggregate(System.String)">
      <summary>
        <para>Unregisters a custom aggregate function with a specified name from use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="aggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <returns>true, if a custom aggregate function was unregistered; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(DevExpress.Data.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Unregisters a specified custom function from use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customFunction">An <see cref="T:DevExpress.Data.Filtering.ICustomFunctionOperator"/> object instance specifying a custom function to unregister.</param>
      <returns>true if the customFunction has successfully been removed from a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperator.UnregisterCustomFunction(System.String)">
      <summary>
        <para>Unregisters a custom function with a specified name from use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="functionName">The name of a custom function to unregister.</param>
      <returns>true if a custom function whose name matches the functionName has successfully been removed from a collection returned by the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.GetCustomFunctions"/> function; otherwise, false.</returns>
    </member>
    <member name="E:DevExpress.Data.Filtering.CriteriaOperator.UserValueParse">
      <summary>
        <para>Occurs when restoring a serialized criteria operator that references a user object.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.Filtering.CriteriaOperator.UserValueToString">
      <summary>
        <para>Occurs when serializing a criteria operator that references a user object.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.CriteriaOperatorCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.#ctor(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para></para>
      </summary>
      <param name="collection"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> class with a specified initial capacity.</para>
      </summary>
      <param name="capacity">The number of elements that the new CriteriaOperatorCollection can initially store.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CriteriaOperatorCollection.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.CustomAggregateCollection">
      <summary>
        <para>Represents a collection to store a list of custom aggregate functions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.#ctor">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.Data.Filtering.CustomAggregateCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.Add(DevExpress.Data.Filtering.ICustomAggregate)">
      <summary>
        <para>Adds a specified custom aggregate function to the custom aggregate function collection.</para>
      </summary>
      <param name="customAggregate">A custom aggregate function to be added to the custom aggregate function collection.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.Add(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomAggregate})">
      <summary>
        <para>Adds specified custom aggregate functions to the custom aggregate function collection.</para>
      </summary>
      <param name="items">Custom aggregate function items to be added to the custom aggregate function collection.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.Clear">
      <summary>
        <para>Clears a custom aggregate function collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.Contains(DevExpress.Data.Filtering.ICustomAggregate)">
      <summary>
        <para>Finds out whether a custom aggregate function collection contains a specified item.</para>
      </summary>
      <param name="item">A custom aggregate function.</param>
      <returns>true, if the collection contains a specified custom aggregate function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.CopyTo(DevExpress.Data.Filtering.ICustomAggregate[],System.Int32)">
      <summary>
        <para>Copies an array of custom aggregate functions to a specified location in an array.</para>
      </summary>
      <param name="array">An array of custom aggregate functions.</param>
      <param name="arrayIndex">A specified location in an array.</param>
    </member>
    <member name="P:DevExpress.Data.Filtering.CustomAggregateCollection.Count">
      <summary>
        <para>Gets the number of custom aggregate functions a collection contains.</para>
      </summary>
      <value>A number of custom aggregate functions in a collection.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.GetCustomAggregate(System.String)">
      <summary>
        <para>Searches custom aggregate functions registered in an application via the <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregate)"/> and <see cref="M:DevExpress.Data.Filtering.CriteriaOperator.RegisterCustomAggregates(System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.ICustomAggregate})"/> method for a function with the specified name.</para>
      </summary>
      <param name="aggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <returns>A custom aggregate function.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.GetEnumerator">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.CustomAggregateCollection.IsReadOnly">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateCollection.Remove(DevExpress.Data.Filtering.ICustomAggregate)">
      <summary>
        <para>Removes a specified custom aggregate function from a custom aggregate function collection.</para>
      </summary>
      <param name="item">A custom aggregate function to be removed from the collection.</param>
      <returns>true, if a specified custom aggregate was successfully removed from the collection; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1">
      <summary>
        <para>Can be used as a value type context in <see cref="M:DevExpress.Data.Filtering.ICustomAggregate.CreateEvaluationContext"/>, <see cref="M:DevExpress.Data.Filtering.ICustomAggregate.Process(System.Object,System.Object[])"/>, and <see cref="M:DevExpress.Data.Filtering.ICustomAggregate.GetResult(System.Object)"/> methods.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1"/> class instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1.ProcessValue(System.Func{`0,`0})">
      <summary>
        <para>Procecces the <see cref="P:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1.Value"/> as directed in the parameter.</para>
      </summary>
      <param name="processFunction">A delegate that processes the <see cref="P:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1.Value"/>.</param>
      <returns>A <see cref="P:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1.Value"/> that is the result of the processFunction.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1.Value">
      <summary>
        <para>Gets of sets the value type for <see cref="T:DevExpress.Data.Filtering.CustomAggregateEvaluationContext`1"/>.</para>
      </summary>
      <value>The value stored in the context.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.EnumProcessingHelper">
      <summary>
        <para>Provides helper methods used to register enumeration types whose values can be serialized in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnum(System.Type)">
      <summary>
        <para>Enables serialization of the specified enumeration type&#39;s values in Criteria Language expressions.</para>
      </summary>
      <param name="enumType">A <see cref="T:System.Type"/> object specifying the type of enumeration to be registered.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnum(System.Type,System.String)">
      <summary>
        <para>Enables serialization of the specified enumeration type values in Criteria Language expressions.</para>
      </summary>
      <param name="enumType">A <see cref="T:System.Type"/> object specifying the type of enumeration to be registered.</param>
      <param name="toStringName">A string that specifies the enumeration name to be used in criteria instead of FullName.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnum``1">
      <summary>
        <para>Enables serialization of the specified enumeration type&#39;s values in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums">
      <summary>
        <para>Enables serializing values of enumerations from all assembies that are loaded to the current application domain in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly)">
      <summary>
        <para>Enables serializing values of all enumerations from the specified assembly in Criteria Language expressions.</para>
      </summary>
      <param name="assembly">A <see cref="T:System.Reflection.Assembly"/> object that specifies the assembly containing enumerations to be registered.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly,System.Boolean)">
      <summary>
        <para>Enables serializing values of all enumerations from the specified assembly in Criteria Language expressions.</para>
      </summary>
      <param name="assembly">A <see cref="T:System.Reflection.Assembly"/> object that specifies the assembly containing enumerations to be registered.</param>
      <param name="suppressReferencesProcessing">true, if enumerations from referenced assemblies are ignored; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly[])">
      <summary>
        <para>Enables serializing values of all enumerations from the specified assemblies in Criteria Language expressions.</para>
      </summary>
      <param name="assemblies">A <see cref="T:System.Reflection.Assembly"/>[] array that specifies assemblies containing enumerations to be registered.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly[],System.Boolean)">
      <summary>
        <para>Enables serializing values of all enumerations from the specified assemblies in Criteria Language expressions.</para>
      </summary>
      <param name="assemblies">A <see cref="T:System.Reflection.Assembly"/>[] array that specifies assemblies containing enumerations to be registered.</param>
      <param name="suppressReferencesProcessing">true, if enumerations from referenced assemblies are ignored; otherwise, false.</param>
    </member>
    <member name="N:DevExpress.Data.Filtering.Exceptions">
      <summary>
        <para>Contains classes that describe exceptions which may occur when filtering data.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.Exceptions.CriteriaParserException">
      <summary>
        <para>An exception that is thrown when a string that represents criteria cannot be parsed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.Exceptions.CriteriaParserException"/> class.</para>
      </summary>
      <param name="explanation">A string that specifies the error description.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.Exceptions.CriteriaParserException"/> class.</para>
      </summary>
      <param name="explanation">A string that specifies the error description.</param>
      <param name="line">A value of the CriteriaLexer.Line property that specifies the line where an exception occured. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Line"/> property.</param>
      <param name="column">A value of the CriteriaLexer.Col property that specifies the column where an exception occured. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Column"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Column">
      <summary>
        <para>The value of the CriteriaLexer.Col property that specifies the column where an exception occured.</para>
      </summary>
      <value>The value of the CriteriaLexer.Col property that specifies the column where an exception occured.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.Exceptions.CriteriaParserException.Line">
      <summary>
        <para>A value of the CriteriaLexer.Line property that specifies the line where an exception occured.</para>
      </summary>
      <value>A value of the CriteriaLexer.Line property that specifies the line where an exception occured.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException">
      <summary>
        <para>An exception that is thrown when a specific property that is used in a specific expression cannot be resolved.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.Exceptions.InvalidPropertyPathException"/> class.</para>
      </summary>
      <param name="messageText">A string that specifies the error description.</param>
    </member>
    <member name="T:DevExpress.Data.Filtering.FilterCondition">
      <summary>
        <para>Contains enumeration values that specify comparison operation types used to create filter conditions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FilterCondition.Contains">
      <summary>
        <para>Specifies the Contains comparison operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FilterCondition.Default">
      <summary>
        <para>Specifies the default comparison operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FilterCondition.Equals">
      <summary>
        <para>Specifies the Equals comparison operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FilterCondition.Like">
      <summary>
        <para>Specifies the Like comparison operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FilterCondition.StartsWith">
      <summary>
        <para>Specifies the StartsWith comparison operation.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.FindPanelParserKind">
      <summary>
        <para>Contains values that specify how a control&#39;s Find Panel combines entered words to create a search query.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FindPanelParserKind.And">
      <summary>
        <para>Words are combined by the &#39;AND&#39; operator.The operator changes to &#39;OR&#39; when you precede a word with the &#39;?&#39; character. The operator changes to &#39;NOT&#39;/&#39;AND NOT&#39; when you precede a word with the &#39;-&#39; sign.The &#39;?administrator ?Maria Sweden -Owner&#39; is treated as &#39;Sweden AND (administrator OR Maria) AND NOT Owner&#39;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FindPanelParserKind.Custom">
      <summary>
        <para>Allows you to implement a custom parser by handling a control&#39;s ParseFindPanelText event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FindPanelParserKind.Default">
      <summary>
        <para>When the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.FindPanelParserKind"/> setting equals Default, this value is interpreted as And. If you set the <see cref="F:DevExpress.XtraEditors.WindowsFormsSettings.DefaultSettingsCompatibilityMode"/> property to v18_2 or an earlier version, the Default value is interpreted as Mixed.When a control&#39;s ParserKind property is set to Default, the <see cref="P:DevExpress.XtraEditors.WindowsFormsSettings.FindPanelParserKind"/> setting specifies the actual behavior for this control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FindPanelParserKind.Exact">
      <summary>
        <para>The exact match. If the entered string contains the space characters, the words are not treated separately.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FindPanelParserKind.Mixed">
      <summary>
        <para>Words are combined by the &#39;OR&#39; operator. The operator changes to &#39;AND&#39; if you specify a column name before a search word. The &#39;administrator owner Country:Sweden&#39; string is treated as &#39;(administrator OR owner) AND Sweden(in the Country column)&#39;</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FindPanelParserKind.Or">
      <summary>
        <para>Words are combined by the &#39;OR&#39; operator. The operator changes to &#39;AND&#39; when you precede a word with the &#39;+&#39; sign. The &#39;administrator Maria +Sweden&#39; string is treated as the &#39;Sweden AND (administrator OR Maria)&#39; query.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.FunctionCategory">
      <summary>
        <para>Lists the values that specify categories for functions available in Expression Editors.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionCategory.All">
      <summary>
        <para>Identifies functions that fall into any of the other categories.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionCategory.DateTime">
      <summary>
        <para>Identifies functions that work with date-time values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionCategory.Logical">
      <summary>
        <para>Identifies functions that perform logical operations.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionCategory.Math">
      <summary>
        <para>Identifies functions that perform math operations.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionCategory.Text">
      <summary>
        <para>Identifies functions that work with strings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.FunctionOperator">
      <summary>
        <para>A function operator based on a <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(DevExpress.Data.Filtering.FunctionOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> class with the default settings.</para>
      </summary>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> value that specifies the type of function. This value is used to initialize the <see cref="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType"/> property.</param>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(DevExpress.Data.Filtering.FunctionOperatorType,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> class with the specified parameters.</para>
      </summary>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.FunctionOperatorType"/> enumeration value that specifies the type of function. This value is used to initialize the <see cref="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType"/> property.</param>
      <param name="operands">An object that implements the IEnumerable interface and represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects which specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> class.</para>
      </summary>
      <param name="customFunctionName"></param>
      <param name="operands"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.#ctor(System.String,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> class with the specified settings.</para>
      </summary>
      <param name="customFunctionName">A <see cref="T:System.String"/> value, specifying the name of the custom function.</param>
      <param name="operands">A collection of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.FunctionOperator.GuessIsLogicalCustomFunction(DevExpress.Data.Filtering.FunctionOperator)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="theOperator"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.FunctionOperator.Operands">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/>.</value>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperator.OperatorType">
      <summary>
        <para>Represents the function type. The operands are specified by the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property and these can be initialized in the constructor. Each operand represents an instance of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class descendant, the number of operands depends on the function type.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.Filtering.FunctionOperatorType">
      <summary>
        <para>Enumerates function types that can be used by the <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> operators.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Abs">
      <summary>
        <para>Returns the absolute value of a specified numeric operand.If a specified operand is not numeric, the System.NotSupportedException is thrown.To create the Abs operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Abs(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Acos">
      <summary>
        <para>Returns the angle (in radians) whose cosine is a specified numeric operand.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Acos operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Acos(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddDays">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of days from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in days) from the original date. This number can be negative or positive. Its decimal part is part of a day.To create the AddDays operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddDays(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddHours">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of hours from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in hours) from the original date. This number can be negative or positive. Its decimal part is part of an hour.To create the AddHours operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddHours(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMilliSeconds">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of milliseconds from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in milliseconds) from the original date. This number can be negative or positive. Its decimal part is part of a millisecond.To create the AddMilliSeconds operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddMilliseconds(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMinutes">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of minutes from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in minutes) from the original date. This number can be negative or positive. Its decimal part is part of a minute.To create the AddMinutes operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddMinutes(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddMonths">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of months from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in months) from the original date. This number can be negative or positive.To create the AddMonths operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddMonths(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddSeconds">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of seconds from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in seconds) from the original date. This number can be negative or positive. Its decimal part is part of a second.To create the AddSeconds operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddSeconds(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddTicks">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of ticks from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in 100-nanosecond ticks) from the original date. This number can be negative or positive.To create the AddTicks operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddTicks(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddTimeSpan">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified time period from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 &#0045; a <see cref="T:System.TimeSpan"/> object representing the time period from the original date.To create the AddTimeSpan operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddTimeSpan(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.AddYears">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the date that is a specified number of years from a specific date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the original date;2 - the time period (in years) from the original date. This number can be negative or positive.To create the AddYears operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;AddYears(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Ascii">
      <summary>
        <para>Returns the ASCII code of the first character in a specified string operand.If a specified operand represents an empty string, null is returned.To create the Ascii operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Ascii(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Asin">
      <summary>
        <para>Returns the angle (in radians) whose sine is a specified numeric operand.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Asin operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Asin(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Atn">
      <summary>
        <para>Returns the angle (in radians) whose tangent is a specified numeric operand.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Atn operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Atn(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Atn2">
      <summary>
        <para>Returns the angle (in radians) whose tangent is the quotient of two specified numeric operands.The operator requires two operands representing the Cartesian coordinates (x, y) of a point:1 &#0045; the y coordinate;2 &#0045; the x coordinate.If specified operands cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Atn2 operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Atn2(y, x)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.BigMul">
      <summary>
        <para>Calculates the product of two specified numeric operands.The operator requires two operands representing the integer values to be multiplied.If the specified operands do not represent integer values, the System.NotSupportedException is thrown.To create the BigMul operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;BigMul(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Ceiling">
      <summary>
        <para>Returns the smallest integer greater than or equal to a specified numeric operand. The rounding provided by this operator is called rounding toward positive infinity.If a specified operand is not numeric, the System.NotSupportedException is thrown.To create the Ceiling operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Ceiling(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Char">
      <summary>
        <para>Converts a specified numeric operand to a Unicode character.If a specified operand cannot be converted to a decimal or integer number, the System.NotSupportedException is thrown.To create the Char operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Char(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.CharIndex">
      <summary>
        <para>Returns the index of the first occurrence of a specified substring in a specified string.The operands should be defined as follows:1 - a substring to search for;2 - a string to be searched in;3 - (optional) an integer that specifies the zero-based index at which the search starts. If this operand is not specified, the search begins from the start of the string;4 - (optional) an integer that specifies the number of characters to examine, starting from the specified position. If this operand is not specified, the search continues until the end of the string.This function performs a word (case-sensitive and culture-sensitive) search using the current culture. If a specified substring is found, the function returns its index. Otherwise, -1 is returned.To create the CharIndex operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;CharIndex(Field1, Field2)&quot;), CriteriaOperator.Parse(&quot;CharIndex(Field1, Field2, Field3)&quot;), or CriteriaOperator.Parse(&quot;CharIndex(Field1, Field2, Field3, Field4)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Concat">
      <summary>
        <para>Concatenates one or more strings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Contains">
      <summary>
        <para>Returns True if one string occurs within another string; otherwise, False is returned.This function requires two string operands:1 - a string to be searched;2 - a substring to search.To create the Contains operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Contains(String, SubString)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Cos">
      <summary>
        <para>Returns the cosine of a specified numeric operand representing an angle, measured in radians.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Cos operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Cos(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Cosh">
      <summary>
        <para>Returns the hyperbolic cosine of a specified numeric operand representing an angle, measured in radians.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Cosh operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Cosh(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Custom">
      <summary>
        <para>Identifies a custom operation. This operation is executed on the client side if its operands represent constants. A custom operation is executed on the server side only if its operands cannot be evaluated locally. To learn how to implement custom operators, refer to the How to: Implement a Custom Criteria Language Function Operator topic.The eXpress Persistent Objects framework provides two custom function operators &#0045; <see cref="T:DevExpress.Xpo.Metadata.IsExactTypeFunction"/> and <see cref="T:DevExpress.Xpo.Metadata.IsInstanceOfTypeFunction"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.CustomNonDeterministic">
      <summary>
        <para>Identifies a custom nondeterministic operation.Unlike a standard custom operation, a custom nondeterministic operation is always executed on the server side, regardless of whether its operands are constants.Refer to the How to: Implement a Custom Criteria Language Function Operator topic, to learn how to implement custom operators.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffDay">
      <summary>
        <para>Returns the count of day boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffDay operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffDay(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffHour">
      <summary>
        <para>Returns the count of hour boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffHour operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffHour(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMilliSecond">
      <summary>
        <para>Returns the count of millisecond boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffMilliSecond operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffMilliSecond(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMinute">
      <summary>
        <para>Returns the count of minute boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffMinute operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffMinute(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffMonth">
      <summary>
        <para>Returns the count of month boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffMonth operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffMonth(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffSecond">
      <summary>
        <para>Returns the count of second boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffSecond operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffSecond(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffTick">
      <summary>
        <para>Returns the count of tick boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffTick operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffTick(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.DateDiffYear">
      <summary>
        <para>Returns the count of year boundaries crossed between the specified starting date and ending date.The operands should be defined as follows:1 &#0045; a <see cref="T:System.DateTime"/> object representing the starting date;2 &#0045; a <see cref="T:System.DateTime"/> object representing the ending date.To create the DateDiffYear operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;DateDiffYear(StartDate, EndDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.EndsWith">
      <summary>
        <para>Returns True if the end of one string matches another string; otherwise, False is returned.This function requires two string operands:1 - a string to be searched;2 - a substring to search at the end of the first string.To create the EndsWith operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;EndsWith(String, SubString)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp">
      <summary>
        <para>Returns the number e raised to the power specified by a numeric operand.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.Exp reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Power"/> operand to calculate powers of other bases.To create the Exp operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Exp(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Floor">
      <summary>
        <para>Returns the largest integer less than or equal to a specified numeric operand. The rounding provided by this operator is called rounding toward negative infinity.If a specified operand is not numeric, the System.NotSupportedException is thrown.To create the Floor operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Floor(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDate">
      <summary>
        <para>Returns the date part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value represents a <see cref="T:System.DateTime"/> object with the same date part, and the time part set to 00:00:00.To create the GetDate operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetDate(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDay">
      <summary>
        <para>Gets the day part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 1 and 31.To create the GetDay operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetDay(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDayOfWeek">
      <summary>
        <para>Gets a specified date&#39;s day of the week.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value represents a <see cref="T:System.Int32"/> equivalent of a <see cref="T:System.DayOfWeek"/> enumerated constant representing a day of the week.To create the GetDayOfWeek operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetDayOfWeek(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetDayOfYear">
      <summary>
        <para>Gets a specified date&#39;s day of the year.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 1 and 366.To create the GetDayOfYear operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetDayOfYear(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetHour">
      <summary>
        <para>Gets the hour part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 0 and 23.To create the GetHour operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetHour(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMilliSecond">
      <summary>
        <para>Gets the milliseconds part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 0 and 999.To create the GetMilliSecond operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetMilliSecond(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMinute">
      <summary>
        <para>Gets the minute part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 0 and 59.To create the GetMinute operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetMinute(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetMonth">
      <summary>
        <para>Gets the month part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 1 and 12.To create the GetMonth operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetMonth(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetSecond">
      <summary>
        <para>Gets the seconds part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 0 and 59.To create the GetSecond operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetSecond(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetTimeOfDay">
      <summary>
        <para>Gets the time part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value represents a <see cref="T:System.Int64"/> object that is equal to the number of 100&#0045;nanosecond ticks that have elapsed since midnight.To create the GetTimeOfDay operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;GetTimeOfDay(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.GetYear">
      <summary>
        <para>Gets the year part of a specified date.This operator requires an operand of the <see cref="T:System.DateTime"/> type.The return value ranges between 1 and 9999.To create the GetYear operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;GetYear(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Iif">
      <summary>
        <para>Returns one of several specified values depending upon the values of logical expressions.
The function can take 2N+1 arguments (N &#0045; the number of specified logical expressions):Examples:Iif(Name = &#39;Bob&#39;, 1, 0)Iif(Name = &#39;Bob&#39;, 1, Name = &#39;Dan&#39;, 2, Name = &#39;Sam&#39;, 3, 0)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Insert">
      <summary>
        <para>Inserts a specified string at a certain position within another.The operands should be defined as follows:1 - a string in which the insertion is to be performed;2 - an integer that specifies the zero-based index position of the insertion;3 - a string to insert.To create the Insert operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Insert(Field1, Field2, Field3)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsApril">
      <summary>
        <para>Returns True if the specified date falls within April.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsAugust">
      <summary>
        <para>Returns True if the specified date falls within August.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsDecember">
      <summary>
        <para>Returns True if the specified date falls within December.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsFebruary">
      <summary>
        <para>Returns True if the specified date falls within February.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsJanuary">
      <summary>
        <para>Returns True if the specified date falls within January.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsJuly">
      <summary>
        <para>Returns True if the specified date falls within July.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsJune">
      <summary>
        <para>Returns True if the specified date falls within June.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsLastMonth">
      <summary>
        <para>Returns True if the specified date falls within the previous month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsLastYear">
      <summary>
        <para>Returns True if the specified date falls within the previous year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsMarch">
      <summary>
        <para>Returns True if the specified date falls within March.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsMay">
      <summary>
        <para>Returns True if the specified date falls within May.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNextMonth">
      <summary>
        <para>Returns True if the specified date falls within the next month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNextYear">
      <summary>
        <para>Returns True if the specified date falls within the next year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNovember">
      <summary>
        <para>Returns True if the specified date falls within November.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNull">
      <summary>
        <para>Compares the first operand with the NULL value.This function requires one or two operands of the  <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class. The value returned depends upon the number of arguments.If a single operand is passed, the function returns true if the operand is null, otherwise, false is returned.If two operands are passed, the function returns the second operand if the first operand is null, otherwise, the first operand is returned.To create the IsNull operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;IsNull(Field1)&quot;) or CriteriaOperator.Parse(&quot;IsNull(Field1AndTrueResult, FalseResult)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsNullOrEmpty">
      <summary>
        <para>Indicates whether a specified operand is a null reference or an empty string.The function returns true if a specified operand is null or an empty string, otherwise, false is returned.To create the IsNullOrEmpty operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;IsNullOrEmpty(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOctober">
      <summary>
        <para>Returns True if the specified date falls within October.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalBeyondThisYear">
      <summary>
        <para>The Boolean Is Beyond This Year operator for date/time values. Requires one argument.The operator is defined as follows: date &gt;= First Day of Next Year</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisMonth">
      <summary>
        <para>The Boolean Is Earlier This Month operator for date/time values. Requires one argument.The operator is defined as follows: First Day of This Month &lt;= date &lt; First Day of Last Week</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisWeek">
      <summary>
        <para>The Boolean Is Earlier This Week operator for date/time values. Requires one argument.The operator is defined as follows: First Day of This Week &lt;= date &lt; Yesterday</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisYear">
      <summary>
        <para>The Boolean Is Earlier This Year operator for date/time values. Requires one argument.The operator is defined as follows: First Day of This Year &lt;= date &lt; First Day of This Month</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLastWeek">
      <summary>
        <para>The Boolean Is Last Week operator for date/time values. Requires one argument.The operator is defined as follows: First Day of Last Week &lt;= date &lt; First Day of This Week</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisMonth">
      <summary>
        <para>The Boolean Is Later This Month operator for date/time values. Requires one argument.The operator is defined as follows: 
Last Day of Next Week &lt; date &lt; First Day of Next Month</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisWeek">
      <summary>
        <para>The Boolean Is Later This Week operator for date/time values. Requires one argument.The operator is defined as follows: 
Day After Tomorrow &lt;= date &lt; First Day of Next Week</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisYear">
      <summary>
        <para>The Boolean Is Later This Year operator for date/time values. Requires one argument.The operator is defined as follows: First Day of Next Month &lt;= date &lt; First Day of Next Year</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalNextWeek">
      <summary>
        <para>The Boolean Is Next Week operator for date/time values. Requires one argument.The operator is defined as follows: First Day of Next Week &lt;= date &lt;= Last Day of Next Week</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalPriorThisYear">
      <summary>
        <para>The Boolean Is Prior This Year operator for date/time values. Requires one argument.The operator is defined as follows: date &lt; First Day of This Year</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalToday">
      <summary>
        <para>The Boolean Is Today operator for date/time values. Requires one argument.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalTomorrow">
      <summary>
        <para>The Boolean Is Tomorrow operator for date/time values. Requires one argument.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsOutlookIntervalYesterday">
      <summary>
        <para>The Boolean Is Yesterday operator for date/time values. Requires one argument.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsSameDay">
      <summary>
        <para>Returns True if the specified date/time values fall within the same day.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsSeptember">
      <summary>
        <para>Returns True if the specified date falls within September.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsThisMonth">
      <summary>
        <para>Returns True if the specified date falls within the current month.To create the IsThisMonth operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;IsThisMonth(StartDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsThisWeek">
      <summary>
        <para>Returns True if the specified date falls within the current week.To create the IsThisWeek operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;IsThisWeek(StartDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsThisYear">
      <summary>
        <para>Returns True if the specified date falls within the current year.To create the IsThisYear operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;IsThisYear(StartDate)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.IsYearToDate">
      <summary>
        <para>Returns True if the specified date falls within the year-to-date period. This period starts from the first day of the current year and continues up to the current date (including this current date).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Len">
      <summary>
        <para>Returns the length of the string specified by an operand.The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.To create the Len operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Len(Field1)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeDayAfterTomorrow">
      <summary>
        <para>Returns the DateTime value corresponding to the day after Tomorrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastMonth">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the previous month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastWeek">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the previous week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeLastYear">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the previous year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextMonth">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of next month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextWeek">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the following week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNextYear">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the following year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeNow">
      <summary>
        <para>Returns the DateTime value corresponding to the current moment in time.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisMonth">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the current month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisWeek">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the current week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeThisYear">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the current year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeToday">
      <summary>
        <para>Returns the DateTime value corresponding to Today.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTomorrow">
      <summary>
        <para>Returns the DateTime value corresponding to Tomorrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoMonthsAway">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the month after next.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoWeeksAway">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the week after next.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeTwoYearsAway">
      <summary>
        <para>Returns the DateTime value corresponding to the first day of the year after next.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeYearBeforeToday">
      <summary>
        <para>Returns the DateTime value corresponding to the day one year ago.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.LocalDateTimeYesterday">
      <summary>
        <para>Returns the DateTime value corresponding to Yesterday.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Log">
      <summary>
        <para>Returns the logarithm of a specified numeric operand. The return value depends upon the number of operands.If one operand is passed, the natural (base e) logarithm of a specified operand is returned.If two operands are passed, the logarithm of a specified operand in a specified base is returned. The operands should be defined as follows:1 - a number whose logarithm is to be calculated;2 - the base of the logarithm.If specified operands cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.Log reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp"/>. To calculate the base 10 logarithm, use <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10"/>.To create the Log operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Log(Field1)&quot;) or CriteriaOperator.Parse(&quot;Log(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10">
      <summary>
        <para>Returns the base 10 logarithm of a specified numeric operand.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.Log10 reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Power"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/> operand to calculate the logarithm of other bases.To create the Log10 operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Log10(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Lower">
      <summary>
        <para>Converts all characters in a string operand to lowercase.The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.To create the Lower operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Lower(Field1)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Max">
      <summary>
        <para>Returns the larger of two numeric values. The operands should be defined as follows:1 - a numeric value A;2 - a numeric value B;To create the Max operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Max(ValueA, ValueB)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Min">
      <summary>
        <para>Returns the smaller of two numeric values.The operands should be defined as follows:1 - a numeric value A;2 - a numeric value B;To create the Min operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Min(ValueA, ValueB)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.None">
      <summary>
        <para>The function type is not specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Now">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the system&#39;s current date and time.To create the Now operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Now()&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.PadLeft">
      <summary>
        <para>Pads a string with spaces or a specified Unicode character on the left for a specified total length.The operands should be defined as follows:1 - a string to be padded;2 - the total number of characters in the resulting string, including padding characters;3 - (optional) a Unicode padding character. If not specified, the space character is used for padding. If a string is passed as this operand, its first character is used for padding.To create the PadLeft operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;PadLeft(Field1, Field2)&quot;) or CriteriaOperator.Parse(&quot;PadLeft(Field1, Field2, Field3)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.PadRight">
      <summary>
        <para>Pads a string with spaces or a specified Unicode character on the right for a specified total length.The operands should be defined as follows:1 - a string to be padded;2 - the total number of characters in the resulting string, including padding characters;3 - (optional) a Unicode padding character. If not specified, the space character is used for padding. If a string is passed as this operand, its first character is used for padding.To create the PadRight operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;PadRight(Field1, Field2)&quot;) or CriteriaOperator.Parse(&quot;PadRight(Field1, Field2, Field3)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Power">
      <summary>
        <para>Returns a specified numeric operand raised to a specific power.The Power operator requires two operands:1 - a number to be raised to a power;2 - a power.If specified operands cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.Power reverses <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log"/> or <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Log10"/>. Use the <see cref="F:DevExpress.Data.Filtering.FunctionOperatorType.Exp"/> operand to calculate powers of the number e.To create the Power operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Power(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Remove">
      <summary>
        <para>Removes all, or a certain number of characters from a specified string, starting at a specified position.The operands should be defined as follows:1 - a string to be shrunk;2 - an integer that specifies the zero-based index at which character removal starts;3 - (optional) an integer that specifies the number of characters to remove, starting at the specified position. If this operand is not specified, all characters between the starting position and the end of the string are removed.To create the Remove operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Remove(Field1, Field2)&quot;) or CriteriaOperator.Parse(&quot;Remove(Field1, Field2, Field3)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Replace">
      <summary>
        <para>Replaces all occurrences of a certain string in a specified string, with another.The operands should be defined as follows:1 - a string in which replacements are to be performed;2 - a string to be replaced;3 - a string to replace all occurrences found.To create the Replace operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Replace(Field1, Field2, Field3)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Reverse">
      <summary>
        <para>Reverses the order of characters within a specified string.To create the Reverse operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Reverse(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Rnd">
      <summary>
        <para>Returns a random number greater than or equal to 0.0, and less than 1.0.To create the Rnd operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Rnd()&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Round">
      <summary>
        <para>Rounds a specified numeric operand to the nearest integer or to a specified number of decimal places. The rounding provided by this operator is called rounding to nearest or banker&#39;s rounding.The operands should be defined as follows:1 - a value to round;2 &#0045; (optional) a value specifying the number of decimal places to round to. 0 indicates that the first operand is rounded to the nearest integer.To create the Round operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Round(Field1)&quot;) or CriteriaOperator.Parse(&quot;Round(Field1, Field2)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sign">
      <summary>
        <para>Returns a value indicating the sign of a number represented by a specified operand. The function returns one of the following values:1, for positive numbers;&#0045;1, for negative numbers;0, if the number is equal to zero.If a specified operand is not numeric, System.NotSupportedException is thrown.To create the Sign operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Sign(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sin">
      <summary>
        <para>Returns the sine of a specified numeric operand representing an angle, measured in radians.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Sin operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Sin(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sinh">
      <summary>
        <para>Returns the hyperbolic sine of a specified numeric operand representing an angle, measured in radians.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Sinh operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Sinh(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Sqr">
      <summary>
        <para>Returns the square root of a specified numeric operand.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Sqr operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Sqr(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.StartsWith">
      <summary>
        <para>Returns True if the beginning of one string matches another string; otherwise, False is returned.This function requires two string operands:1 - a string to be searched;2 - a substring to search at the beginning of the first string.To create the StartsWith operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;StartsWith(String, SubString)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Substring">
      <summary>
        <para>Returns a substring extracted from the specified string. This function requires two or three operands of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class.If two operands are passed the substring will be extracted from the beginning of the original string. The operands should be defined as follows:1 &#0045; an original string;2 &#0045; an integer that specifies the zero&#0045;based index at which the substring to return begins.If three operands are passed a substring can be subtracted starting from any position in the original string. The operands should be defined as follows:1 &#0045; an original string;2 &#0045; an integer that specifies the zero&#0045;based index at which the substring to return begins;3 &#0045; an integer that specifies the length of the substring.To create a Substring operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Substring(Field1, 1, 3)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Tan">
      <summary>
        <para>Returns the tangent of a specified numeric operand representing an angle, measured in radians.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Tan operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Tan(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Tanh">
      <summary>
        <para>Returns the hyperbolic tangent of a specified numeric operand representing an angle, measured in radians.If a specified operand cannot be converted to <see cref="T:System.Double"/>, the System.NotSupportedException is thrown.To create the Tanh operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Tanh(Field1)&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Today">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the system&#39;s current date. The object&#39;s time part is set to 00:00:00.To create the Today operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Today()&quot;).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToDecimal">
      <summary>
        <para>Converts a numeric operand to a fixed-point (exact-value) representation.To create the ToDecimal operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;ToDecimal(Field2)&quot;).Note that the resulting value may vary, based on the database system used as the backend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToDouble">
      <summary>
        <para>Converts a numeric operand to a double-precision floating-point (approximate-value) representation.To create the ToDouble operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;ToDouble(Field2)&quot;).Note that the resulting value may vary, based on the database system used as the backend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToFloat">
      <summary>
        <para>Converts a numeric operand to a floating-point (approximate-value) representation.To create the ToFloat operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;ToFloat(Field2)&quot;).Note that the resulting value may vary, based on the database system used as the backend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToInt">
      <summary>
        <para>Converts a numeric operand to an integer representation.To create the ToInt operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;ToInt(Field2)&quot;).Note that the resulting value may vary, based on the database system used as the backend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToLong">
      <summary>
        <para>Converts a numeric operand to a long integer representation.To create the ToLong operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;ToLong(Field2)&quot;).Note that the resulting value may vary, based on the database system used as the backend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.ToStr">
      <summary>
        <para>Returns a string representation of a specified numeric operand.If a specified operand is not numeric, the System.NotSupportedException is thrown.To create the ToStr operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;ToStr(Field1)&quot;).Note that the resulting string may vary, based on the format settings of the database system used as the backend.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Trim">
      <summary>
        <para>Returns a string containing a copy of a specified string with no leading nor trailing spaces. This function requires a single operand of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> class that refers to the original string.To create the Trim operator using the  method use the following syntax: CriteriaOperator.Parse(&quot;Trim(Field2)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.Upper">
      <summary>
        <para>Converts all characters in a string operand to uppercase.The operand should be an object of the <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> type.To create the Upper operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;Upper(Field1)&quot;);</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.FunctionOperatorType.UtcNow">
      <summary>
        <para>Returns a <see cref="T:System.DateTime"/> object representing the current Coordinated Universal Time (UTC) date and time.To create the UtcNow operator using the  method, use the following syntax: CriteriaOperator.Parse(&quot;UtcNow()&quot;).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.GroupOperator">
      <summary>
        <para>A logical expression which groups two or more operands with a logical AND or OR.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with the specified operands.</para>
      </summary>
      <param name="operands">An array of the <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> objects that represent operands. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.GroupOperator.Operands"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> class with the specified settings.</para>
      </summary>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.GroupOperator.OperatorType"/> property.</param>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.GroupOperator.Operands"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.#ctor(DevExpress.Data.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> with the specified parameters.</para>
      </summary>
      <param name="type">A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.GroupOperator.OperatorType"/> property.</param>
      <param name="operands">An object that implements the IEnumerable interface and represents a collection of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects which specify the operands required by the selected function. This value is used to initialize the <see cref="P:DevExpress.Data.Filtering.FunctionOperator.Operands"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Returns the expression which groups two operands with logical AND or OR.</para>
      </summary>
      <param name="opType">A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.</param>
      <param name="left">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the first operand.</param>
      <param name="right">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the second operand.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups two operands.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Returns the expression which groups the specified operands with logical AND or OR.</para>
      </summary>
      <param name="opType">A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.</param>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent operands.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Combine(DevExpress.Data.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Returns the expression which groups the specified operands with logical AND or OR.</para>
      </summary>
      <param name="opType">A <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration value that specifies the type of the group operator.</param>
      <param name="operands">A list of operands to be grouped.</param>
      <returns>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object representing the expression which groups the specified operands.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.GroupOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.GroupOperator.Operands">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current <see cref="T:DevExpress.Data.Filtering.GroupOperator"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current <see cref="T:DevExpress.Data.Filtering.GroupOperator"/>.</value>
    </member>
    <member name="F:DevExpress.Data.Filtering.GroupOperator.OperatorType">
      <summary>
        <para>Specifies the type of the group operator. The available types are enumerated in the <see cref="T:DevExpress.Data.Filtering.GroupOperatorType"/> enumeration.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.Filtering.GroupOperatorType">
      <summary>
        <para>Enumerates group operator types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.GroupOperatorType.And">
      <summary>
        <para>Groups operands with logical AND.To create the logical AND operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &gt; 100 AND Field2 &lt; 150&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.GroupOperatorType.Or">
      <summary>
        <para>Groups operands with logical OR.To create the logical OR operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 &gt; 100 OR Field2 &lt; 150&quot;)</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.Filtering.Helpers">
      <summary>
        <para>Contains utility classes that relate to the filtering functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.Helpers.ClauseType">
      <summary>
        <para>Lists the values that define the types of filter criteria used in the Automatic Filter Row.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.AnyOf">
      <summary>
        <para>Specifies the Any Of filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.BeginsWith">
      <summary>
        <para>Specifies the Begins With filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Between">
      <summary>
        <para>Specifies the Between filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Contains">
      <summary>
        <para>Specifies the Contains filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.DoesNotContain">
      <summary>
        <para>Specifies the Does Not Contain filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.DoesNotEqual">
      <summary>
        <para>Specifies the Does Not Equal filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.EndsWith">
      <summary>
        <para>Specifies the Ends With filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Equals">
      <summary>
        <para>Specifies the Equals filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Function">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Greater">
      <summary>
        <para>Specifies the Greater filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.GreaterOrEqual">
      <summary>
        <para>Specifies the Greater Or Equal filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsBeyondThisYear">
      <summary>
        <para>Specifies the Is Beyond This Year filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsEarlierThisMonth">
      <summary>
        <para>Specifies the Is Earlier This Month filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsEarlierThisWeek">
      <summary>
        <para>Specifies the Is Earlier This Week filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsEarlierThisYear">
      <summary>
        <para>Specifies the Is Earlier This Year filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLastWeek">
      <summary>
        <para>Specifies the Is Last Week filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLaterThisMonth">
      <summary>
        <para>Specifies the Is Later This Month filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLaterThisWeek">
      <summary>
        <para>Specifies the Is Later This Week filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsLaterThisYear">
      <summary>
        <para>Specifies the Is Later This Year filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNextWeek">
      <summary>
        <para>Specifies the Is Next Week filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNotNull">
      <summary>
        <para>Specifies the Is Not Null filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNotNullOrEmpty">
      <summary>
        <para>Specifies the Is Not Null Or Empty filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNull">
      <summary>
        <para>Specifies the Is Null filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsNullOrEmpty">
      <summary>
        <para>Specifies the Is Null Or Empty filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsPriorThisYear">
      <summary>
        <para>Specifies the Is Prior This Year filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsToday">
      <summary>
        <para>Specifies the Is Today filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsTomorrow">
      <summary>
        <para>Specifies the Is Tomorrow filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.IsYesterday">
      <summary>
        <para>Specifies the Is Yesterday filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Less">
      <summary>
        <para>Specifies the Less filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.LessOrEqual">
      <summary>
        <para>Specifies the Less Or Equal filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.Like">
      <summary>
        <para>Specifies the Like filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.NoneOf">
      <summary>
        <para>Specifies the None Of filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.NotBetween">
      <summary>
        <para>Specifies the Not Between filter criteria.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.Helpers.ClauseType.NotLike">
      <summary>
        <para>Specifies the Not Like filter criteria.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError">
      <summary>
        <para>Provides information about an error that occurred during criteria validation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError"/> class with the specified error text.</para>
      </summary>
      <param name="text">A <see cref="T:System.String"/> value, specifying the error text. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError.Text"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError.Text">
      <summary>
        <para>Returns the error message.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the error text.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator">
      <summary>
        <para>Enables you to manage the collection of errors found during criteria validation in the Expression Editor.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.#ctor(System.Collections.Generic.List{DevExpress.Data.IBoundProperty})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator"/> class with the specified collection of bound properties.</para>
      </summary>
      <param name="properties">A collection of objects implementing the <see cref="T:DevExpress.Data.IBoundProperty"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Clear">
      <summary>
        <para>Removes all items from the collection of validation errors.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Count">
      <summary>
        <para>Returns the number of errors found in an expression.</para>
      </summary>
      <value>An integer value, specifying the number of errors found in an expression.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Item(System.Int32)">
      <summary>
        <para>Returns the specified item from the collection of validation errors.</para>
      </summary>
      <param name="index">An integer value, specifying the item&#39;s position within the collection.</param>
      <value>A <see cref="T:DevExpress.Data.Filtering.Helpers.CriteriaValidatorError"/> object.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Validate(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="criteria">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Validate(System.Collections.IList)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="operands">An object implementing the <see cref="T:System.Collections.IList"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Validate(System.String)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="filter">A <see cref="T:System.String"/> value, specifying the filter string.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.AggregateOperand)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/>.</para>
      </summary>
      <param name="theOperand">An <see cref="T:DevExpress.Data.Filtering.AggregateOperand"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.BetweenOperator)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/>.</para>
      </summary>
      <param name="theOperator">A <see cref="T:DevExpress.Data.Filtering.BetweenOperator"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.BinaryOperator)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/>.</para>
      </summary>
      <param name="theOperator">A <see cref="T:DevExpress.Data.Filtering.BinaryOperator"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.FunctionOperator)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/>.</para>
      </summary>
      <param name="theOperator">A <see cref="T:DevExpress.Data.Filtering.FunctionOperator"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.GroupOperator)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.GroupOperator"/>.</para>
      </summary>
      <param name="theOperator">A <see cref="T:DevExpress.Data.Filtering.GroupOperator"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.InOperator)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.InOperator"/>.</para>
      </summary>
      <param name="theOperator">An <see cref="T:DevExpress.Data.Filtering.InOperator"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.JoinOperand)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.JoinOperand"/>.</para>
      </summary>
      <param name="theOperand">A <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.OperandProperty)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.OperandProperty"/>.</para>
      </summary>
      <param name="theOperand">An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.OperandValue)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.OperandValue"/>.</para>
      </summary>
      <param name="theOperand">An <see cref="T:DevExpress.Data.Filtering.OperandValue"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.Helpers.ErrorsEvaluatorCriteriaValidator.Visit(DevExpress.Data.Filtering.UnaryOperator)">
      <summary>
        <para>Enables custom processing of the specified <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/>.</para>
      </summary>
      <param name="theOperator">A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> object.</param>
    </member>
    <member name="T:DevExpress.Data.Filtering.IClientCriteriaVisitor">
      <summary>
        <para>For internal use only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.AggregateOperand)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperand"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.JoinOperand)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperand"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.IClientCriteriaVisitor.Visit(DevExpress.Data.Filtering.OperandProperty)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperand"></param>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICriteriaVisitor">
      <summary>
        <para>For internal use only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.BetweenOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperator"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.BinaryOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperator"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.FunctionOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperator"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.GroupOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperator"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.InOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperator"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.OperandValue)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperand"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICriteriaVisitor.Visit(DevExpress.Data.Filtering.UnaryOperator)">
      <summary>
        <para></para>
      </summary>
      <param name="theOperator"></param>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomAggregate">
      <summary>
        <para>Declares the base functionality for custom aggregate functions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregate.CreateEvaluationContext">
      <summary>
        <para>An object that stores the result&#39;s intermediate state between the <see cref="M:DevExpress.Data.Filtering.ICustomAggregate.Process(System.Object,System.Object[])"/> method calls.</para>
      </summary>
      <returns>An object that stores the result&#39;s intermediate state between the <see cref="M:DevExpress.Data.Filtering.ICustomAggregate.Process(System.Object,System.Object[])"/> method calls.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregate.GetResult(System.Object)">
      <summary>
        <para>Gets a custom aggregate function&#39;s result.</para>
      </summary>
      <param name="context">An object that stores the result&#39;s intermediate state between the <see cref="M:DevExpress.Data.Filtering.ICustomAggregate.Process(System.Object,System.Object[])"/> method calls.</param>
      <returns>A custom aggregate function&#39;s result.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomAggregate.Name">
      <summary>
        <para>When implemented by a custom aggregate function, specifies its name.</para>
      </summary>
      <value>The custom aggregate&#39;s name use to identify a custom aggregate function.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregate.Process(System.Object,System.Object[])">
      <summary>
        <para>Is called to process every element of a collection supplied to a custom aggregate function.</para>
      </summary>
      <param name="context">An object that stores the result&#39;s intermediate state between method calls.</param>
      <param name="operands">An operand array to be supplied to an aggregate function.</param>
      <returns>true, if no more elements need to be processed and the final result was acquired, otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregate.ResultType(System.Type[])">
      <summary>
        <para>When implememnted by a custom aggregate function, determines its return value type based on the type of aggregate function parameters.</para>
      </summary>
      <param name="operands">An array of aggregate function parameter types.</param>
      <returns>A <see cref="T:System.Type"/> object that specifies the custom aggregate function&#39;s return value type.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomAggregateBrowsable">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomAggregateBrowsable.Description">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregateBrowsable.IsValidOperandCount(System.Int32)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="count"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregateBrowsable.IsValidOperandType(System.Int32,System.Int32,System.Type)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="operandIndex"></param>
      <param name="operandCount"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomAggregateBrowsable.MaxOperandCount">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomAggregateBrowsable.MinOperandCount">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomAggregateConvertibleToExpression">
      <summary>
        <para>Implemented by custom aggregate functions that can be converted to a LINQ expression.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregateConvertibleToExpression.Convert(DevExpress.Data.Linq.ICriteriaToExpressionConverter,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression[])">
      <summary>
        <para>When implemented by a custom aggregate function, converts it to a Linq expression.</para>
      </summary>
      <param name="converter">An DevExpress.Data.Linq.Helpers.ICriteriaToExpressionConverter object that converts a criteria to an expression.</param>
      <param name="collectionProperty">An Expression that returns a collection used to calculate a custom aggregate.</param>
      <param name="elementParameter">An Expression that returns a collection&#39;s item that provides arguments for the custom aggregate function.</param>
      <param name="operands">An array of Expressions that specify aggregate function operands.</param>
      <returns>An Expression object that specifies a LINQ expression.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomAggregateFormattable">
      <summary>
        <para>Defines server-side processing for custom aggregate functions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomAggregateFormattable.Format(System.Type,System.String[])">
      <summary>
        <para>Builds a SQL command that calculates a custom aggregate function result on the server side.</para>
      </summary>
      <param name="providerType">A <see cref="T:System.Type"/> object that specifies a data store (database) provider. For example, <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>.</param>
      <param name="operands">An array of operands passed to a custom aggregate function.</param>
      <returns>A SQL command that substitutes a custom aggregate function&#39;s calls in query statements.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperator">
      <summary>
        <para>Declares the base functionality for custom functions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.Evaluate(System.Object[])">
      <summary>
        <para>When implemented by a custom function, evaluates it on the client.</para>
      </summary>
      <param name="operands">An array of objects specifying function operands (parameters).</param>
      <returns>An <see cref="T:System.Object"/> specifying a custom function&#39;s return value, calculated based on the operands.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperator.Name">
      <summary>
        <para>When implemented by a custom function, specifies its name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> used to identify a custom function.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperator.ResultType(System.Type[])">
      <summary>
        <para>When implemented by a custom function, determines its return value type based on the type of function operands (parameters).</para>
      </summary>
      <param name="operands">An array of function operator (parameter) types.</param>
      <returns>A <see cref="T:System.Type"/> object specifying the return value type of a custom function.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable">
      <summary>
        <para>Provides additional information (a function category, function description, parameter count, etc.) on custom functions for Expression Editors.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.Category">
      <summary>
        <para>When implemented by a custom function, designates its functional category.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.FunctionCategory"/> value specifying a custom function&#39;s category.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.Description">
      <summary>
        <para>When implemented by a custom function, returns its description.</para>
      </summary>
      <value>A text describing a custom function&#39;s syntax and purpose.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandCount(System.Int32)">
      <summary>
        <para>When implemented by a custom function, determines if it accepts a specified number of operands (parameters).</para>
      </summary>
      <param name="count">An integer value specifying the number of operands (parameters) passed to a custom function.</param>
      <returns>true if the number of operands (parameters) passed as the count is valid for a custom function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandType(System.Int32,System.Int32,System.Type)">
      <summary>
        <para>When implemented by a custom function, determines if a certain type can be passed as a specified operand.</para>
      </summary>
      <param name="operandIndex">A zero-based integer value specifying an operand&#39;s index among a custom function&#39;s operands.</param>
      <param name="operandCount">An integer value specifying the total number of operands passed to a custom function.</param>
      <param name="type">A <see cref="T:System.Type"/> object specifying an operand&#39;s type.</param>
      <returns>true if a custom function accepts the type; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.MaxOperandCount">
      <summary>
        <para>When implemented by a custom function, returns the maximum number of operands (parameters) this function can accept.</para>
      </summary>
      <value>An integer value specifying the maximum number of function operands (parameters) a custom function can accept. &#0045;1 indicates that a custom function accepts an infinite number of operands.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.ICustomFunctionOperatorBrowsable.MinOperandCount">
      <summary>
        <para>When implemented by a custom function, returns the minimum number of operands (parameters) required by this function.</para>
      </summary>
      <value>An integer value specifying the least possible number of function operands (parameters) required by a custom function. 0 indicates that operands can be omitted.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileable">
      <summary>
        <para>Implemented by custom functions that can be compiled on the client.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileable.Create(System.Linq.Expressions.Expression[])">
      <summary>
        <para>When implemented by a custom function, creates a LINQ expression.</para>
      </summary>
      <param name="operands">An array of Expression objects specifying function operands (parameters).</param>
      <returns>An Expression object that specifies the LINQ expression.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileableWithCaseSensitivity">
      <summary>
        <para>Implemented by case-sensitive custom functions that can be compiled on the client.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorCompileableWithCaseSensitivity.Create(System.Boolean,System.Linq.Expressions.Expression[])">
      <summary>
        <para>When implemented by a custom function, creates a LINQ expression.</para>
      </summary>
      <param name="caseSensitive"></param>
      <param name="operands">An array of Expression objects specifying function operands (parameters).</param>
      <returns>An Expression object that specifies the LINQ expression.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorConvertibleToExpression">
      <summary>
        <para>Implemented by custom functions that can be converted to a LINQ expression.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorConvertibleToExpression.Convert(DevExpress.Data.Linq.ICriteriaToExpressionConverter,System.Linq.Expressions.Expression[])">
      <summary>
        <para>When implemented by a custom function, converts it to a Linq-expression.</para>
      </summary>
      <param name="converter">An DevExpress.Data.Linq.Helpers.ICriteriaToExpressionConverter object that converts a criteria to an expression.</param>
      <param name="operands">An array of Expression objects specifying function operands (parameters).</param>
      <returns>An Expression object that specifies a LINQ expression.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorEvaluatableWithCaseSensitivity">
      <summary>
        <para>Implemented by custom functions that can be evaluated with case-sensitivity.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorEvaluatableWithCaseSensitivity.Evaluate(System.Boolean,System.Object[])">
      <summary>
        <para>When implemented by a custom function, evaluates it on the client.</para>
      </summary>
      <param name="caseSensitive">true, if the custom function is case-sensitive; otherwise, false.</param>
      <param name="operands">An array of objects specifying function operands (parameters).</param>
      <returns>An <see cref="T:System.Object"/> specifying a custom function&#39;s return value, calculated based on the operands.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable">
      <summary>
        <para>Defines server-side processing for custom functions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable.Format(System.Type,System.String[])">
      <summary>
        <para>When implemented by a custom function, formats a database-specific SQL command that corresponds to this function.</para>
      </summary>
      <param name="providerType">A <see cref="T:System.Type"/> object specifying a data store (database) provider. For example, <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/>.</param>
      <param name="operands">An array of operands (parameters) passed to a custom function.</param>
      <returns>A <see cref="T:System.String"/> specifying a SQL command, which will substitute a custom function&#39;s calls in query statements.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.InOperator">
      <summary>
        <para>An operator which determines if a value matches any value in a specified list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with the specified settings.</para>
      </summary>
      <param name="leftOperand">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.</param>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent expressions to test for a match.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with the specified settings.</para>
      </summary>
      <param name="leftOperand">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.</param>
      <param name="operands">An array of objects that represent expressions to test for a match.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with the specified settings.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the property name.</param>
      <param name="operands">An array of <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> objects that represent expressions to test for a match.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.#ctor(System.String,System.Collections.IEnumerable)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.InOperator"/> class with the specified settings.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the property name.</param>
      <param name="values">A collection of expressions to test for a match.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.InOperator"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.InOperator"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An <see cref="T:DevExpress.Data.Filtering.InOperator"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.InOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.InOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.InOperator.LeftOperand">
      <summary>
        <para>Gets or sets the expression which is tested to see if it matches any value in the <see cref="P:DevExpress.Data.Filtering.InOperator.Operands"/> list.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the expression to test.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.InOperator.Operands">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current <see cref="T:DevExpress.Data.Filtering.InOperator"/>.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> object that represents a collection of the operands used to construct the current <see cref="T:DevExpress.Data.Filtering.InOperator"/>.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.JoinOperand">
      <summary>
        <para>An operator that joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.</para>
      </summary>
      <param name="joinTypeName">A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.Aggregate,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.</para>
      </summary>
      <param name="joinTypeName">A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.</param>
      <param name="type">An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.AggregateType"/> property.</param>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the aggregated expression. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.AggregatedExpression"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.#ctor(System.String,DevExpress.Data.Filtering.CriteriaOperator,System.String,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> class with the specified settings.</para>
      </summary>
      <param name="joinTypeName">A <see cref="T:System.String"/> value that specifies the class name of persistent objects that provide data for joining. The string can contain a namespace prefix to disambiguate the class name if more than one such class name exists. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName"/> property.</param>
      <param name="condition">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. null (Nothing in Visual Basic) if the filter criteria isn&#39;t needed. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> property.</param>
      <param name="customAggregateName">A custom aggregate function&#39;s name.</param>
      <param name="aggregatedExpressions">A collection of aggregated expressions to assign to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.CustomAggregateOperands"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.JoinOperand.AggregatedExpression">
      <summary>
        <para>Gets or sets the aggregated expression.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the aggregated expression.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.JoinOperand.AggregateType">
      <summary>
        <para>Gets or sets the type of the aggregate operator.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.Filtering.Aggregate"/> enumeration value that specifies the type of the aggregate operator.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Avg(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/>  which returns the average of values calculated by the given aggregate expression. This expression is evaluated against elements that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.JoinOperand.Condition">
      <summary>
        <para>Gets or sets the filter criteria applied to the property values of the objects being joined.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the filter criteria. null (Nothing in Visual Basic), if the filter criteria isn&#39;t needed.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Count">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which returns the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Count(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which returns the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. This parameter may be ignored in certain circumstances.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Custom(System.String,System.Collections.Generic.IEnumerable{DevExpress.Data.Filtering.CriteriaOperator})">
      <summary>
        <para>Creates a new custom <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> with a custom aggregate function.</para>
      </summary>
      <param name="customAggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <param name="aggregatedExpressions">A collection of aggregated expressions to be assigned to the <see cref="P:DevExpress.Data.Filtering.JoinOperand.CustomAggregateOperands"/> property</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object that joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.JoinOperand.CustomAggregateName">
      <summary>
        <para>Gets or sets a custom aggregate function&#39;s name.</para>
      </summary>
      <value>A custom aggregate function&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.JoinOperand.CustomAggregateOperands">
      <summary>
        <para>Gets an operand collection passed to a custom aggregate function.</para>
      </summary>
      <value>A collection of operand values.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Exists">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which determines whether or not the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> is greater than zero.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Exists(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which determines whether or not the count of elements that match the <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/> is greater than zero.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression. This parameter may be ignored in certain circumstances.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.JoinOperand.JoinTypeName">
      <summary>
        <para>Gets or sets the type name of persistent objects being joined with parent objects.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the type name of persistent objects that provide data for joining. The value is case-sensitive.</value>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Max(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which returns the maximum of the values calculated by the given aggregate expression. This expression is evaluated against elements that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Min(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which returns the minimum of the values calculated by the given aggregate expression. This expression is evaluated against elements  that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.JoinOperand.Sum(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> which returns the sum of values calculated by the given aggregate expression. This expression is evaluated against elements that match the specified <see cref="P:DevExpress.Data.Filtering.JoinOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which specifies the aggregate expression.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.JoinOperand"/> object which joins persistent objects on a specified condition, and calculates aggregate functions against matching objects.</returns>
    </member>
    <member name="T:DevExpress.Data.Filtering.NotOperator">
      <summary>
        <para>Represents a logical NOT operation which is performed on the operand.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.NotOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NotOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.NotOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NotOperator"/> class with the specified operand.</para>
      </summary>
      <param name="operand">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant which represents the operand that the logical inversion is applied to.</param>
    </member>
    <member name="T:DevExpress.Data.Filtering.NullOperator">
      <summary>
        <para>Represents an operator which compares a persistent object&#39;s property value with a null reference (Nothing in Visual Basic).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with the specified criteria operand.</para>
      </summary>
      <param name="operand">An <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the criteria expression.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.NullOperator.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.NullOperator"/> class with the specified property name.</para>
      </summary>
      <param name="operand">A <see cref="T:System.String"/> value which specifies the name of the property to check for null (Nothing in Visual Basic).</param>
    </member>
    <member name="T:DevExpress.Data.Filtering.OperandParameter">
      <summary>
        <para>This class supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor">
      <summary>
        <para>For internal use only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor(System.String)">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <param name="parameterName"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandParameter.#ctor(System.String,System.Object)">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <param name="parameterName"></param>
      <param name="value"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandParameter.Clone">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandParameter.Equals(System.Object)">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandParameter.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.OperandParameter"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.OperandParameter.ParameterName">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.Filtering.OperandProperty">
      <summary>
        <para>An object property operand in criteria expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> class with the specified property name.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value that specifies the name of the property. It can be a path through object relationships (e.g.  &quot;Employer.DefaultAddress.City&quot;). This value is case-sensitive. and will be assigned to the <see cref="P:DevExpress.Data.Filtering.OperandProperty.PropertyName"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandProperty.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.OperandProperty"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.OperandProperty.Item(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <param name="condition"></param>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.Filtering.OperandProperty.PropertyName">
      <summary>
        <para>Gets or sets a property name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the name of the property. It can be a path through object relationships (e.g.  &quot;Employer.DefaultAddress.City&quot;). This value is case-sensitive.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.OperandValue">
      <summary>
        <para>A value operand in criteria expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandValue"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.OperandValue"/> class with the specified value.</para>
      </summary>
      <param name="value">The value for the operand. This value is assigned to the <see cref="P:DevExpress.Data.Filtering.OperandValue.Value"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.OperandValue"/> instance.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Data.Filtering.OperandValue"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An <see cref="T:DevExpress.Data.Filtering.OperandValue"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.OperandValue.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.OperandValue"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.Filtering.OperandValue.Value">
      <summary>
        <para>Gets or sets a value for the operand.</para>
      </summary>
      <value>The value for the operand.</value>
    </member>
    <member name="P:DevExpress.Data.Filtering.OperandValue.XmlValue">
      <summary>
        <para>Gets or sets the current operand&#39;s formatted value.</para>
      </summary>
      <value>An object that represents the current operand&#39;s formatted value.</value>
    </member>
    <member name="T:DevExpress.Data.Filtering.UnaryOperator">
      <summary>
        <para>An unary operator which performs an operation on only one expression.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor(DevExpress.Data.Filtering.UnaryOperatorType,DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with the specified operand and operator type.</para>
      </summary>
      <param name="operatorType">A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> enumeration value which specifies the type of the unary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType"/> property.</param>
      <param name="operand">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the operand. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.Operand"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.#ctor(DevExpress.Data.Filtering.UnaryOperatorType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> class with the specified settings.</para>
      </summary>
      <param name="operatorType">A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> enumeration value which specifies the type of the unary operator. This value is assigned to the <see cref="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType"/> property.</param>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the property&#39;s name.</param>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">An <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Data.Filtering.UnaryOperator.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Data.Filtering.UnaryOperator"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperator.Operand">
      <summary>
        <para>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object which represents the operand.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperator.OperatorType">
      <summary>
        <para>An <see cref="T:DevExpress.Data.Filtering.UnaryOperatorType"/> enumeration value which specifies the type of the unary operator.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.Filtering.UnaryOperatorType">
      <summary>
        <para>Enumerates unary operator types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.BitwiseNot">
      <summary>
        <para>Represents the bitwise NOT operator.To create the bitwise NOT operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;~Field1&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.IsNull">
      <summary>
        <para>Represents the operator which determines whether or not a given expression is NULL.To create the is&#0045;null operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;Field1 IS NULL&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Minus">
      <summary>
        <para>Represents the unary negation (-) operator.To create the unary negation operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;-Field1 = -10&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Not">
      <summary>
        <para>Represents the logical NOT.To create the logical NOT operator using the  method use the following syntax:CriteriaOperator.Parse(&quot;NOT ((Field1 = A) OR (Field1 = B))&quot;)</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.Filtering.UnaryOperatorType.Plus">
      <summary>
        <para>Represents the unary plus (+) operator.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.IBoundProperty">
      <summary>
        <para>If implemented, provides an abstraction for an object&#39;s bindable property.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.Children">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.DisplayName">
      <summary>
        <para>Provides access to the property display name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.HasChildren">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.IsAggregate">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.IsList">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.Name">
      <summary>
        <para>Provides access to the property name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.Parent">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.IBoundProperty.Type">
      <summary>
        <para>Provides access to the property type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object.</value>
    </member>
    <member name="T:DevExpress.Data.IDisplayNameProvider">
      <summary>
        <para>Provides methods that return custom names for the Field List items.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.IDisplayNameProvider.GetDataSourceDisplayName">
      <summary>
        <para>Returns the name displayed for a data source in a Field List.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value specifying the data source&#39;s name.</returns>
    </member>
    <member name="M:DevExpress.Data.IDisplayNameProvider.GetFieldDisplayName(System.String[])">
      <summary>
        <para>Returns the name of a table or column item displayed in a Field List.</para>
      </summary>
      <param name="fieldAccessors">An array of <see cref="T:System.String"/> values, corresponding to the original data member display names.</param>
      <returns>A <see cref="T:System.String"/> value, specifying the new data member name.</returns>
    </member>
    <member name="T:DevExpress.Data.IParameter">
      <summary>
        <para>If implemented by a class, provides functionality to a report parameter.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.IParameter.Value">
      <summary>
        <para>Specifies the parameter value.</para>
      </summary>
      <value>A <see cref="T:System.Object"/>, specifying the parameter value.</value>
    </member>
    <member name="T:DevExpress.Data.IRelationList">
      <summary>
        <para>An interface that can be implemented by a data source to support master-detail relationships.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.IRelationList.GetDetailList(System.Int32,System.Int32)">
      <summary>
        <para>When implemented by a class, returns detail data for a relationship.</para>
      </summary>
      <param name="index">An integer value that specifies the index of a master row in the data source.</param>
      <param name="relationIndex">An integer value that specifies the relationship.</param>
      <returns>An object that implements the IList interface and represents detail data for a relationship.</returns>
    </member>
    <member name="M:DevExpress.Data.IRelationList.GetRelationName(System.Int32,System.Int32)">
      <summary>
        <para>When implemented by a class, returns the name of a master-detail relationship.</para>
      </summary>
      <param name="index">An integer value that specifies the index of a master row in the data source.</param>
      <param name="relationIndex">An integer value that specifies the relationship.</param>
      <returns>The name of a master-detail relationship.</returns>
    </member>
    <member name="M:DevExpress.Data.IRelationList.IsMasterRowEmpty(System.Int32,System.Int32)">
      <summary>
        <para>When implemented by a class, returns a Boolean value that specifies whether a specific detail of a particular master row contains data.</para>
      </summary>
      <param name="index">An integer value that specifies the index of a master row in the data source.</param>
      <param name="relationIndex">An integer value that specifies the relationship.</param>
      <returns>A Boolean value that specifies whether a specific detail of a particular master row contains data.</returns>
    </member>
    <member name="P:DevExpress.Data.IRelationList.RelationCount">
      <summary>
        <para>When implemented by a class, returns the number of master-detail relationships for the current master data source.</para>
      </summary>
      <value>An integer value that specifies the number of master-detail relationships for the current master data source.</value>
    </member>
    <member name="T:DevExpress.Data.IRelationListEx">
      <summary>
        <para>An extended version of the <see cref="T:DevExpress.Data.IRelationList"/> interface, that can be implemented by a data source to support master-detail relationships.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.IRelationListEx.GetRelationCount(System.Int32)">
      <summary>
        <para>When implemented by a class, returns the number of relationships for a master row.</para>
      </summary>
      <param name="index">An integer value that specifies the master row.</param>
      <returns>An integer value that specifies the number of relationships for a master row.</returns>
    </member>
    <member name="M:DevExpress.Data.IRelationListEx.GetRelationDisplayName(System.Int32,System.Int32)">
      <summary>
        <para>When implemented by a class, returns the display caption of a particular relationship in a specific master row.</para>
      </summary>
      <param name="index">An integer value that specifies the master row.</param>
      <param name="relationIndex">An integer value that specifies the relationship.</param>
      <returns>A string value that specifies the display caption of a particular relationship in a specific master row.</returns>
    </member>
    <member name="N:DevExpress.Data.Linq">
      <summary>
        <para>Contains classes that allow you to enable server-side data management for any LINQ provider.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Linq.EntityInstantFeedbackSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit that binds these controls to Entity Framework 4+ model classes in Instant Feedback Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityInstantFeedbackSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An Action&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.Linq.GetQueryableEventArgs},System.Action{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An Action&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
      <param name="freeQueryable">An Action&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.DismissQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An EventHandler&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.Linq.GetQueryableEventArgs},System.EventHandler{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An EventHandler&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
      <param name="freeQueryable">An EventHandler&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.DismissQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityInstantFeedbackSource.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityInstantFeedbackSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityInstantFeedbackSource.DesignTimeElementType">
      <summary>
        <para>Specifies the type of objects that will be retrieved from a data source, at design time.</para>
      </summary>
      <value>A type of objects that will be retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.DismissQueryable">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> no longer needs the queryable source it used to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.Linq.EntityInstantFeedbackSource.GetQueryable">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/> needs a queryable source, to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityInstantFeedbackSource.KeyExpression">
      <summary>
        <para>Specifies the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key property name.</value>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityInstantFeedbackSource.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Data.Linq.EntityInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Linq.EntityServerModeSource">
      <summary>
        <para>The data source for the GridControl, PivotGridControl and SearchLookUpEdit that binds these controls to Entity Framework 4+ model classes in server mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityServerModeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.EntityServerModeSource"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityServerModeSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityServerModeSource.ElementType">
      <summary>
        <para>Specifies the type of objects retrieved from a data source.</para>
      </summary>
      <value>The type of objects retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.Linq.EntityServerModeSource.ExceptionThrown">
      <summary>
        <para>Enables you to manually handle the database exception.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.Linq.EntityServerModeSource.InconsistencyDetected">
      <summary>
        <para>Enables you to manually handle the inconsistency detected during an operation on a data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityServerModeSource.KeyExpression">
      <summary>
        <para>Gets or sets the key expression.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key expression.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.EntityServerModeSource.QueryableSource">
      <summary>
        <para>Gets or sets the queryable data source.</para>
      </summary>
      <value>An object that implements the <see cref="T:System.Linq.IQueryable"/> interface.</value>
    </member>
    <member name="M:DevExpress.Data.Linq.EntityServerModeSource.Reload">
      <summary>
        <para>Forces the bound data-aware control to reload data from the data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Linq.GetQueryableEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> and <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.GetQueryableEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.KeyExpression">
      <summary>
        <para>Gets or sets the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value indicating the key property name.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.QueryableSource">
      <summary>
        <para>Gets or sets the queryable data source.</para>
      </summary>
      <value>An object that implements the <see cref="T:System.Linq.IQueryable"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.GetQueryableEventArgs.Tag">
      <summary>
        <para>Gets or sets an arbitrary object associated with a queryable source.</para>
      </summary>
      <value>An object associated with a queryable source.</value>
    </member>
    <member name="T:DevExpress.Data.Linq.LinqInstantFeedbackSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit that binds these controls to any queryable source (&#39;LINQ to SQL Classes&#39;) in Instant Feedback Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An Action&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.Linq.GetQueryableEventArgs},System.Action{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An Action&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
      <param name="freeQueryable">An Action&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An EventHandler&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.Linq.GetQueryableEventArgs},System.EventHandler{DevExpress.Data.Linq.GetQueryableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getQueryable">An EventHandler&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable"/> event. The specified delegate is attached to this event.</param>
      <param name="freeQueryable">An EventHandler&lt;<see cref="T:DevExpress.Data.Linq.GetQueryableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object which contains the names of the columns against which data source contents are sorted.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.DesignTimeElementType">
      <summary>
        <para>Specifies the type of objects that will be retrieved from a data source, at design time.</para>
      </summary>
      <value>A type of objects that will be retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.DismissQueryable">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/> no longer needs the queryable source it used to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.ExtractOriginalRow(System.Object)">
      <summary>
        <para>This method is intended for internal use.</para>
      </summary>
      <param name="uiThreadRow"></param>
      <returns></returns>
    </member>
    <member name="E:DevExpress.Data.Linq.LinqInstantFeedbackSource.GetQueryable">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/> needs a queryable source, to retrieve objects from the data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqInstantFeedbackSource.KeyExpression">
      <summary>
        <para>Specifies the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key property name.</value>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqInstantFeedbackSource.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Data.Linq.LinqInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initialize a new instance of the <see cref="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs"/> class.</para>
      </summary>
      <param name="exception">The database exception. This value is assigned to the <see cref="P:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs.Exception"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs.Exception">
      <summary>
        <para>Gets the database exception.</para>
      </summary>
      <value>The database exception.</value>
    </member>
    <member name="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown"/> event.</para>
      </summary>
      <param name="sender">The event source.</param>
      <param name="e">A <see cref="T:DevExpress.Data.Linq.LinqServerModeExceptionThrownEventArgs"/> object that contains data related to the event.</param>
    </member>
    <member name="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs.Handled">
      <summary>
        <para>Gets or sets whether the inconsistency detected during an operation on a data source should be handled manually.</para>
      </summary>
      <value>true to manually handle the inconsistency; false to reload data from the data source.</value>
    </member>
    <member name="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected"/> event.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Data.Linq.LinqServerModeInconsistencyDetectedEventArgs"/> object that contains data related to the event.</param>
    </member>
    <member name="T:DevExpress.Data.Linq.LinqServerModeSource">
      <summary>
        <para>The data source for the GridControl and PivotGridControl that binds these controls to any queryable source (e.g., &#39;LINQ to SQL Classes&#39; or <see cref="T:DevExpress.Xpo.XPQuery`1"/>) in server mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqServerModeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Linq.LinqServerModeSource"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqServerModeSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when sort order is not specified by the bound control.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object which contains the names of the columns against which data source contents are sorted.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqServerModeSource.ElementType">
      <summary>
        <para>Specifies the type of objects retrieved from a data source.</para>
      </summary>
      <value>The type of objects retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.Linq.LinqServerModeSource.ExceptionThrown">
      <summary>
        <para>Enables you to manually handle the database exception.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.Linq.LinqServerModeSource.InconsistencyDetected">
      <summary>
        <para>Enables you to manually handle the inconsistency detected during an operation on a data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqServerModeSource.KeyExpression">
      <summary>
        <para>Gets or sets the key expression.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key expression.</value>
    </member>
    <member name="P:DevExpress.Data.Linq.LinqServerModeSource.QueryableSource">
      <summary>
        <para>Gets or sets the queryable data source.</para>
      </summary>
      <value>An object that implements the <see cref="T:System.Linq.IQueryable"/> interface.</value>
    </member>
    <member name="M:DevExpress.Data.Linq.LinqServerModeSource.Reload">
      <summary>
        <para>Forces the bound data-aware control to reload data from the data store.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.ODataLinq">
      <summary>
        <para>Contains classes enabling server-side data management for the OData provider.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.ODataLinq.GetSourceEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> and <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.GetSourceEventArgs.#ctor(DevExpress.Data.Helpers.ServerModeCoreExtender)">
      <summary>
        <para>This constructor is intended for internal use.</para>
      </summary>
      <param name="extender"></param>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Extender">
      <summary>
        <para>This property is intended for internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.KeyExpressions">
      <summary>
        <para>Gets or sets the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value indicating the key property name.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Properties">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Query">
      <summary>
        <para>Specifies the query request to the OData service.</para>
      </summary>
      <value>An IQueryable object that specifies the query request to the OData service.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.GetSourceEventArgs.Tag">
      <summary>
        <para>Gets or sets an arbitrary object associated with a queryable source.</para>
      </summary>
      <value>An object associated with a queryable source.</value>
    </member>
    <member name="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit controls that binds these controls to OData service in Instant Feedback Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.ODataLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An Action&lt;<see cref="T:DevExpress.Data.ODataLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.ODataLinq.GetSourceEventArgs},System.Action{DevExpress.Data.ODataLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An Action&lt;<see cref="T:DevExpress.Data.ODataLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
      <param name="freeSource">An Action&lt;<see cref="T:DevExpress.Data.ODataLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.ODataLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An EventHandler&lt;<see cref="T:DevExpress.Data.ODataLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.ODataLinq.GetSourceEventArgs},System.EventHandler{DevExpress.Data.ODataLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An EventHandler&lt;<see cref="T:DevExpress.Data.ODataLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
      <param name="freeSource">An EventHandler&lt;<see cref="T:DevExpress.Data.ODataLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DesignTimeElementType">
      <summary>
        <para>Specifies the type of objects that will be retrieved from a data source at design time.</para>
      </summary>
      <value>A type of objects that will be retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.DismissSource">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> no longer needs the queryable source it used to retrieve objects from the OData service.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.FixedFilterString">
      <summary>
        <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.</para>
      </summary>
      <value>A string specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="E:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.GetSource">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/> needs a queryable source to retrieve objects from the OData service.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.KeyExpression">
      <summary>
        <para>Specifies the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key property name.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.KeyExpressions">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.Properties">
      <summary>
        <para>Specifies the semicolon-separated list of property names. When the list is not emply, only the listed properties and key fields will be loaded. Otherwise, all properties are loaded.</para>
      </summary>
      <value>A string containing the semicolon-separated list of property names.</value>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Data.ODataLinq.ODataInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.ODataLinq.ODataServerModeSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit controls that binds these controls to OData service in Server Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataServerModeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.ODataLinq.ODataServerModeSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataServerModeSource.#ctor(DevExpress.Data.Helpers.ServerModeCoreExtender)">
      <summary>
        <para>This constructor is intended for internal use.</para>
      </summary>
      <param name="extender"></param>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default when the sort order is not specified by the bound control.</para>
      </summary>
      <value>A string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.ElementType">
      <summary>
        <para>Specifies the type of objects retrieved from a data source.</para>
      </summary>
      <value>The type of objects retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.ODataLinq.ODataServerModeSource.ExceptionThrown">
      <summary>
        <para>Occurs when the data source exception is thrown.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.Extender">
      <summary>
        <para>This property is intended for internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.FixedFilterString">
      <summary>
        <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.</para>
      </summary>
      <value>A string specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="E:DevExpress.Data.ODataLinq.ODataServerModeSource.InconsistencyDetected">
      <summary>
        <para>Occurs when an inconsistency has been detected during an operation on a data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.KeyExpression">
      <summary>
        <para>Specifies the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key property name.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.KeyExpressions">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.Properties">
      <summary>
        <para>Specifies the semicolon-separated list of property names. When the list is not emply, only the listed properties and key fields will be loaded. Otherwise, all properties are loaded.</para>
      </summary>
      <value>A string containing the semicolon-separated list of property names.</value>
    </member>
    <member name="P:DevExpress.Data.ODataLinq.ODataServerModeSource.Query">
      <summary>
        <para>Specifies the query request to the OData service.</para>
      </summary>
      <value>An IQueryable object that specifies the query request to the OData service.</value>
    </member>
    <member name="M:DevExpress.Data.ODataLinq.ODataServerModeSource.Reload">
      <summary>
        <para>Forces the bound data-aware control to reload data from the data store.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.ODataLinq.ODataServerModeSource.UseIncludeTotalCountInsteadOfCount">
      <summary>
        <para>Enables the use of the $inlinecount query option instead of the $count endpoint.</para>
      </summary>
      <value></value>
    </member>
    <member name="N:DevExpress.Data.PLinq">
      <summary>
        <para>Contains classes enabling server-side data management for the Parallel LINQ to Objects provider.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.PLinq.GetEnumerableEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.GetEnumerable"/> and <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DismissEnumerable"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.PLinq.GetEnumerableEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.PLinq.GetEnumerableEventArgs.Source">
      <summary>
        <para>Gets or sets the enumerable data source.</para>
      </summary>
      <value>An object that implements the <see cref="T:System.Collections.IEnumerable"/> interface.</value>
    </member>
    <member name="P:DevExpress.Data.PLinq.GetEnumerableEventArgs.Tag">
      <summary>
        <para>Gets or sets an arbitrary object associated with an enumerable source.</para>
      </summary>
      <value>An object associated with an enumerable source.</value>
    </member>
    <member name="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit that binds these controls to any enumerable source in Instant Feedback Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.PLinq.GetEnumerableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getEnumerable">An Action&lt;<see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.GetEnumerable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.PLinq.GetEnumerableEventArgs},System.Action{DevExpress.Data.PLinq.GetEnumerableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getEnumerable">An Action&lt;<see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.GetEnumerable"/> event. The specified delegate is attached to this event.</param>
      <param name="freeEnumerable">An Action&lt;<see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DismissEnumerable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.PLinq.GetEnumerableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getEnumerable">An EventHandler&lt;<see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.GetEnumerable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.PLinq.GetEnumerableEventArgs},System.EventHandler{DevExpress.Data.PLinq.GetEnumerableEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getEnumerable">An EventHandler&lt;<see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.GetEnumerable"/> event. The specified delegate is attached to this event.</param>
      <param name="freeEnumerable">An EventHandler&lt;<see cref="T:DevExpress.Data.PLinq.GetEnumerableEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DismissEnumerable"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DegreeOfParallelism">
      <summary>
        <para>Specifies the maximum number of parallel threads that will be started to process a query.</para>
      </summary>
      <value>A nullable integer that specifies the maximum number of parallel threads that will be started to process a query.</value>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DesignTimeElementType">
      <summary>
        <para>Specifies the type of objects that will be retrieved from a data source, at design time.</para>
      </summary>
      <value>A type of objects that will be retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.DismissEnumerable">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> no longer needs the enumerable source it used for object retrieval.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.GetEnumerable">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/> needs an enumerable source, to retrieve data from it.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqInstantFeedbackSource.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Data.PLinq.PLinqInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.PLinq.PLinqServerModeSource">
      <summary>
        <para>The data source for the <see cref="T:DevExpress.XtraGrid.GridControl"/>, <see cref="T:DevExpress.XtraEditors.GridLookUpEdit"/> and <see cref="T:DevExpress.XtraEditors.SearchLookUpEdit"/> controls that binds these controls to any enumerable source in  Server Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqServerModeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.PLinq.PLinqServerModeSource"/> class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqServerModeSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqServerModeSource.DegreeOfParallelism">
      <summary>
        <para>Specifies the maximum number of parallel threads that will be started to process a query.</para>
      </summary>
      <value>A nullable integer that specifies the maximum number of parallel threads that will be started to process a query.</value>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqServerModeSource.ElementType">
      <summary>
        <para>Specifies the type of objects retrieved from a data source.</para>
      </summary>
      <value>The type of objects retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.PLinq.PLinqServerModeSource.ExceptionThrown">
      <summary>
        <para>Enables you to manually handle the data source exception.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.PLinq.PLinqServerModeSource.InconsistencyDetected">
      <summary>
        <para>Enables you to manually handle the inconsistency detected during an operation on a data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.PLinq.PLinqServerModeSource.Reload">
      <summary>
        <para>Forces the bound data-aware control to reload data from the data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.PLinq.PLinqServerModeSource.Source">
      <summary>
        <para>Gets or sets the enumerable data source.</para>
      </summary>
      <value>An object that implements the <see cref="T:System.Collections.IEnumerable"/> interface.</value>
    </member>
    <member name="T:DevExpress.Data.RealTimeSource">
      <summary>
        <para>The component that acts as an asynchronous bridge between a data-aware control and rapidly changing data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.RealTimeSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.CatchUp">
      <summary>
        <para>Empties the changes queue, re-reads the data source and informs the bound control that the reset has occurred.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.RealTimeSource.DataSource">
      <summary>
        <para>Specifies the data source from which the <see cref="T:DevExpress.Data.RealTimeSource"/> component retrieves its data.</para>
      </summary>
      <value>An IList or IListSource object that represents the data source from which the <see cref="T:DevExpress.Data.RealTimeSource"/> component retrieves its data.</value>
    </member>
    <member name="P:DevExpress.Data.RealTimeSource.DisplayableProperties">
      <summary>
        <para>Specifies a semicolon-separated list of displayable property names.</para>
      </summary>
      <value>A string which is a semicolon-separated list of displayable property names.</value>
    </member>
    <member name="F:DevExpress.Data.RealTimeSource.FireListChangedResetAfterPropertyDescriptorChanged">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.GetDisplayableProperties(System.Object)">
      <summary>
        <para>Returns the displayable property names of an item type contained in a specified data source.</para>
      </summary>
      <param name="source">The data source object to examine for property information.</param>
      <returns>An IEnumerable&lt;<see cref="T:System.String"/>&gt; list of property names.</returns>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.GetList">
      <summary>
        <para>Returns the list of data source records. Introduced to support IListSource in <see cref="T:DevExpress.Data.RealTimeSource"/>.</para>
      </summary>
      <returns>A <see cref="T:System.Collections.IList"/> object which is the list of data source records.</returns>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.GetQueueDelay">
      <summary>
        <para>Returns the delay between the data source event occurrence and passing changes to the bound control (in milliseconds).</para>
      </summary>
      <returns>An integer value that is the changes queue delay in milliseconds.</returns>
    </member>
    <member name="P:DevExpress.Data.RealTimeSource.IgnoreItemEvents">
      <summary>
        <para>Specifies whether to ignore INotifyPropertyChanged.PropertyChanged events of the data source items.</para>
      </summary>
      <value>true, if the <see cref="T:DevExpress.Data.RealTimeSource"/> does not handle PropertyChanged events; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.Resume">
      <summary>
        <para>Resumes tracking changes in the data source after tracking was suspended via the <see cref="M:DevExpress.Data.RealTimeSource.Suspend"/> method.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.RealTimeSource.SendQueueTimeout">
      <summary>
        <para>Specifies the timeout between the data source event occurrence and passing changes to the bound control (in milliseconds). The default timeout is 2000 ms. If the actual delay exceeds the specified timeout, the <see cref="M:DevExpress.Data.RealTimeSource.CatchUp"/> method triggers automatically.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.RealTimeSource.Suspend">
      <summary>
        <para>Suspends tracking changes in the data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.RealTimeSource.UseWeakEventHandler">
      <summary>
        <para>Specifies whether or not the WeakReference is used to handle the data source&#39;s IBindingList.ListChanged event.</para>
      </summary>
      <value>true, if the weak reference is used; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.RowDeletedEventArgs">
      <summary>
        <para>Provides data for an event that fires after a row is deleted.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.RowDeletedEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.RowDeletedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="rowHandle">The row handle. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.RowHandle"/> property.</param>
      <param name="listIndex">The index of the row in the data source. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.ListSourceIndex"/> property.</param>
      <param name="row">An object that represents the current row. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.Row"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.RowDeletedEventArgs.ListSourceIndex">
      <summary>
        <para>Gets the index of the current row in the data source.</para>
      </summary>
      <value>The index of the current row in the data source.</value>
    </member>
    <member name="P:DevExpress.Data.RowDeletedEventArgs.Row">
      <summary>
        <para>Gets the currently processed row.</para>
      </summary>
      <value>The currently processed row.</value>
    </member>
    <member name="P:DevExpress.Data.RowDeletedEventArgs.RowHandle">
      <summary>
        <para>Gets the row handle (id) that identifies the position of the current row in the control.</para>
      </summary>
      <value>An integer value that specifies the handle (id) of the current row.</value>
    </member>
    <member name="T:DevExpress.Data.RowDeletingEventArgs">
      <summary>
        <para>Provides data for an event that fires before a row is deleted.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.RowDeletingEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.RowDeletingEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="rowHandle">The row handle. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.RowHandle"/> property.</param>
      <param name="listIndex">The index of the row in the data source. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.ListSourceIndex"/> property.</param>
      <param name="row">An object that represents the current row. This value is used to initialize the <see cref="P:DevExpress.Data.RowDeletedEventArgs.Row"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.RowDeletingEventArgs.Cancel">
      <summary>
        <para>Gets or sets whether the current event (the row deletion) needs to be canceled.</para>
      </summary>
      <value>true, if the current event needs to be canceled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.SelectionChangedEventArgs">
      <summary>
        <para>Provides data for the selection changed events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.SelectionChangedEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="action">A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value which specifies how the collection has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.Action"/> property.</param>
      <param name="controllerRow">A zero-based integer specifying the handle of the row whose selected state has been changed. This value is assigned to the <see cref="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.SelectionChangedEventArgs.Action">
      <summary>
        <para>Gets an action which describes how the collection has been changed.</para>
      </summary>
      <value>A <see cref="T:System.ComponentModel.CollectionChangeAction"/> enumeration value which specifies how the collection has been changed.</value>
    </member>
    <member name="P:DevExpress.Data.SelectionChangedEventArgs.ControllerRow">
      <summary>
        <para>Identifies the row whose selected state has been changed.</para>
      </summary>
      <value>A zero-based integer identifying the row whose selected state has been changed.</value>
    </member>
    <member name="T:DevExpress.Data.SelectionChangedEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.SelectionChanged"/> event.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Data.SelectionChangedEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Data.ServerModeExceptionThrownEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqServerModeDataSource.ExceptionThrown"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ServerModeExceptionThrownEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Data.ServerModeExceptionThrownEventArgs"/> class instance with the specified setting.</para>
      </summary>
      <param name="exception">A <see cref="T:System.Exception"/> object specifying the exception that caused the event.</param>
    </member>
    <member name="P:DevExpress.Data.ServerModeExceptionThrownEventArgs.Exception">
      <summary>
        <para>Gets the exception that caused the event.</para>
      </summary>
      <value>A <see cref="T:System.Exception"/> object representing the exception that caused the event.</value>
    </member>
    <member name="T:DevExpress.Data.ServerModeInconsistencyDetectedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.Linq.LinqServerModeDataSource.InconsistencyDetected"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ServerModeInconsistencyDetectedEventArgs.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Data.ServerModeInconsistencyDetectedEventArgs"/> class instance with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.ServerModeInconsistencyDetectedEventArgs.#ctor(System.Exception)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Data.ServerModeInconsistencyDetectedEventArgs"/> class instance with the specified setting.</para>
      </summary>
      <param name="message">A <see cref="T:System.Exception"/> object specifying the exception that caused the event.</param>
    </member>
    <member name="P:DevExpress.Data.ServerModeInconsistencyDetectedEventArgs.Message">
      <summary>
        <para>Gets the exception that caused the event.</para>
      </summary>
      <value>A <see cref="T:System.Exception"/> object representing the exception that caused the event.</value>
    </member>
    <member name="T:DevExpress.Data.SubstituteFilterEventArgs">
      <summary>
        <para>Provides data for events that allow you to replace a data filter applied by an end-user.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.SubstituteFilterEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SubstituteFilterEventArgs"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.SubstituteFilterEventArgs.#ctor(DevExpress.Data.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.SubstituteFilterEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="filter">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter applied to a data control. This value is assigned to the <see cref="P:DevExpress.Data.SubstituteFilterEventArgs.Filter"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.SubstituteFilterEventArgs.Filter">
      <summary>
        <para>Gets or sets the filter applied to a data control.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that specifies the filter applied to a data control.</value>
    </member>
    <member name="T:DevExpress.Data.SummaryItemType">
      <summary>
        <para>Lists values specifying the aggregate function types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.Average">
      <summary>
        <para>The average value of a column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.Count">
      <summary>
        <para>The record count.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.Custom">
      <summary>
        <para>Specifies whether calculations should be performed manually using a specially designed event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.Max">
      <summary>
        <para>The maximum value in a column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.Min">
      <summary>
        <para>The minimum value in a column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.None">
      <summary>
        <para>Disables summary value calculation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.SummaryItemType.Sum">
      <summary>
        <para>The sum of all values in a column.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.TreeList">
      <summary>
        <para>Contains classes that provide the TreeList control functionality common to multiple platforms.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.TreeList.TreeListNodeBase">
      <summary>
        <para>Serves as a base for classes that represent TreeList nodes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.TreeList.TreeListNodeBase"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.TreeList.TreeListNodeBase"/> class with the specified content.</para>
      </summary>
      <param name="content">An object that specifies the node&#39;s content. This value is assigned to the <see cref="P:DevExpress.Data.TreeList.TreeListNodeBase.Content"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.CollapseAll">
      <summary>
        <para>Collapses all child nodes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.Content">
      <summary>
        <para>Gets or sets the node&#39;s content.</para>
      </summary>
      <value>An object that specifies the node&#39;s content.</value>
    </member>
    <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.ExpandAll">
      <summary>
        <para>Expands all child nodes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.HasChildren">
      <summary>
        <para>Gets whether or not the node has a child node(s).</para>
      </summary>
      <value>true if the node has a child node(s); otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.Id">
      <summary>
        <para>Uniquely identifies the current tree node.</para>
      </summary>
      <value>The current node&#39;s unique identifier.</value>
    </member>
    <member name="M:DevExpress.Data.TreeList.TreeListNodeBase.IsDescendantOf(DevExpress.Data.TreeList.TreeListNodeBase)">
      <summary>
        <para>Indicates whether the current node belongs to the specified branch node.</para>
      </summary>
      <param name="node">The <see cref="T:DevExpress.Data.TreeList.TreeListNodeBase"/> object.</param>
      <returns>true if the specified branch node contains the current node; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.IsExpanded">
      <summary>
        <para>Gets or sets whether or not the node is expanded.</para>
      </summary>
      <value>true to expand the node; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.IsFiltered">
      <summary>
        <para>Gets whether the node is filtered or not.</para>
      </summary>
      <value>true the node is filtered; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.IsVisible">
      <summary>
        <para>Gets whether the treelist node is visible.</para>
      </summary>
      <value>true, if the current node is visible; otherwise, false.</value>
    </member>
    <member name="E:DevExpress.Data.TreeList.TreeListNodeBase.PropertyChanged">
      <summary>
        <para>Occurs every time any of the <see cref="P:DevExpress.Data.TreeList.TreeListNodeBase.Content"/> and <see cref="P:DevExpress.Data.TreeList.TreeListNodeBase.IsExpanded"/> properties have changed their value.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.RowHandle">
      <summary>
        <para>Gets the row handle that identifies the node.</para>
      </summary>
      <value>An integer value that specifies the row handle.</value>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.Tag">
      <summary>
        <para>Gets or sets the data associated with the node.</para>
      </summary>
      <value>An object that contains information associated with the current node.</value>
    </member>
    <member name="P:DevExpress.Data.TreeList.TreeListNodeBase.VisibleIndex">
      <summary>
        <para>Gets the node&#39;s position within a View among visible nodes.</para>
      </summary>
      <value>An integer value that specifies the node&#39;s position among visible nodes. -1 if the node is hidden.</value>
    </member>
    <member name="T:DevExpress.Data.UnboundColumnType">
      <summary>
        <para>Contains values that specify the data type and binding mode of columns.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Boolean">
      <summary>
        <para>Indicates that the column is unbound and it contains Boolean values (the <see cref="T:System.Boolean"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Bound">
      <summary>
        <para>Indicates that the column is bound to a field in the control&#39;s underlying data source. The type of data this column contains is determined by the bound field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.DateTime">
      <summary>
        <para>Indicates that the column is unbound and it contains date/time values (the <see cref="T:System.DateTime"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Decimal">
      <summary>
        <para>Indicates that the column is unbound and it contains decimal values (the <see cref="T:System.Decimal"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Integer">
      <summary>
        <para>Indicates that the column is unbound and it contains integer values (the <see cref="T:System.Int32"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Object">
      <summary>
        <para>Indicates that the column is unbound and it contains values of any type. A <see cref="T:DevExpress.XtraEditors.TextEdit"/> editor is assigned for the in-place editing of such a column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.String">
      <summary>
        <para>Indicates that the column is unbound and it contains string values (the <see cref="T:System.String"/> type).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.UnboundSource">
      <summary>
        <para>A data source used to supply and obtain a typed list of objects to data-aware controls in unbound mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSource"/> class.</para>
      </summary>
      <param name="container">An <see cref="T:System.ComponentModel.IContainer"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.Add">
      <summary>
        <para>Adds a new row to the end of the <see cref="T:DevExpress.Data.UnboundSource"/> list.</para>
      </summary>
      <returns>An integer index of the new row.</returns>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.Change(System.Int32,System.String)">
      <summary>
        <para>Changes the specified value.</para>
      </summary>
      <param name="row">An integer row number containing the value to be changed.</param>
      <param name="propertyName">A string which is the name of the property whose value should be changed.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.Clear">
      <summary>
        <para>Clears the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.UnboundSource.Count">
      <summary>
        <para>Specifies the item count in the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list.</para>
      </summary>
      <value>An integer which is the item count.</value>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.InsertAt(System.Int32)">
      <summary>
        <para>Inserts a new row at the specified position.</para>
      </summary>
      <param name="position">The integer index of the new row.</param>
    </member>
    <member name="P:DevExpress.Data.UnboundSource.Item(System.Int32,System.String)">
      <summary>
        <para>Specifies a value within the <see cref="T:DevExpress.Data.UnboundSource"/> list at a specific row index and with the specific property name.</para>
      </summary>
      <param name="rowIndex">The zero-based index of the value.</param>
      <param name="propertyName">A string which is the list property name.</param>
      <value>An object at the specific row index and with the specific property name.</value>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.Move(System.Int32,System.Int32)">
      <summary>
        <para>Moves the row to another position.</para>
      </summary>
      <param name="from">The integer specifying the current row index.</param>
      <param name="to">The integer specifying the new row index.</param>
    </member>
    <member name="P:DevExpress.Data.UnboundSource.Properties">
      <summary>
        <para>Gets the collection of the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s properties.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> object specifying the properties collection.</value>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the specified row.</para>
      </summary>
      <param name="index">The integer index of the row to be removed.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.Reset(System.Int32)">
      <summary>
        <para>Changes the capacity of the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list.</para>
      </summary>
      <param name="countAfterReset">An integer specifying the new row count.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSource.SetRowCount(System.Int32)">
      <summary>
        <para>Changes the row count in the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list.</para>
      </summary>
      <param name="count">An integer which is the new row count.</param>
    </member>
    <member name="E:DevExpress.Data.UnboundSource.UnboundSourceListChanged">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.UnboundSource.UnboundSourceListChanging">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.UnboundSource.ValueNeeded">
      <summary>
        <para>Occurs when a value is requested from the <see cref="T:DevExpress.Data.UnboundSource"/>.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.UnboundSource.ValuePushed">
      <summary>
        <para>Occurs when a value is set in the <see cref="T:DevExpress.Data.UnboundSource"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.UnboundSourceListChangedEventArgs">
      <summary>
        <para>Arguments passed to the <see cref="E:DevExpress.Data.UnboundSource.UnboundSourceListChanging"/> and <see cref="E:DevExpress.Data.UnboundSource.UnboundSourceListChanged"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.UnboundSourceListChangedEventArgs.#ctor(System.Boolean,System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSourceListChangedEventArgs"/> class.</para>
      </summary>
      <param name="isTriggeredByComponentApi">true, if the current event is triggered by the <see cref="T:DevExpress.Data.UnboundSource"/> component API; otherwise, false.</param>
      <param name="listChangedType">Gets the ListChangedType enumeration value indicating the type of change.</param>
      <param name="index">Gets the integer index of the <see cref="T:DevExpress.Data.UnboundSource"/> list row affected by the change.</param>
      <param name="propertyDescriptor">Gets the PropertyDescriptor of the <see cref="T:DevExpress.Data.UnboundSource"/> list property affected by the change.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSourceListChangedEventArgs.#ctor(System.Boolean,System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSourceListChangedEventArgs"/> class.</para>
      </summary>
      <param name="isTriggeredByComponentApi">true, if the current event is triggered by the <see cref="T:DevExpress.Data.UnboundSource"/> component API; otherwise, false.</param>
      <param name="listChangedType">Gets the ListChangedType enumeration value indicating the type of change.</param>
      <param name="newIndex">Gets the integer index of the <see cref="T:DevExpress.Data.UnboundSource"/> row affected by the change.</param>
      <param name="oldIndex"></param>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceListChangedEventArgs.IsTriggeredByComponentApi">
      <summary>
        <para>Gets a value indicating if the current event is triggered by the <see cref="T:DevExpress.Data.UnboundSource"/> component API.</para>
      </summary>
      <value>true, if the current event is triggered by the component API; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.UnboundSourceProperty">
      <summary>
        <para>Supplies information on a column of the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.UnboundSourceProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSourceProperty"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.UnboundSourceProperty.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSourceProperty"/> class.</para>
      </summary>
      <param name="name">A string that is the property name.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSourceProperty.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSourceProperty"/> class.</para>
      </summary>
      <param name="name">A string that is the property name.</param>
      <param name="propertyType">A <see cref="T:System.Type"/> object specifying the property type.</param>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceProperty.DisplayName">
      <summary>
        <para>Specifies the display name of the property.</para>
      </summary>
      <value>A string that is the property display name.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceProperty.Name">
      <summary>
        <para>Specifies the name of the property.</para>
      </summary>
      <value>A string that is the property name.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceProperty.PropertyType">
      <summary>
        <para>Specifies the property type</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object specifying the property type.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceProperty.UserTag">
      <summary>
        <para>Specifies an object that contains data associated with the property.</para>
      </summary>
      <value>An object that contains data associated with the property.</value>
    </member>
    <member name="T:DevExpress.Data.UnboundSourcePropertyCollection">
      <summary>
        <para>A collection of the <see cref="T:DevExpress.Data.UnboundSource"/>&#39;s list columns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.#ctor(DevExpress.Data.UnboundSource)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> class.</para>
      </summary>
      <param name="owner">An <see cref="T:DevExpress.Data.UnboundSource"/> object which owns the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.Add(DevExpress.Data.UnboundSourceProperty)">
      <summary>
        <para>Adds the specified item to the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> collection.</para>
      </summary>
      <param name="property">An <see cref="T:DevExpress.Data.UnboundSourceProperty"/> item to be added to the current <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.Add(DevExpress.Data.UnboundSourcePropertyCollection)">
      <summary>
        <para>Adds the specified items to the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> collection.</para>
      </summary>
      <param name="properties">An <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> list of items to be added to the current <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.AddRange(System.Collections.Generic.IEnumerable{DevExpress.Data.UnboundSourceProperty})">
      <summary>
        <para>Adds the specified items to the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> collection.</para>
      </summary>
      <param name="properties">An IEnumerable&lt;<see cref="T:DevExpress.Data.UnboundSourceProperty"/>&gt; list of items to be added to the current <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/>.</param>
    </member>
    <member name="M:DevExpress.Data.UnboundSourcePropertyCollection.ClearAndAddRange(System.Collections.Generic.IEnumerable{DevExpress.Data.UnboundSourceProperty})">
      <summary>
        <para>Clears the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> collection and adds the specified items to it.</para>
      </summary>
      <param name="properties">An IEnumerable&lt;<see cref="T:DevExpress.Data.UnboundSourceProperty"/>&gt; list of items to be added to the current <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/>.</param>
    </member>
    <member name="P:DevExpress.Data.UnboundSourcePropertyCollection.Item(System.Int32)">
      <summary>
        <para>Specifies an item within the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> collection at a specific index.</para>
      </summary>
      <param name="index">The zero-based index of the item.</param>
      <value>An <see cref="T:DevExpress.Data.UnboundSourceProperty"/> item at a specific index.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourcePropertyCollection.Item(System.String)">
      <summary>
        <para>Specifies an item within the <see cref="T:DevExpress.Data.UnboundSourcePropertyCollection"/> collection with a specific name.</para>
      </summary>
      <param name="name">A string which is the <see cref="P:DevExpress.Data.UnboundSourceProperty.Name"/> of the item.</param>
      <value>An <see cref="T:DevExpress.Data.UnboundSourceProperty"/> item with the specific name.</value>
    </member>
    <member name="T:DevExpress.Data.UnboundSourceValueNeededEventArgs">
      <summary>
        <para>Arguments, passed to the <see cref="E:DevExpress.Data.UnboundSource.ValueNeeded"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.PropertyIndex">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.PropertyName">
      <summary>
        <para>Gets the name of the property whose value is requested.</para>
      </summary>
      <value>A string which is the property name.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.RowIndex">
      <summary>
        <para>Gets the row index of the value.</para>
      </summary>
      <value>The integer index of the row.</value>
    </member>
    <member name="M:DevExpress.Data.UnboundSourceValueNeededEventArgs.SetValue``1(``0)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.Tag">
      <summary>
        <para>Gets an object that contains data associated with the value.</para>
      </summary>
      <value>An object that contains data associated with the value.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValueNeededEventArgs.Value">
      <summary>
        <para>Specifies the value which is requested.</para>
      </summary>
      <value>An object specifying the value which is requested.</value>
    </member>
    <member name="T:DevExpress.Data.UnboundSourceValuePushedEventArgs">
      <summary>
        <para>Arguments, passed to the <see cref="E:DevExpress.Data.UnboundSource.ValuePushed"/> event.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.PropertyName">
      <summary>
        <para>Gets the name of the property whose value is being set.</para>
      </summary>
      <value>A string that is the property name.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.RowIndex">
      <summary>
        <para>Gets the row index of the value.</para>
      </summary>
      <value>An integer index of the row.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.Tag">
      <summary>
        <para>Gets an object that contains data associated with the value.</para>
      </summary>
      <value>An object that contains data associated with the value.</value>
    </member>
    <member name="P:DevExpress.Data.UnboundSourceValuePushedEventArgs.Value">
      <summary>
        <para>Specifies the value which is being set.</para>
      </summary>
      <value>An object specifying the value which is being set.</value>
    </member>
    <member name="N:DevExpress.Data.Utils">
      <summary>
        <para>Contains utility classes and interfaces for DevExpress components.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Utils.IDataDirectoryPatchingService">
      <summary>
        <para>Allows you to change the path specified in the connection string as required to access the data source file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Utils.IDataDirectoryPatchingService.PatchPath(System.String)">
      <summary>
        <para>Translates a path specified in the connection string to an actual data source file path.</para>
      </summary>
      <param name="path">A <see cref="T:System.String"/> value, specifying a path to translate.</param>
      <returns>A <see cref="T:System.String"/> value that is the actual file path.</returns>
    </member>
    <member name="N:DevExpress.Data.Utils.ServiceModel">
      <summary>
        <para>Contains classes that provide client-side functionality for DevExpress components.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1">
      <summary>
        <para>Provides data for the corresponding events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.#ctor(System.Object,System.Exception,System.Boolean,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1"/> class with the specified settings.</para>
      </summary>
      <param name="result">A <see cref="T:System.Object"/> value. This value is assigned to the <see cref="P:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.Result"/> property.</param>
      <param name="error">A <see cref="T:System.Exception"/> value.</param>
      <param name="cancelled">true if the operation has been cancelled; otherwise false.</param>
      <param name="userState">A <see cref="T:System.Object"/> value.</param>
    </member>
    <member name="P:DevExpress.Data.Utils.ServiceModel.ScalarOperationCompletedEventArgs`1.Result">
      <summary>
        <para>Returns the scalar operation result.</para>
      </summary>
      <value>A generic value.</value>
    </member>
    <member name="T:DevExpress.Data.VirtualServerModeConfigurationInfo">
      <summary>
        <para>Contains information on the sorting, filtering and summary configurations applied in the bound grid control.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeConfigurationInfo.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.ServerModeOrderDescriptor[],DevExpress.Data.ServerModeSummaryDescriptor[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeConfigurationInfo"/> class with the specified settings.</para>
      </summary>
      <param name="filter">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeConfigurationInfo.Filter"/> property.</param>
      <param name="sortInfo">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeConfigurationInfo.SortInfo"/> property.</param>
      <param name="totalSummary">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeConfigurationInfo.TotalSummary"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeConfigurationInfo.Filter">
      <summary>
        <para>Gets the grid&#39;s current filter criteria.</para>
      </summary>
      <value>The filter criteria applied to the grid.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeConfigurationInfo.SortInfo">
      <summary>
        <para>Gets the grid&#39;s current column sorting configuration.</para>
      </summary>
      <value>The column sorting configuration applied to the grid.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeConfigurationInfo.TotalSummary">
      <summary>
        <para>Gets the total summaries the grid asks the data source to calculate.</para>
      </summary>
      <value>The total summaries the grid asks the data source to calculate.</value>
    </member>
    <member name="T:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.VirtualServerModeSource.GetUniqueValues"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.#ctor(System.Threading.CancellationToken,DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Data.Filtering.CriteriaOperator,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="cancellationToken">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.CancellationToken"/> property.</param>
      <param name="valuesExpression">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.ValuesExpression"/> property.</param>
      <param name="filterExpression">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.FilterExpression"/> property.</param>
      <param name="maxCount">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.MaxCount"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.CancellationToken">
      <summary>
        <para>Gets a token that allows you to respond to a task cancellation request invoked by the grid control.</para>
      </summary>
      <value>A cancellation token.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.FilterExpression">
      <summary>
        <para>Gets the filter expression applied to the grid.</para>
      </summary>
      <value>The filter expression applied to the grid</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.MaxCount">
      <summary>
        <para>Gets the maximum number of filter values to return.</para>
      </summary>
      <value>The maximum number of filter values to return</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.UniqueValuesTask">
      <summary>
        <para>Gets or sets the task that returns requested values.</para>
      </summary>
      <value>A Task that returns requested values.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.ValuesExpression">
      <summary>
        <para>Gets or sets the expression that identifies the currently processed column. This can be a field name or an expression (for calculated columns).</para>
      </summary>
      <value>The expression that identifies the currently processed column.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeGetUniqueValuesEventArgs.ValuesPropertyName">
      <summary>
        <para>Gets the currently processed column name (field name), provided that this name can be unambiguously identified.</para>
      </summary>
      <value>The currently processed column name.</value>
    </member>
    <member name="T:DevExpress.Data.VirtualServerModeRowsEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.VirtualServerModeSource.MoreRows"/> and <see cref="E:DevExpress.Data.VirtualServerModeSource.ConfigurationChanged"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeRowsEventArgs.#ctor(System.Threading.CancellationToken,DevExpress.Data.VirtualServerModeConfigurationInfo,System.Int32,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeRowsEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="cancellationToken">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsEventArgs.CancellationToken"/>  object.</param>
      <param name="configurationInfo">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsEventArgs.ConfigurationInfo"/>  object.</param>
      <param name="currentRowCount">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsEventArgs.CurrentRowCount"/>  object.</param>
      <param name="userData">An object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsEventArgs.UserData"/>  object.</param>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsEventArgs.CancellationToken">
      <summary>
        <para>Gets a token that allows you to respond to a task cancellation request invoked by the grid control.</para>
      </summary>
      <value>A cancellation token.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsEventArgs.ConfigurationInfo">
      <summary>
        <para>Gets information on the grid&#39;s current sorting, filtering and summary configuration.</para>
      </summary>
      <value>An object that provides the grid&#39;s sorting, filtering and summary configuration.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsEventArgs.CurrentRowCount">
      <summary>
        <para>Gets the count of rows currently loaded to the grid.</para>
      </summary>
      <value>The number of loaded rows.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsEventArgs.RowsTask">
      <summary>
        <para>Gets or sets the task that returns requested rows.</para>
      </summary>
      <value>A Task that returns requested rows.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsEventArgs.UserData">
      <summary>
        <para>Read this parameter to get custom data passed from the previously called Task or ConfigurationChanged event handler.
When handling the <see cref="E:DevExpress.Data.VirtualServerModeSource.ConfigurationChanged"/> event, set the UserData event parameter to pass custom data to a subsequent <see cref="E:DevExpress.Data.VirtualServerModeSource.MoreRows"/> event handler (unless you specify the RowsTask event parameter).</para>
      </summary>
      <value>Any custom data.</value>
    </member>
    <member name="T:DevExpress.Data.VirtualServerModeRowsTaskResult">
      <summary>
        <para>The type of the result for Tasks created in your <see cref="E:DevExpress.Data.VirtualServerModeSource.MoreRows"/> and <see cref="E:DevExpress.Data.VirtualServerModeSource.ConfigurationChanged"/> event handlers.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeRowsTaskResult.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeRowsTaskResult"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeRowsTaskResult.#ctor(System.Collections.ICollection,System.Boolean,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeRowsTaskResult"/> class with the specified settings.</para>
      </summary>
      <param name="rows">The object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsTaskResult.Rows"/> property.</param>
      <param name="moreRowsAvailable">The object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsTaskResult.MoreRowsAvailable"/> property.</param>
      <param name="userData">The object to initialize the <see cref="P:DevExpress.Data.VirtualServerModeRowsTaskResult.UserData"/> property.</param>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsTaskResult.MoreRowsAvailable">
      <summary>
        <para>Gets or sets whether additional rows are available.</para>
      </summary>
      <value>true, if more rows are available; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsTaskResult.Rows">
      <summary>
        <para>Gets or sets the row collection for the current batch.</para>
      </summary>
      <value>The collection of rows to retrieve.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeRowsTaskResult.UserData">
      <summary>
        <para>Gets or sets custom data to pass to your <see cref="E:DevExpress.Data.VirtualServerModeSource.MoreRows"/> event handler the next time this event is called.</para>
      </summary>
      <value>Custom data.</value>
    </member>
    <member name="T:DevExpress.Data.VirtualServerModeSource">
      <summary>
        <para>A data source that features event-based data operations: async data load, sorting, filtering and infinite scrolling through records (in a bound Windows Forms <see cref="T:DevExpress.XtraGrid.GridControl"/>).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeSource.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeSource"/> class with the specified owner container.</para>
      </summary>
      <param name="container">The owner container of the created <see cref="T:DevExpress.Data.VirtualServerModeSource"/> instance.</param>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeSource.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.VirtualServerModeSource"/> class with the specified row type.</para>
      </summary>
      <param name="rowType">A value to initialize the <see cref="P:DevExpress.Data.VirtualServerModeSource.RowType"/> property.</param>
    </member>
    <member name="E:DevExpress.Data.VirtualServerModeSource.AcquireInnerList">
      <summary>
        <para>This event can be handled to provide an inner list that will be storage for rows fetched using the VirtualServerModeSource&#39;s events. 
To enable CRUD operations in a bound Data Grid, you need to provide an inner list that supports these operations. If no inner list is supplied (or you do not handle the AcquireInnerList event), CRUD operations are disabled in the grid control.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.VirtualServerModeSource.CanPerformColumnServerAction">
      <summary>
        <para>Allows you to specify whether the requested filtering, sorting or summary calculation operation needs to be accepted or canceled.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.VirtualServerModeSource.ConfigurationChanged">
      <summary>
        <para>Fires on initial data load and reload in the bound grid control, and when the data grid&#39;s sort and filter configuration changes.
Allows you to initialize the data source and (optionally) return an initial batch of records.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.VirtualServerModeSource.GetUniqueValues">
      <summary>
        <para>Allows you to provide values for columns&#39; filter dropdowns.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.VirtualServerModeSource.MoreRows">
      <summary>
        <para>Fires when a bound grid control asks the data source for a new batch of rows.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeSource.Refresh">
      <summary>
        <para>Reloads data from your source by firing the dedicated events (<see cref="E:DevExpress.Data.VirtualServerModeSource.ConfigurationChanged"/> and <see cref="E:DevExpress.Data.VirtualServerModeSource.MoreRows"/>).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeSource.RowType">
      <summary>
        <para>Gets or sets the type of object whose public properties identify data-aware control columns.</para>
      </summary>
      <value>The row object&#39;s type.</value>
    </member>
    <member name="E:DevExpress.Data.VirtualServerModeSource.TotalSummary">
      <summary>
        <para>Fires when a grid control asks the data source to calculate total summaries.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.VirtualServerModeSource.TotalSummary"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.#ctor(System.Threading.CancellationToken,DevExpress.Data.VirtualServerModeConfigurationInfo,System.Action{System.Collections.Generic.IDictionary{DevExpress.Data.ServerModeSummaryDescriptor,System.Object}})">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="configurationInfo"></param>
      <param name="notifyIntermediateSummaryReady"></param>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.CancellationToken">
      <summary>
        <para>Gets a token that allows you to respond to a task cancellation request invoked by the grid control.</para>
      </summary>
      <value>A cancellation token.</value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.ConfigurationInfo">
      <summary>
        <para>Gets information on the grid&#39;s current sorting, filtering and summary configuration.</para>
      </summary>
      <value>An object that provides the grid&#39;s sorting, filtering and summary configuration.</value>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.NotifyIntermediateSummaryReady(System.Collections.Generic.IDictionary{DevExpress.Data.ServerModeSummaryDescriptor,System.Object})">
      <summary>
        <para></para>
      </summary>
      <param name="intermediateSummary"></param>
    </member>
    <member name="M:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.NotifySummaryReady(System.Collections.Generic.IDictionary{DevExpress.Data.ServerModeSummaryDescriptor,System.Object})">
      <summary>
        <para>Allows you to update the bound grid control with intermediate summary values.</para>
      </summary>
      <param name="intermediateSummary">A dictionary that contains intermediate summary values.</param>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.NotReadyObject">
      <summary>
        <para>This member supports the internal infrastructure.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.VirtualServerModeTotalSummaryEventArgs.TotalSummaryTask">
      <summary>
        <para>Gets or sets the task that returns the requested summary value.</para>
      </summary>
      <value>A Task that returns a summary value.</value>
    </member>
    <member name="N:DevExpress.Data.WcfLinq">
      <summary>
        <para>Contains classes enabling server-side data management for the WCF Data Services provider.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.WcfLinq.GetSourceEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.GetSource"/> and <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.DismissSource"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.GetSourceEventArgs.#ctor(DevExpress.Data.Helpers.ServerModeCoreExtender)">
      <summary>
        <para>This constructor is intended for internal use.</para>
      </summary>
      <param name="extender"></param>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.GetSourceEventArgs.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.GetSourceEventArgs.Extender">
      <summary>
        <para>This property is intended for internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.GetSourceEventArgs.KeyExpression">
      <summary>
        <para>Gets or sets the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value indicating the key property name.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.GetSourceEventArgs.Query">
      <summary>
        <para>Specifies the query request to the WCF data service.</para>
      </summary>
      <value>An IQueryable object that specifies the query request to the WCF data service.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.GetSourceEventArgs.Tag">
      <summary>
        <para>Gets or sets an arbitrary object associated with a queryable source.</para>
      </summary>
      <value>An object associated with a queryable source.</value>
    </member>
    <member name="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit controls that binds these controls to a WCF Data Service in Instant Feedback Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.WcfLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An Action&lt;<see cref="T:DevExpress.Data.WcfLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.#ctor(System.Action{DevExpress.Data.WcfLinq.GetSourceEventArgs},System.Action{DevExpress.Data.WcfLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An Action&lt;<see cref="T:DevExpress.Data.WcfLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
      <param name="freeSource">An Action&lt;<see cref="T:DevExpress.Data.WcfLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.DismissSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.WcfLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An EventHandler&lt;<see cref="T:DevExpress.Data.WcfLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.#ctor(System.EventHandler{DevExpress.Data.WcfLinq.GetSourceEventArgs},System.EventHandler{DevExpress.Data.WcfLinq.GetSourceEventArgs})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> with the specified settings.</para>
      </summary>
      <param name="getSource">An EventHandler&lt;<see cref="T:DevExpress.Data.WcfLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.GetSource"/> event. The specified delegate is attached to this event.</param>
      <param name="freeSource">An EventHandler&lt;<see cref="T:DevExpress.Data.WcfLinq.GetSourceEventArgs"/>&gt; delegate, which is a method that will handle the <see cref="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.DismissSource"/> event. The specified delegate is attached to this event.</param>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.AreSourceRowsThreadSafe">
      <summary>
        <para>Specifies whether elements retrieved by the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/>&#39;s queryable source are thread-safe.</para>
      </summary>
      <value>true, if elements retrieved by the queryable source are thread-safe; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.DesignTimeElementType">
      <summary>
        <para>Specifies the type of objects that will be retrieved from a data source, at design time.</para>
      </summary>
      <value>A type of objects that will be retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.DismissSource">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> no longer needs the queryable source it used to retrieve objects from the WCF data service.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.FixedFilterString">
      <summary>
        <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.</para>
      </summary>
      <value>A string specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="E:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.GetSource">
      <summary>
        <para>Occurs when the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/> needs a queryable source, to retrieve objects from the WCF data service.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.KeyExpression">
      <summary>
        <para>Specifies the name of the key property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the key property name.</value>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource.Refresh">
      <summary>
        <para>Refreshes the <see cref="T:DevExpress.Data.WcfLinq.WcfInstantFeedbackSource"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.WcfLinq.WcfServerModeSource">
      <summary>
        <para>The data source for the GridControl and SearchLookUpEdit controls that binds these controls to a WCF Data Service in Server Mode.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfServerModeSource.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WcfLinq.WcfServerModeSource"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfServerModeSource.#ctor(DevExpress.Data.Helpers.ServerModeCoreExtender)">
      <summary>
        <para>This constructor is intended for internal use.</para>
      </summary>
      <param name="extender"></param>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.DefaultSorting">
      <summary>
        <para>Specifies how data source contents are sorted by default, when the sort order is not specified by the bound control.</para>
      </summary>
      <value>The string which contains the column name(s) against which data source contents are sorted and the sort order(s).</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.ElementType">
      <summary>
        <para>Specifies the type of objects retrieved from a data source.</para>
      </summary>
      <value>The type of objects retrieved from a data source.</value>
    </member>
    <member name="E:DevExpress.Data.WcfLinq.WcfServerModeSource.ExceptionThrown">
      <summary>
        <para>Occurs when a data source exception is thrown.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.Extender">
      <summary>
        <para>This property is intended for internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.FixedFilterCriteria">
      <summary>
        <para>Specifies the criteria used to filter objects on the data store side. These criteria are never affected by bound data-aware controls.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.FixedFilterString">
      <summary>
        <para>Specifies a string representation of an expression used to filter objects on the data store side. This filter is never affected by bound data-aware controls.</para>
      </summary>
      <value>A string specifying the filter expression applied to data on the data store side.</value>
    </member>
    <member name="E:DevExpress.Data.WcfLinq.WcfServerModeSource.InconsistencyDetected">
      <summary>
        <para>Occurs when an inconsistency has been detected during an operation on a data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.KeyExpression">
      <summary>
        <para>Specifies the key expression.</para>
      </summary>
      <value>A string that specifies the key expression.</value>
    </member>
    <member name="P:DevExpress.Data.WcfLinq.WcfServerModeSource.Query">
      <summary>
        <para>Specifies the query request to the WCF data service.</para>
      </summary>
      <value>An IQueryable object that specifies the query request to the WCF data service.</value>
    </member>
    <member name="M:DevExpress.Data.WcfLinq.WcfServerModeSource.Reload">
      <summary>
        <para>Forces the bound data-aware control to reload data from the data store.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.WcfLinq.WcfServerModeSource.UseCountInsteadOfIncludeTotalCount">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="N:DevExpress.Data.WizardFramework">
      <summary>
        <para>Provides basic functionality to the Report Wizard pages in WinForms and WPF applications.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.IWizardModel">
      <summary>
        <para>If implemented, provides the Model functionality to a Data Source Wizard.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.IWizardPage`1">
      <summary>
        <para>If implemented, represents a page of the Report Wizard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.Begin">
      <summary>
        <para>If implemented, initializes controls of a Report Wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.IWizardPage`1.Changed">
      <summary>
        <para>Occurs when settings on the current wizard page were changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.IWizardPage`1.Error">
      <summary>
        <para>Fires when an error occurs for the current report page.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.GetNextPageType">
      <summary>
        <para>If implemented, returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.Model">
      <summary>
        <para>If implemented, provides access to the wizard model, which accumulates settings specified by an end-user during wizard execution.</para>
      </summary>
      <value>A TModel object containing settings specified by an end-user during wizard execution.</value>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.IWizardPage`1.PageContent">
      <summary>
        <para>If implemented, provides access to the content of a wizard page.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardPage`1.Validate(System.String@)">
      <summary>
        <para>If implemented, validates the correctness of settings specified on a wizard page.</para>
      </summary>
      <param name="errorMessage">A <see cref="T:System.String"/> value specifying the text of an error message shown if the validation fails.</param>
      <returns>true, if the validation succeeded; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.IWizardPageFactory`1">
      <summary>
        <para>A factory that creates Data Source wizard pages.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardPageFactory`1.GetPage(System.Type)">
      <summary>
        <para>Returns a wizard page of the specified type.</para>
      </summary>
      <param name="pageType">A <see cref="T:System.Type"/> enumeration value.</param>
      <returns>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardPage`1"/> interface.</returns>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.IWizardView">
      <summary>
        <para>If implemented, provides the View functionality to the Data Source Wizard.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.IWizardView.Cancel">
      <summary>
        <para>Occurs after clicking the Cancel button in a wizard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardView.EnableFinish(System.Boolean)">
      <summary>
        <para>Specifies whether or not the Finish button is available in a wizard.</para>
      </summary>
      <param name="enable">true, if the Finish button is available; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardView.EnableNext(System.Boolean)">
      <summary>
        <para>Specifies whether or not the Next button is available in a wizard.</para>
      </summary>
      <param name="enable">true, if the Next button is available; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardView.EnablePrevious(System.Boolean)">
      <summary>
        <para>Specifies whether or not the Previous button is available in a wizard.</para>
      </summary>
      <param name="enable">true, if the Previous button is available; otherwise, false.</param>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.IWizardView.Finish">
      <summary>
        <para>Occurs after clicking the Finish button in a wizard.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.IWizardView.Next">
      <summary>
        <para>Occurs after clicking the Next button in a wizard.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.IWizardView.Previous">
      <summary>
        <para>Occurs after clicking the Previous button in a wizard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardView.SetPageContent(System.Object)">
      <summary>
        <para>Specifies the content of a wizard page.</para>
      </summary>
      <param name="content">A <see cref="T:System.Object"/> value.</param>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.IWizardView.ShowError(System.String)">
      <summary>
        <para>Displays an error message with a specified text.</para>
      </summary>
      <param name="error">A <see cref="T:System.String"/> value.</param>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.Wizard`1">
      <summary>
        <para>A Data Source Wizard instance associated with a specific View.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.Wizard`1.#ctor(DevExpress.Data.WizardFramework.IWizardView,`0,DevExpress.Data.WizardFramework.IWizardPageFactory{`0})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WizardFramework.Wizard`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardView"/> interface.</param>
      <param name="model">An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardModel"/> interface.</param>
      <param name="pageFactory">An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardPageFactory`1"/> interface.</param>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.Wizard`1.Cancelled">
      <summary>
        <para>Occurs when a wizard execution has been cancelled.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.Wizard`1.Completed">
      <summary>
        <para>Occurs when a wizard execution has been completed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.Wizard`1.CurrentPage">
      <summary>
        <para>Returns the current wizard page.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardPage`1"/> interface.</value>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.Wizard`1.GetResultModel">
      <summary>
        <para>Returns the resulting wizard model.</para>
      </summary>
      <returns>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardModel"/> interface.</returns>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.Wizard`1.NextPageShowing">
      <summary>
        <para>Occurs when a wizard has been navigated to the next page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.Wizard`1.SetStartPage(System.Type)">
      <summary>
        <para>Specifies the starting wizard page.</para>
      </summary>
      <param name="pageType">A <see cref="T:System.Type"/> enumeration value.</param>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.Wizard`1.View">
      <summary>
        <para>Provides access to an object that provides the view functionality to a Data Source Wizard.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardView"/> interface.</value>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.WizardPageBase`2">
      <summary>
        <para>The base for classes providing functionality to Data Source Wizard pages.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.WizardPageBase`2.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.WizardPageBase`2.Changed">
      <summary>
        <para>Occurs when settings on the current wizard page were changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.WizardPageBase`2.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.WizardFramework.WizardPageBase`2.Error">
      <summary>
        <para>Fires when an error occurs for the current report page.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.WizardPageBase`2.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.WizardPageBase`2.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.WizardPageBase`2.Model">
      <summary>
        <para>Provides access to the wizard model, which accumulates settings specified by an end-user during wizard execution.</para>
      </summary>
      <value>A TModel object containing settings specified by an end-user during wizard execution.</value>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.WizardPageBase`2.MoveNextEnabled">
      <summary>
        <para>Specifies whether of not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.WizardPageBase`2.PageContent">
      <summary>
        <para>Provides access to the content of a wizard page.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.WizardPageBase`2.Validate(System.String@)">
      <summary>
        <para>Validates the correctness of settings specified on a wizard page.</para>
      </summary>
      <param name="errorMessage">A <see cref="T:System.String"/> value specifying the text of an error message shown if the validation fails.</param>
      <returns>true, if the validation succeeded; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.Data.WizardFramework.IWizardPage`1.Error"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs"/> class with the specified error message.</para>
      </summary>
      <param name="errorMessage">A <see cref="T:System.String"/> value, specifying the error message.</param>
    </member>
    <member name="P:DevExpress.Data.WizardFramework.WizardPageErrorEventArgs.ErrorMessage">
      <summary>
        <para>Specifies the text of an error message.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the error message.</value>
    </member>
    <member name="N:DevExpress.Data.XtraReports.DataProviders">
      <summary>
        <para>Contains classes that define the data connectivity for a WPF Report Wizard.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo">
      <summary>
        <para>Contains data related to columns available in a datasource.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.Clone">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> instance, which is a copy of the current instance.</para>
      </summary>
      <returns>A new <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> instance, which is a copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.DataProviders.ColumnInfo.TypeSpecifics">
      <summary>
        <para>For internal use. Specifies the type of data column to draw an appropriate icon in the WPF Report Designer&#39;s Field List.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Browsing.Design.TypeSpecifics"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.DataProviders.DataMemberType">
      <summary>
        <para>Lists the available data member types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.Query">
      <summary>
        <para>The data member is a query.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.StoredProcedure">
      <summary>
        <para>The data member is a stored procedure.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.Table">
      <summary>
        <para>The data member is a table.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.DataProviders.DataMemberType.View">
      <summary>
        <para>The data member is a view.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo">
      <summary>
        <para>Contains information about a data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.Clone">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> instance, which is a copy of the current instance.</para>
      </summary>
      <returns>A new <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> instance, which is a copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo.TablesOrViewsSupported">
      <summary>
        <para>For internal use. Specifies whether a datasource is table-based (e.g., a database), or object-model-based (e.g., an XPO object).</para>
      </summary>
      <value>true if the datasource is table-based; otherwise false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1">
      <summary>
        <para>The base class for the <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/>, <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> and <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects that are stored in a Report Wizard&#39;s model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.DisplayName">
      <summary>
        <para>Specifies the data source display name for a WPF Report Wizard.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the data source display name.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.DataProviders.EntityInfo`1.Name">
      <summary>
        <para>Specifies the data source name.</para>
      </summary>
      <value>A TName object that is the name of the entity.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo">
      <summary>
        <para>Provides information about a stored procedure.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo"/> class with specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value specifying the stored procedure name.</param>
      <param name="displayName">A <see cref="T:System.String"/> value specifying the stored procedure display name.</param>
      <param name="parameters">A collection of stored procedure parameters.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo"/>.</para>
      </summary>
      <returns>An object that represents a newly created copy of the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.StoredProcedureInfo"/>.</returns>
    </member>
    <member name="T:DevExpress.Data.XtraReports.DataProviders.TableInfo">
      <summary>
        <para>When connecting to a data source using the WPF Report Wizard, assigns identifiers to data tables, views and stored procedures, as well as their data members.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfo.Clone">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> instance, which is a copy of the current instance.</para>
      </summary>
      <returns>A new <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> instance, which is a copy of the current instance.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.DataProviders.TableInfo.DataMemberType">
      <summary>
        <para>Classifies the data member that belongs to a connected data source.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataMemberType"/> enumeration value, classifying the data member.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfo.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.DataProviders.TableInfo.GetHashCode">
      <summary>
        <para>Gets the hash code that corresponds to the value of the current <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="N:DevExpress.Data.XtraReports.Labels">
      <summary>
        <para>This namespace is no longer used. Use classes from the <see cref="N:DevExpress.XtraReports.Wizards.Labels"/> namespace instead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.ILabelProductRepository"/> interface instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetPaperKindData(System.Int32)">
      <summary>
        <para>Provides information about a specified paper kind.</para>
      </summary>
      <param name="paperKindId">An integer value, identifying the paper kind.</param>
      <returns>A <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> value.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetSortedPaperKinds">
      <summary>
        <para>If implemented, obtains a sorted collection of the supported paper kinds.</para>
      </summary>
      <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetSortedProductDetails(System.Int32)">
      <summary>
        <para>If implemented, obtains a sorted collection of details for the supported label products.</para>
      </summary>
      <param name="productId">An integer value.</param>
      <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.ILabelProductRepository.GetSortedProducts">
      <summary>
        <para>If implemented, obtains a sorted collection of supported label products.</para>
      </summary>
      <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> objects.</returns>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.LabelDetails">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelDetails"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.LabelDetails.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.BottomMargin">
      <summary>
        <para>Specifies the bottom margin of a label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Height">
      <summary>
        <para>Specifies the label&#39;s height.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.HPitch">
      <summary>
        <para>Specifies the horizontal pitch of a label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Id">
      <summary>
        <para>Specifies the Id of a label.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.LeftMargin">
      <summary>
        <para>Specifies the left margin of a label.</para>
      </summary>
      <value>A value that specifies the label&#39;s left margin.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Name">
      <summary>
        <para>Specifies the name of a label.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.PaperKindId">
      <summary>
        <para>Specifies the paper kind ID of a label.</para>
      </summary>
      <value>A value that specifies the label&#39;s paper kind ID.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.ProductId">
      <summary>
        <para>Specifies the label&#39;s product.</para>
      </summary>
      <value>An integer value specifying the product Id.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.RightMargin">
      <summary>
        <para>Specifies the right margin of a label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.TopMargin">
      <summary>
        <para>Specifies the top margin of a label.</para>
      </summary>
      <value>A value that specifies the label&#39;s top margin.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Unit">
      <summary>
        <para>Specifies a unit of measure of a label.</para>
      </summary>
      <value>A value that specifies the label&#39;s unit of measure.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.VPitch">
      <summary>
        <para>Specifies the vertical pitch of a label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelDetails.Width">
      <summary>
        <para>Specifies the label&#39;s width.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.LabelProduct">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelProduct"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.LabelProduct.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelProduct.Id">
      <summary>
        <para>Specifies the label product Id.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelProduct.Name">
      <summary>
        <para>Specifies the label product name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelProductRepositoryFactory"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.LabelProductRepositoryFactory.Create">
      <summary>
        <para>Creates an <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/>.</para>
      </summary>
      <returns>An object implementing the <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> object.)</returns>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.LabelWizardCustomization">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.LabelWizardCustomization"/> class instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.LabelWizardCustomization.ExternalLabelProductRepository">
      <summary>
        <para>Specifies a path to an XML file containing custom label product definitions.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the path to an XML file.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.PaperKindData">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.PaperKindData"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.PaperKindData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.EnumId">
      <summary>
        <para>Specifies the Id of a paper kind in the System.Drawing.Printing.PaperKind enumeration.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Height">
      <summary>
        <para>Specifies the height of a paper kind.</para>
      </summary>
      <value>A string value that specifies the paper kind height.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Id">
      <summary>
        <para>Specifies the Id of a paper kind.</para>
      </summary>
      <value>An integer value, specifying the paper kind ID.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.IsRollPaper">
      <summary>
        <para>Specifies whether a paper kind is supposed to be printed as a single uninterrupted page.</para>
      </summary>
      <value>true, to provide a continuous document layout suited for roll paper printing; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Name">
      <summary>
        <para>Specifies the name of a paper kind.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the paper kind name.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Unit">
      <summary>
        <para>Specifies the unit of measure of a paper kind.</para>
      </summary>
      <value>A value that specifies the unit of measure of the paper kind.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.PaperKindData.Validate">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Labels.PaperKindData.Width">
      <summary>
        <para>Specifies the width of a paper kind.</para>
      </summary>
      <value>A string value that specifies the paper kind width.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Labels.XDocumentLabelProductRepository"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.#ctor(System.Xml.Linq.XDocument)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> class with the specified XML document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Xml.Linq.XDocument"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetPaperKindData(System.Int32)">
      <summary>
        <para>Provides information about a specified paper kind.</para>
      </summary>
      <param name="id">An integer value, identifying the paper kind.</param>
      <returns>A <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> value.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetSortedPaperKinds">
      <summary>
        <para>Obtains a sorted collection of the supported paper kinds.</para>
      </summary>
      <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetSortedProductDetails(System.Int32)">
      <summary>
        <para>Obtains a sorted collection of details for the supported label products.</para>
      </summary>
      <param name="productId">An integer value.</param>
      <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository.GetSortedProducts">
      <summary>
        <para>Obtains a sorted collection of the supported label products.</para>
      </summary>
      <returns>A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> objects.</returns>
    </member>
    <member name="N:DevExpress.Data.XtraReports.ServiceModel">
      <summary>
        <para>Contains classes that provide client-side functionality for a WPF Report Wizard.These interfaces are no longer used in the current implementation of the Report Wizard for WPF.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.XtraReports.ServiceModel.DataContracts">
      <summary>
        <para>Contains classes that maintain the client-server interaction of the Report Service.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy">
      <summary>
        <para>Obsolete. This class is no longer used in the current Data Source Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.#ctor(DevExpress.Data.Browsing.Design.TypeSpecifics)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy"/> class with the specified settings.</para>
      </summary>
      <param name="specifics">A <see cref="T:DevExpress.Data.Browsing.Design.TypeSpecifics"/> enumeration value.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.CreateFrom(DevExpress.Data.Browsing.Design.IPropertyDescriptor)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="from"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.DisplayName">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.IsComplex">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.IsListType">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.Name">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.Specifics">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.ToString">
      <summary>
        <para>For internal use.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.ServiceModel.DataContracts.PropertyDescriptorProxy.ToStringValue">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient">
      <summary>
        <para>Obsolete. This page is no longer used in the current Report Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetColumnsAsync(System.String,DevExpress.Data.XtraReports.DataProviders.TableInfo,System.Object)">
      <summary>
        <para>Obtains columns from a data source (asynchronously).</para>
      </summary>
      <param name="dataSourceName">A <see cref="T:System.String"/> value.</param>
      <param name="dataMemberName">A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.</param>
      <param name="asyncState">A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.</param>
    </member>
    <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetColumnsCompleted">
      <summary>
        <para>Occurs when all data columns have been obtained.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataMembersAsync(System.String,System.Object)">
      <summary>
        <para>Obtains the data members from a report&#39;s data source (asynchronously).</para>
      </summary>
      <param name="dataSourceName">A <see cref="T:System.String"/> value, specifying the data source name.</param>
      <param name="asyncState">A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.</param>
    </member>
    <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataMembersCompleted">
      <summary>
        <para>Occurs when all data members have been obtained.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataSourcesAsync(System.Object)">
      <summary>
        <para>Obtains a report&#39;s data sources (asynchronously).</para>
      </summary>
      <param name="asyncState">A <see cref="T:System.Object"/> value, containing information about the asynchronous operation.</param>
    </member>
    <member name="E:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient.GetDataSourcesCompleted">
      <summary>
        <para>Occurs when the data sources have been obtained.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Data.XtraReports.Wizard">
      <summary>
        <para>This namespace is no longer used. Use classes from the <see cref="N:DevExpress.XtraReports.Wizards"/> namespace instead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.ColumnInfoCache"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache.Columns">
      <summary>
        <para>Specifies the collection of selected data columns while running the Report Wizard.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.#ctor(DevExpress.Data.XtraReports.DataProviders.ColumnInfo,DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions"/> class with the specified settings.</para>
      </summary>
      <param name="column">A <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> object. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.ColumnInfo"/> property.</param>
      <param name="flags">A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration value.</param>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.ColumnInfo">
      <summary>
        <para>Specifies the data columns available in the Report Wizard.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> object.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions.Options">
      <summary>
        <para>Provides access to the summary options available on the Specify Summary Options (Multi-Query Version) page of the Report Wizard.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptions"/> object.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.ColumnNameSummaryOptions"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> class with the specified settings.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value, specifying the column name. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.ColumnName"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.#ctor(System.String,DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> class with the specified settings.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value, specifying the column name. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.ColumnName"/> property.</param>
      <param name="flags">A <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Flags"/> property.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> instance.</para>
      </summary>
      <returns>A <see cref="T:System.Object"/> value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.ColumnName">
      <summary>
        <para>Specifies the data column, across which a summary function is calculated.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the column name.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> instance; otherwise false.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.Flags">
      <summary>
        <para>Specifies the summary functions to display on the Specify Summary Options (Multi-Query Version) page of the Report Wizard.</para>
      </summary>
      <value>One or more <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration values.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.CustomLabelInformation"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.BottomMargin">
      <summary>
        <para>Specifies the bottom margin of a custom label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation"/> instance.</para>
      </summary>
      <returns>A <see cref="T:System.Object"/> value.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Height">
      <summary>
        <para>Specifies the height of a custom label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure, specifying the custom label&#39;s height.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.HorizontalPitch">
      <summary>
        <para>Specifies the horizontal pitch of a custom label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure, specifying the custom label&#39;s horizontal pitch.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.LeftMargin">
      <summary>
        <para>Specifies the left margin of a custom label.</para>
      </summary>
      <value>A structure that specifies the custom label&#39;s left margin.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.PaperKindDataId">
      <summary>
        <para>Specifies the paper kind ID of a custom label.</para>
      </summary>
      <value>An integer value, specifying the paper kind ID.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.RightMargin">
      <summary>
        <para>Specifies the right margin of a custom label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.TopMargin">
      <summary>
        <para>Specifies the top margin of a custom label.</para>
      </summary>
      <value>A structure that specifies the custom label&#39;s top label.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Unit">
      <summary>
        <para>Specifies the unit of measurement of a custom label.</para>
      </summary>
      <value>A structure that specifies the custom label&#39;s unit of measurement.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.VerticalPitch">
      <summary>
        <para>Specifies the vertical pitch of a custom label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure, specifying the custom label&#39;s vertical pitch.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation.Width">
      <summary>
        <para>Specifies the width of a custom label.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> structure, specifying the custom label&#39;s width.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.GroupingLevelInfo"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.#ctor(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> class with the specified data columns.</para>
      </summary>
      <param name="columns">An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</param>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.Columns">
      <summary>
        <para>Provides access to the data columns used as grouping criteria for the current grouping level.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.ContainsColumn(System.String)">
      <summary>
        <para>Checks whether or not a grouping level contains the specified data column.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value, specifying the data column name.</param>
      <returns>true, if the grouping level contains the specified column; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.DisplayName">
      <summary>
        <para>Gets the display name of a grouping level.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the grouping level display name.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.IColumnInfoCache"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache.Columns">
      <summary>
        <para>Specifies the collection of selected data columns while running the Report Wizard.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.PaperKindViewInfo"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.DisplayName">
      <summary>
        <para>Specifies the paper kind display name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the name of a paper kind.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.Id">
      <summary>
        <para>Specifies the paper kind Id.</para>
      </summary>
      <value>An integer value, specifying the paper kind ID.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo.SizeText">
      <summary>
        <para>Specifies the paper kind size text.</para>
      </summary>
      <value>A string value that specifies the text size of a paper kind.</value>
    </member>
    <member name="N:DevExpress.Data.XtraReports.Wizard.Presenters">
      <summary>
        <para>This namespace is no longer used. Use classes from the <see cref="N:DevExpress.XtraReports.Wizards.Presenters"/> namespace instead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.AddGroupingLevelPage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView"/> interface.</param>
      <param name="columnInfoCache">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> object.)</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.AddGroupingLevelPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseReportLayoutPage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1"/> class with the specified view.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportLayoutPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseReportStylePage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1"/> class with the specified view.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportStylePage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseReportTypePage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1"/> class with the specified view.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseReportTypePage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.ChooseSummaryOptionsPage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView"/> interface.</param>
      <param name="columnInfoCache">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> object.)</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.ChooseSummaryOptionsPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.CustomizeLabelPage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView,DevExpress.Data.XtraReports.Labels.ILabelProductRepository)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView"/> interface.</param>
      <param name="repository">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> object.)</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.CustomizeLabelPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.ReportWizardServiceClientPage`2">
      <summary>
        <para>Obsolete. This page is no longer used in the current Report Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ReportWizardServiceClientPage`2.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.ReportWizardServiceClientPage`2.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.SelectColumnsPage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView,DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView"/> interface.</param>
      <param name="client">An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient"/> interface.</param>
      <param name="columnInfoCache">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnInfoCache"/> object.)</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectColumnsPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1">
      <summary>
        <para>Obsolete. This page is no longer used in the current Report Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView,DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView"/> interface.</param>
      <param name="client">An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataMemberPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1">
      <summary>
        <para>Obsolete. This page is no longer used in the current Report Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView,DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView"/> interface.</param>
      <param name="client">An object implementing the <see cref="T:DevExpress.Data.XtraReports.ServiceModel.IReportWizardServiceClient"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectDataSourcePage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1">
      <summary>
        <para>Obsolete. This page is no longer used in the current Data Source Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView,DevExpress.Data.Browsing.Design.PickManagerBase,DevExpress.Data.XtraReports.Wizard.IColumnInfoCache)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView"/> interface.</param>
      <param name="pickManager">A <see cref="T:DevExpress.Data.Browsing.Design.PickManagerBase"/> descendant.</param>
      <param name="columnInfoCache">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.IColumnInfoCache"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectHierarchicalDataSourceColumnsPage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.SelectLabelTypePage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView,DevExpress.Data.XtraReports.Labels.ILabelProductRepository)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1"/> class with the specified settings.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView"/> interface.</param>
      <param name="repository">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Labels.ILabelProductRepository"/> interface. (Typically, it is the <see cref="T:DevExpress.Data.XtraReports.Labels.XDocumentLabelProductRepository"/> object.)</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is  enabled; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.GetNextPageType">
      <summary>
        <para>Returns the type of the next wizard page.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> enumeration value.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SelectLabelTypePage`1.MoveNextEnabled">
      <summary>
        <para>Specifies whether or not the Next button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Next button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Presenters.SetReportTitlePage`1"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.#ctor(DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1"/> class with the specified view.</para>
      </summary>
      <param name="view">An object implementing the <see cref="T:DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView"/> interface.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.Begin">
      <summary>
        <para>Initializes controls of the current wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.Commit">
      <summary>
        <para>Saves settings specified by a wizard page to the report model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Presenters.SetReportTitlePage`1.FinishEnabled">
      <summary>
        <para>Specifies whether or not the Finish button is enabled on a wizard page.</para>
      </summary>
      <value>true, if the Finish button is enabled; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ReportLayout">
      <summary>
        <para>Lists the report layouts available on the Choose a Report Layout page of the Report Wizard.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.AlignLeft1">
      <summary>
        <para>A left-aligned report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.AlignLeft2">
      <summary>
        <para>A left-aligned report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Block">
      <summary>
        <para>A modular report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Columnar">
      <summary>
        <para>A columnar report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Default">
      <summary>
        <para>The default report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Justified">
      <summary>
        <para>A justified report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Outline1">
      <summary>
        <para>An outlined report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Outline2">
      <summary>
        <para>An outlined report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Stepped">
      <summary>
        <para>A stepped report layout.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportLayout.Tabular">
      <summary>
        <para>A tabular report layout.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ReportModel">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.ReportModel"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.AdjustFieldWidth">
      <summary>
        <para>Specifies whether or not the data fields&#39; content should affect the width of corresponding report controls.</para>
      </summary>
      <value>true to adjust the field width; otherwise false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.Clone">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> instance, which is a copy of the current instance.</para>
      </summary>
      <returns>A new <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> instance, which is a copy of the current instance.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.Columns">
      <summary>
        <para>Specifies the data columns that are available in the Wizard.</para>
      </summary>
      <value>An array of <see cref="T:System.String"/> values, specifying the columns available from the datasource.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.CustomLabelInformation">
      <summary>
        <para>Specifies the information that is required to create a custom Label Report.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.CustomLabelInformation"/> object.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.DataMemberName">
      <summary>
        <para>Specifies the data member name.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.DataSourceName">
      <summary>
        <para>Specifies the data source name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportModel"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.GroupingLevels">
      <summary>
        <para>Specifies the grouping levels available in a report.</para>
      </summary>
      <value>An array of <see cref="T:System.Collections.Generic.HashSet`1"/> values.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.IgnoreNullValuesForSummary">
      <summary>
        <para>Specifies whether or not null values (if occurred in a data source) should be ignored when calculating a summary function.</para>
      </summary>
      <value>true to ignore null values; otherwise false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.ReportModel.IsGrouped">
      <summary>
        <para>Specifies whether or not there are groups in the report.</para>
      </summary>
      <returns>true if the report contains groups; otherwise false.</returns>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.LabelProductDetailId">
      <summary>
        <para>For internal use. Specifies the ID of a product label&#39;s details.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.LabelProductId">
      <summary>
        <para>For internal use. Specifies the ID of a product label.</para>
      </summary>
      <value>An integer value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.Layout">
      <summary>
        <para>Specifies the report layout type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportLayout"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.Portrait">
      <summary>
        <para>Specifies the report page orientation.</para>
      </summary>
      <value>true if the page orientation is portrait; otherwise false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.ReportStyleId">
      <summary>
        <para>Specifies the report visual style.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportStyleId"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.ReportTitle">
      <summary>
        <para>Specifies the report title (for printing on the report header).</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.ReportType">
      <summary>
        <para>Specifies the report type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportType"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.ReportModel.SummaryOptions">
      <summary>
        <para>For internal use. Specifies options required to calculate a summary function in a report.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Data.XtraReports.Wizard.ColumnNameSummaryOptions"/> objects.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ReportStyleId">
      <summary>
        <para>Lists the report styles available on the Choose a Report Style page of the Report Wizard.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Bold">
      <summary>
        <para>The Bold visual style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Casual">
      <summary>
        <para>The Casual visual style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Compact">
      <summary>
        <para>The Compact visual style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Corporate">
      <summary>
        <para>The Corporate visual style.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportStyleId.Formal">
      <summary>
        <para>The Formal visual style.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.ReportType">
      <summary>
        <para>Lists the report types available on the Choose a Report Type page of the Report Wizard.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.Empty">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.Label">
      <summary>
        <para>The Label report type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.ReportStorage">
      <summary>
        <para>For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.ReportType.Standard">
      <summary>
        <para>The Standard report type.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags">
      <summary>
        <para>Lists the summary functions available on the Specify Summary Options (Multi-Query Version) page of the Report Wizard.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Avg">
      <summary>
        <para>The Average summary function is calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Count">
      <summary>
        <para>The Count summary function is calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Max">
      <summary>
        <para>The Max summary function is calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Min">
      <summary>
        <para>The Min summary function is calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.None">
      <summary>
        <para>No summary function is calculated.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags.Sum">
      <summary>
        <para>The Sum summary function is calculated.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.SummaryOptions">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.SummaryOptions"/> class instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.SummaryOptions.#ctor(DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptions"/> class with the specified settings.</para>
      </summary>
      <param name="flags">One or more <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration values.</param>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Avg">
      <summary>
        <para>Specifies whether or not the Average function should be calculated across the created report.</para>
      </summary>
      <value>true if the Average function is enabled; otherwise false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Count">
      <summary>
        <para>Specifies whether or not the Count function should be calculated across the created report.</para>
      </summary>
      <value>true if the Count function is enabled; otherwise false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Flags">
      <summary>
        <para>Specifies the summary functions to display on the Specify Summary Options (Multi-Query Version) page of the Report Wizard.</para>
      </summary>
      <value>One or more <see cref="T:DevExpress.Data.XtraReports.Wizard.SummaryOptionFlags"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Max">
      <summary>
        <para>Specifies whether or not the Max function should be calculated across the created report.</para>
      </summary>
      <value>true if the Max function is enabled; otherwise false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Min">
      <summary>
        <para>Specifies whether or not the Min function should be calculated across the created report.</para>
      </summary>
      <value>true if the Min function is enabled; otherwise false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.SummaryOptions.Sum">
      <summary>
        <para>Specifies whether or not the Sum function should be calculated across the created report.</para>
      </summary>
      <value>true if the Sum function is enabled; otherwise false.</value>
    </member>
    <member name="N:DevExpress.Data.XtraReports.Wizard.Views">
      <summary>
        <para>This namespace is no longer used. Use interfaces from the <see cref="N:DevExpress.XtraReports.Wizards.Views"/> namespace instead.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IAddGroupingLevelPageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.ActiveAvailableColumnsChanged">
      <summary>
        <para>Occurs when the active record in the list of the available columns is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.ActiveGroupingLevelChanged">
      <summary>
        <para>Occurs when the active record in the list of grouping levels is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.AddGroupingLevelClicked">
      <summary>
        <para>Occurs when the Add Grouping Level button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.CombineGroupingLevelClicked">
      <summary>
        <para>Occurs when the Combine Grouping Level button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableAddGroupingLevelButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Add Grouping Level button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableCombineGroupingLevelButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Combine Grouping Level button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableGroupingLevelDown(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Move Grouping Level Down button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableGroupingLevelUp(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Move Grouping Level Up button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.EnableRemoveGroupingLevelButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Remove Grouping Level button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.FillAvailableColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
      <summary>
        <para>If implemented, populates the list of available columns.</para>
      </summary>
      <param name="columns">An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.FillGroupingLevels(DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo[])">
      <summary>
        <para>If implemented, populates the list of grouping levels.</para>
      </summary>
      <param name="groupingLevels">An array of <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> objects.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GetActiveAvailableColumns">
      <summary>
        <para>If implemented, gets an array of records selected in the list of available columns.</para>
      </summary>
      <returns>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GetActiveGroupingLevel">
      <summary>
        <para>If implemented, gets the record selected in the list of grouping levels.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> object.</returns>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GroupingLevelDownClicked">
      <summary>
        <para>Occurs when the Move Grouping Level Down button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.GroupingLevelUpClicked">
      <summary>
        <para>Occurs when the Move Grouping Level Up button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.RemoveGroupingLevelClicked">
      <summary>
        <para>Occurs when the Remove Grouping Level button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.SetActiveGroupingLevel(DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo)">
      <summary>
        <para>If implemented, changes the active record in the list of grouping levels.</para>
      </summary>
      <param name="groupingLevel">A <see cref="T:DevExpress.Data.XtraReports.Wizard.GroupingLevelInfo"/> object.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IAddGroupingLevelPageView.ShowWaitIndicator(System.Boolean)">
      <summary>
        <para>If implemented, shows or hides the wait indicator on a wizard page.</para>
      </summary>
      <param name="show">true to show the wait indicator; otherwise false.</param>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseReportLayoutPageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.AdjustFieldWidth">
      <summary>
        <para>If implemented, specifies the state of the Adjust the field width check box.</para>
      </summary>
      <value>true, to activate the check box; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.IsGroupedReport">
      <summary>
        <para>If implemented, specifies whether or not the report contains groups.</para>
      </summary>
      <value>true, if the report is grouped; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.Portrait">
      <summary>
        <para>If implemented, specifies the state of the Portrait and Landscape radio buttons.</para>
      </summary>
      <value>true, if the Portrait radio button is active; false if the Landscape radio button is active.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportLayoutPageView.ReportLayout">
      <summary>
        <para>If implemented, specifies the selected report layout.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportLayout"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseReportStylePageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportStylePageView.ReportStyleId">
      <summary>
        <para>If implemented, specifies the report visual style.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportStyleId"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseReportTypePageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseReportTypePageView.ReportType">
      <summary>
        <para>If implemented, specifies the selected report type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Wizard.ReportType"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IChooseSummaryOptionsPageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView.FillSummaryOptions(DevExpress.Data.XtraReports.Wizard.ColumnInfoSummaryOptions[])">
      <summary>
        <para>If implemented, fills the summary options check boxes on the Specify Summary Options (Multi-Query Version) page of the Report Wizard.</para>
      </summary>
      <param name="summaryOptions">An array of <see cref="T:DevExpress.XtraReports.Wizards.ColumnInfoSummaryOptions"/> objects that contain information required to calculate summary functions.</param>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView.IgnoreNullValues">
      <summary>
        <para>If implemented, specifies the state of the Ignore null values check box.</para>
      </summary>
      <value>true, to activate the check box; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.IChooseSummaryOptionsPageView.ShowWaitIndicator(System.Boolean)">
      <summary>
        <para>If implemented, shows or hides the wait indicator on a wizard page.</para>
      </summary>
      <param name="show">true to show the wait indicator; otherwise false.</param>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ICustomizeLabelPageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.BottomMargin">
      <summary>
        <para>If implemented, specifies the value of the Bottom Margin editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.FillPageSizeList(System.Collections.Generic.IEnumerable{DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo})">
      <summary>
        <para>If implemented, populates the list of the available page sizes.</para>
      </summary>
      <param name="paperKinds">A collection of <see cref="T:DevExpress.Data.XtraReports.Wizard.PaperKindViewInfo"/> objects.</param>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.Height">
      <summary>
        <para>If implemented, specifies the value of the Label Height editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.HorizontalPitch">
      <summary>
        <para>If implemented, specifies the value of the Horizontal Pitch editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.LabelInformationChanged">
      <summary>
        <para>Occurs when label information displayed in the dedicated editors is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.LabelsCountHorz">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.LabelsCountVert">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.LeftMargin">
      <summary>
        <para>If implemented, specifies the value of the Left Margin editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.PaperKindFormattedText">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.RightMargin">
      <summary>
        <para>If implemented, specifies the value of the Right Margin editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.SelectedPaperKindChanged">
      <summary>
        <para>Occurs when the entry selected in the Page Size drop-down list is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.SelectedPaperKindId">
      <summary>
        <para>If implemented, specifies the entry selected in the Page Size drop-down list.</para>
      </summary>
      <value>An integer value that is an index of the selected entry.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.TopMargin">
      <summary>
        <para>If implemented, specifies the value of the Top Margin editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.Unit">
      <summary>
        <para>If implemented, specifies the state of the Inch and Millimeter radio buttons.</para>
      </summary>
      <value>A value that specifies the state of the Inch and Millimeter radio buttons.</value>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.UnitChanged">
      <summary>
        <para>Occurs when the state of the Inch and Millimeter radio buttons is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.VerticalPitch">
      <summary>
        <para>If implemented, specifies the value of the Vertical Pitch editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ICustomizeLabelPageView.Width">
      <summary>
        <para>If implemented, specifies the value of the Label Width editor.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISelectColumnsPageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.ActiveColumnsChanged">
      <summary>
        <para>Occurs when the collection of the currently selected columns is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.AddAllColumnsClicked">
      <summary>
        <para>Occurs when the Add All Columns button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.AddColumnsClicked">
      <summary>
        <para>Occurs when the Add Columns button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableAddAllColumnsButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Add All Columns button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableAddColumnsButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Add Columns button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableRemoveAllColumnsButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Remove All Columns button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.EnableRemoveColumnsButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Remove Columns button on a wizard page.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.FillAvailableColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
      <summary>
        <para>If implemented, populates the list of available commands.</para>
      </summary>
      <param name="columns">An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects, specifying the columns to be added to the list.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.FillSelectedColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
      <summary>
        <para>If implemented, populates the list of selected columns.</para>
      </summary>
      <param name="columns">An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects, specifying the columns to be added to the list.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.GetActiveAvailableColumns">
      <summary>
        <para>If implemented, gets a collection of the items selected in the list of available columns.</para>
      </summary>
      <returns>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.GetActiveSelectedColumns">
      <summary>
        <para>If implemented, gets a collection of the items selected in the list of selected columns.</para>
      </summary>
      <returns>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</returns>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.RemoveAllColumnsClicked">
      <summary>
        <para>Occurs when the Remove All Columns button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.RemoveColumnsClicked">
      <summary>
        <para>Occurs when the Remove Columns button is clicked on a wizard page.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectColumnsPageView.ShowWaitIndicator(System.Boolean)">
      <summary>
        <para>If implemented, shows or hides the wait indicator on a wizard page.</para>
      </summary>
      <param name="show">true to show the wait indicator; otherwise false.</param>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView">
      <summary>
        <para>Obsolete. This page is no longer used in the current Report Wizard implementation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.FillTables(System.Collections.Generic.IEnumerable{DevExpress.Data.XtraReports.DataProviders.TableInfo})">
      <summary>
        <para>If implemented, populates the Tables node of the Available items list.</para>
      </summary>
      <param name="tables">A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> objects.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.FillViews(System.Collections.Generic.IEnumerable{DevExpress.Data.XtraReports.DataProviders.TableInfo})">
      <summary>
        <para>If implemented, populates the Views node of the Available items list.</para>
      </summary>
      <param name="views">A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> objects.</param>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.SelectedDataMemberChanged">
      <summary>
        <para>Occurs when the active record in the Available items list is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.SelectedDataMemberName">
      <summary>
        <para>If implemented, specifies the data member selected in the Available items list.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.DataProviders.TableInfo"/> object.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataMemberPageView.ShowWaitIndicator(System.Boolean)">
      <summary>
        <para>If implemented, shows or hides the wait indicator on a wizard page.</para>
      </summary>
      <param name="show">true to show the wait indicator; otherwise false.</param>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISelectDataSourcePageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.FillDataSourceList(System.Collections.Generic.IEnumerable{DevExpress.Data.XtraReports.DataProviders.DataSourceInfo})">
      <summary>
        <para>If implemented, populates the list of available data sources.</para>
      </summary>
      <param name="dataSources">A collection of <see cref="T:DevExpress.Data.XtraReports.DataProviders.DataSourceInfo"/> objects.</param>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.SelectedDataSourceChanged">
      <summary>
        <para>Occurs when the selected item in the Available items list is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.SelectedDataSourceName">
      <summary>
        <para>If implemented, specifies the data source selected in the Available items list.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectDataSourcePageView.ShowWaitIndicator(System.Boolean)">
      <summary>
        <para>If implemented, shows or hides the wait indicator on a wizard page.</para>
      </summary>
      <param name="show">true to show the wait indicator; otherwise false.</param>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView">
      <summary>
        <para>Obsolete. This page is no longer used in the current Data Source Wizard implementation.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveAvailableColumnChanged">
      <summary>
        <para>Occurs when the collection of the columns currently selected in the list of available columns is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveAvailableDataMemberNode">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveSelectedColumns">
      <summary>
        <para>If implemented, provides access to a collection of the items selected in the list of selected columns.</para>
      </summary>
      <value>An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</value>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ActiveSelectedColumnsChanged">
      <summary>
        <para>Occurs when the collection of the columns currently selected in the list of selected columns is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.AddColumnClicked">
      <summary>
        <para>Occurs when the Add Column button is clicked on the Select Columns page of the Report Wizard for a hierarchical data source.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.EnableAddColumnButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Add Column button on the Select Columns page of the WPF Report Wizard for a hierarchical data source.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.EnableRemoveAllColumnsButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Remove All Columns button on the Select Columns page of the WPF Report Wizard for a hierarchical data source.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.EnableRemoveColumnsButton(System.Boolean)">
      <summary>
        <para>If implemented, activates or deactivates the Remove Columns button on the Select Columns page of the WPF Report Wizard for a hierarchical data source.</para>
      </summary>
      <param name="enable">true to activate the button, false to deactivate the button.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.FillSelectedColumns(DevExpress.Data.XtraReports.DataProviders.ColumnInfo[])">
      <summary>
        <para>If implemented, populates the list of selected columns.</para>
      </summary>
      <param name="columns">An array of <see cref="T:DevExpress.Data.XtraReports.DataProviders.ColumnInfo"/> objects.</param>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.RemoveAllColumnsClicked">
      <summary>
        <para>Occurs when the Remove All Columns button is clicked on the Select Columns page of the Report Wizard for a hierarchical data source.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.RemoveColumnsClicked">
      <summary>
        <para>Occurs when the Remove Columns button is clicked on the Select Columns page of the Report Wizard for a hierarchical data source.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.RootNodes">
      <summary>
        <para>If implemented, provides access to a collection of hierarchical data source root nodes</para>
      </summary>
      <value>An object implementing the <see cref="T:System.Collections.IList"/> interface.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectHierarchicalDataSourceColumnsPageView.ShowWaitIndicator(System.Boolean)">
      <summary>
        <para>If implemented, shows or hides the wait indicator on a wizard page.</para>
      </summary>
      <param name="show">true to show the wait indicator; otherwise false.</param>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISelectLabelTypePageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.CurrentPaperKindData">
      <summary>
        <para>If implemented, specifies the settings of the current paper kind.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Labels.PaperKindData"/> value.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.FillLabelDetails(System.Collections.Generic.IEnumerable{DevExpress.Data.XtraReports.Labels.LabelDetails})">
      <summary>
        <para>If implemented, populates the Product Number drop-down list.</para>
      </summary>
      <param name="details">A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> objects.</param>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.FillLabelProducts(System.Collections.Generic.IEnumerable{DevExpress.Data.XtraReports.Labels.LabelProduct})">
      <summary>
        <para>If implemented, populates the Label Products drop-down list.</para>
      </summary>
      <param name="products">A collection of <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> objects.</param>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedDetails">
      <summary>
        <para>If implemented, specifies the entry selected in the Product Number drop-down list.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Labels.LabelDetails"/> object.</value>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedLabelProductChanged">
      <summary>
        <para>Occurs when the active record in the Label Products drop-down list is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedLabelProductDetailsChanged">
      <summary>
        <para>Occurs when the active record in the Product Number drop-down list is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.SelectedProduct">
      <summary>
        <para>If implemented, specifies the entry selected in the Label Products drop-down list.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.XtraReports.Labels.LabelProduct"/> object.</value>
    </member>
    <member name="M:DevExpress.Data.XtraReports.Wizard.Views.ISelectLabelTypePageView.UpdateLabelInformation">
      <summary>
        <para>If implemented, updates label information displayed in the dedicated editors.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.ISetReportTitlePageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Data.XtraReports.Wizard.Views.ISetReportTitlePageView.Title">
      <summary>
        <para>If implemented, specifies the content of the report title text box.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="T:DevExpress.Data.XtraReports.Wizard.Views.IWelcomePageView">
      <summary>
        <para>Obsolete. Use the <see cref="T:DevExpress.XtraReports.Wizards.Views.IWelcomePageView"/> interface instead.</para>
      </summary>
    </member>
    <member name="N:DevExpress.DataAccess">
      <summary>
        <para>Contains classes that utilize the most popular approaches to access different data providers.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DataAccess.DataSourceParameterBase">
      <summary>
        <para>The base for classes that provide the data source parameter functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.DataSourceParameterBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DataAccess.DataSourceParameterBase"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.DataSourceParameterBase.#ctor(System.String,System.Type,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DataAccess.DataSourceParameterBase"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value, specifying the parameter name. This value is assigned to the <see cref="P:DevExpress.DataAccess.DataSourceParameterBase.Name"/> property.</param>
      <param name="type">A <see cref="T:System.Type"/> value, specifying the parameter type. This value is assigned to the <see cref="P:DevExpress.DataAccess.DataSourceParameterBase.Type"/> property.</param>
      <param name="value">A <see cref="T:System.Object"/> value, specifying the parameter type. This value is assigned to the <see cref="P:DevExpress.DataAccess.DataSourceParameterBase.Value"/> property.</param>
    </member>
    <member name="T:DevExpress.DataAccess.DataSourceParameterBase.BaseEqualityComparer">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.DataSourceParameterBase.BaseEqualityComparer.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.DataSourceParameterBase.BaseEqualityComparer.Equals(DevExpress.Data.IParameter,DevExpress.Data.IParameter)">
      <summary>
        <para></para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.DataAccess.DataSourceParameterBase.Name">
      <summary>
        <para>Specifies the parameter name.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the parameter name.</value>
    </member>
    <member name="P:DevExpress.DataAccess.DataSourceParameterBase.Type">
      <summary>
        <para>Specifies the parameter type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> value, specifying the parameter type.</value>
    </member>
    <member name="P:DevExpress.DataAccess.DataSourceParameterBase.Value">
      <summary>
        <para>Specifies the parameter value.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="T:DevExpress.DataAccess.DefaultConnectionStringProvider">
      <summary>
        <para>Enables you to resolve connection strings by their names at runtime in .NET Core applications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.DefaultConnectionStringProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DataAccess.DefaultConnectionStringProvider"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.DefaultConnectionStringProvider.AssignConnectionStrings(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
        <para>Register the specified connection strings globally.</para>
      </summary>
      <param name="connectionStrings">A dictionary with connection strings.</param>
    </member>
    <member name="M:DevExpress.DataAccess.DefaultConnectionStringProvider.AssignConnectionStrings(System.Func{System.Collections.Generic.IDictionary{System.String,System.String}})">
      <summary>
        <para>Register connection strings that the specified function returns globally.</para>
      </summary>
      <param name="connectionStringProvider">A function that returns connection strings as key-value pairs.</param>
    </member>
    <member name="T:DevExpress.DataAccess.Expression">
      <summary>
        <para>An expression assigned to a <see cref="T:DevExpress.DataAccess.Sql.QueryParameter"/>, <see cref="T:DevExpress.DataAccess.EntityFramework.EFParameter"/>, or <see cref="T:DevExpress.DataAccess.ObjectBinding.Parameter"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.Expression.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DataAccess.Expression"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.Expression.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DataAccess.Expression"/> class with the specified expression.</para>
      </summary>
      <param name="expressionString">A <see cref="T:System.String"/> value, specifying the expression. This value is assigned to the <see cref="P:DevExpress.DataAccess.Expression.ExpressionString"/> property.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Expression.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.DataAccess.Expression"/> class with the specified expression and result type.</para>
      </summary>
      <param name="expressionString">A <see cref="T:System.String"/> value, specifying the expression. This value is assigned to the <see cref="P:DevExpress.DataAccess.Expression.ExpressionString"/> property.</param>
      <param name="resultType">A <see cref="T:System.Type"/> object, specifying the expression result type. This value is assigned to the <see cref="P:DevExpress.DataAccess.Expression.ResultType"/> property.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Expression.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.DataAccess.Expression"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.DataAccess.Expression"/> instance; otherwise false.</returns>
    </member>
    <member name="P:DevExpress.DataAccess.Expression.ExpressionString">
      <summary>
        <para>Specifies the expression.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the expression.</value>
    </member>
    <member name="M:DevExpress.DataAccess.Expression.GetHashCode">
      <summary>
        <para>Gets the hash code that corresponds to the value of the current <see cref="T:DevExpress.DataAccess.Expression"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.DataAccess.Expression.ResultType">
      <summary>
        <para>Specifies the expression result type.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object, specifying the expression result type.</value>
    </member>
    <member name="M:DevExpress.DataAccess.Expression.ToString">
      <summary>
        <para>Returns the textual representation of <see cref="T:DevExpress.DataAccess.Expression"/>.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value.</returns>
    </member>
    <member name="T:DevExpress.DataAccess.IDataComponent">
      <summary>
        <para>When implemented by a class, provides basic functionality required by data access components.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DataAccess.IDataComponent.DataMember">
      <summary>
        <para>Gets the name of a data member associated with the current data component.</para>
      </summary>
      <value>A <see cref="T:System.String"/> containing the name of a data member.</value>
    </member>
    <member name="M:DevExpress.DataAccess.IDataComponent.Fill(System.Collections.Generic.IEnumerable{DevExpress.Data.IParameter})">
      <summary>
        <para>Retrieves the data from a data source.</para>
      </summary>
      <param name="sourceParameters">A collection of <see cref="T:DevExpress.Data.IParameter"/> values.</param>
    </member>
    <member name="M:DevExpress.DataAccess.IDataComponent.LoadFromXml(System.Xml.Linq.XElement)">
      <summary>
        <para>Loads the data source schema definition from XML.</para>
      </summary>
      <param name="element">A <see cref="T:System.Xml.Linq.XElement"/> value containing an XML definition of the data source schema.</param>
    </member>
    <member name="P:DevExpress.DataAccess.IDataComponent.Name">
      <summary>
        <para>Specifies the name of the current data component.</para>
      </summary>
      <value>A <see cref="T:System.String"/> containing the data component name.</value>
    </member>
    <member name="M:DevExpress.DataAccess.IDataComponent.SaveToXml">
      <summary>
        <para>Saves the XML definition of the data source schema.</para>
      </summary>
      <returns>A <see cref="T:System.Xml.Linq.XElement"/> value containing an XML definition of the data source schema.</returns>
    </member>
    <member name="N:DevExpress.DataAccess.Wizard">
      <summary>
        <para>Contains classes that are required to customize a data source connection wizard.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DataAccess.Wizard.ExceptionHandlerKind">
      <summary>
        <para>Lists the values indicating the handled exceptions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.DataAccess.Wizard.ExceptionHandlerKind.Connection">
      <summary>
        <para>An exception is related to a data connection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.DataAccess.Wizard.ExceptionHandlerKind.Default">
      <summary>
        <para>A default exception handler.</para>
      </summary>
    </member>
    <member name="F:DevExpress.DataAccess.Wizard.ExceptionHandlerKind.Loading">
      <summary>
        <para>An exception occurred while loading a wizard.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DataAccess.Wizard.IWizardRunnerContext">
      <summary>
        <para>Provides functionality to run the Data Source Wizard.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.IWizardRunnerContext.Confirm(System.String)">
      <summary>
        <para>Displays a confirmation window before the execution of a wizard.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value.</param>
      <returns>true, if a user clicks OK; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.IWizardRunnerContext.CreateWizardView(System.String,System.Drawing.Size)">
      <summary>
        <para>Creates a Data Source Wizard view.</para>
      </summary>
      <param name="wizardTitle">A <see cref="T:System.String"/> value.</param>
      <param name="wizardSize">A <see cref="T:System.Drawing.Size"/> structure.</param>
      <returns>An object implementing the <see cref="T:DevExpress.Data.WizardFramework.IWizardView"/> interface.</returns>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.IWizardRunnerContext.Run``1(DevExpress.Data.WizardFramework.Wizard{``0})">
      <summary>
        <para>Runs the wizard with a specified model.</para>
      </summary>
      <param name="wizard">A <see cref="T:DevExpress.Data.WizardFramework.Wizard`1"/> object.</param>
      <returns>true, to save the changes to the wizard model; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.IWizardRunnerContext.ShowMessage(System.String)">
      <summary>
        <para>Displays a message with the specified text before the execution of a wizard.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.IWizardRunnerContext.ShowMessage(System.String,System.String)">
      <summary>
        <para>Displays a message with the specified text and caption before the execution of a wizard.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value.</param>
      <param name="caption">A <see cref="T:System.String"/> value.</param>
    </member>
    <member name="P:DevExpress.DataAccess.Wizard.IWizardRunnerContext.WaitFormActivator">
      <summary>
        <para>Returns an object that displays a form while the wizard is loading information about a data source.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator"/> interface.</value>
    </member>
    <member name="N:DevExpress.DataAccess.Wizard.Services">
      <summary>
        <para>Provides a service functionality to the Data Connection wizard.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DataAccess.Wizard.Services.IExceptionHandler">
      <summary>
        <para>When implemented by a class, provides the exception handler functionality.</para>
      </summary>
    </member>
    <member name="P:DevExpress.DataAccess.Wizard.Services.IExceptionHandler.AnyExceptions">
      <summary>
        <para>Indicates whether there are exceptions to handle.</para>
      </summary>
      <value>true, if there are exceptions to handle; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IExceptionHandler.HandleException(System.Exception)">
      <summary>
        <para>Handles the specified exception.</para>
      </summary>
      <param name="exception">A <see cref="T:System.Exception"/> object.</param>
    </member>
    <member name="T:DevExpress.DataAccess.Wizard.Services.ISupportCancel">
      <summary>
        <para>If implemented, enables the Cancel button on a form.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.ISupportCancel.Cancel">
      <summary>
        <para>Closes the associated form window.</para>
      </summary>
    </member>
    <member name="T:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator">
      <summary>
        <para>If implemented, provides the splash screen functionality.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.CloseWaitForm">
      <summary>
        <para>Closes the splash screen.</para>
      </summary>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.CloseWaitForm(System.Boolean,System.Int32,System.Boolean)">
      <summary>
        <para>Closes the splash screen, applying the specified settings.</para>
      </summary>
      <param name="throwException">true to throw an exception after closing the form window; otherwise false.</param>
      <param name="delay">An integer value, specifying the timeout before closing the form window.</param>
      <param name="waitForClose">true to wait until a user closes the window; false to automatically close the window after exceeding the specified timeout.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.EnableCancelButton(System.Boolean)">
      <summary>
        <para>Specifies whether or not the Cancel button is available on a splash screen.</para>
      </summary>
      <param name="enable">true if the Cancel button is available; otherwise false.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.EnableWaitFormDescription(System.Boolean)">
      <summary>
        <para>Specifies whether or not to display a splash screen description.</para>
      </summary>
      <param name="show">true to display the description; otherwise false.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.SetWaitFormCaption(System.String)">
      <summary>
        <para>Specifies the caption of a splash screen.</para>
      </summary>
      <param name="caption">A <see cref="T:System.String"/> value, specifying the form caption.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.SetWaitFormDescription(System.String)">
      <summary>
        <para>Specifies the text of a splash screen description.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value, specifying the form description.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.SetWaitFormObject(DevExpress.DataAccess.Wizard.Services.ISupportCancel)">
      <summary>
        <para>Specifies the content of a splash screen.</para>
      </summary>
      <param name="dataSourceLoader">An object implementing the <see cref="T:DevExpress.DataAccess.Wizard.Services.ISupportCancel"/> interface.</param>
    </member>
    <member name="M:DevExpress.DataAccess.Wizard.Services.IWaitFormActivator.ShowWaitForm(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Displays a splash screen with the specified parameters.</para>
      </summary>
      <param name="fadeIn">true to use the fade-in animation when loading the form.</param>
      <param name="fadeOut">true to use the fade-out animation when closing the form.</param>
      <param name="useDelay">true to enable the timeout when loading the form.</param>
    </member>
    <member name="N:DevExpress.Entity.Model">
      <summary>
        <para>Contains classes that provide functionality required for connecting to Entity Framework data sources.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Entity.Model.DbContainerType">
      <summary>
        <para>Enumerates values that specify the container type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Entity.Model.DbContainerType.EntityFramework">
      <summary>
        <para>Specifies the Entity Framework data model.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Entity.Model.DbContainerType.WCF">
      <summary>
        <para>Specifies the WCF data service.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Entity.Model.IContainerInfo">
      <summary>
        <para>If implemented, provides information about a project type containing an Entity Framework data model.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Entity.Model.IContainerInfo.ContainerType">
      <summary>
        <para>Specifies the container type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Entity.Model.DbContainerType"/> enumeration value.</value>
    </member>
    <member name="N:DevExpress.Entity.ProjectModel">
      <summary>
        <para>Contains classes that provide information about the known types in the current solution that are required to connect to Entity Framework data sources.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo">
      <summary>
        <para>When implemented by a class, provides information about its containing assembly.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.AssemblyFullName">
      <summary>
        <para>Indicates the full name of the current assembly.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value, specifying the assembly name.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.IsProjectAssembly">
      <summary>
        <para>Indicates whether the current assembly is an assembly of the current project.</para>
      </summary>
      <value>true, if the current assembly is an assembly of the current project; otherwise, false</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.IsSolutionAssembly">
      <summary>
        <para>Indicates whether the current assembly is an assembly of the current solution.</para>
      </summary>
      <value>true, if the current assembly is an assembly of the current solution; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.ResourceOptions">
      <summary>
        <para>Obtains resource options for the current assembly.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Entity.ProjectModel.IResourceOptions"/> object.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXAssemblyInfo.TypesInfo">
      <summary>
        <para>Obtains a collection of types available in the current assembly.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.</value>
    </member>
    <member name="T:DevExpress.Entity.ProjectModel.IDXTypeInfo">
      <summary>
        <para>When implemented by a class, provides information about a project type.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXTypeInfo.Assembly">
      <summary>
        <para>Obtains the assembly in which the current type is defined.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> object containg information about the assembly in which the current type is defined.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXTypeInfo.FullName">
      <summary>
        <para>Obtains the fully qualified name of the current type, including the namespace.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXTypeInfo.IsSolutionType">
      <summary>
        <para>Indicates whether a type is defined within the current solution.</para>
      </summary>
      <value>true, if a type is defined in the current solution; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IDXTypeInfo.NamespaceName">
      <summary>
        <para>Obtains the name of the namespace containing the current type</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.IDXTypeInfo.ResolveType">
      <summary>
        <para>Returns the current type.</para>
      </summary>
      <returns>A <see cref="T:System.Type"/> object.</returns>
    </member>
    <member name="T:DevExpress.Entity.ProjectModel.IProjectTypes">
      <summary>
        <para>When implemented by a class, provides information about known project types.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IProjectTypes.Assemblies">
      <summary>
        <para>Obtains a collection of assemblies available for the current project.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> objects.</value>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.IProjectTypes.GetExistingOrCreateNew(System.Type)">
      <summary>
        <para>Obtains the existing <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object that provides information about a known project type, or creates a new one if it was not found.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> object.</param>
      <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object containing information about a project type.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.IProjectTypes.GetTypes(System.Func{DevExpress.Entity.ProjectModel.IDXTypeInfo,System.Boolean})">
      <summary>
        <para>Obtains project types that satisfy the specified filtering condition.</para>
      </summary>
      <param name="filter">A System.Func delegate specifying a filtering condition.</param>
      <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.IProjectTypes.GetTypesPerAssembly(System.Func{DevExpress.Entity.ProjectModel.IDXTypeInfo,System.Boolean})">
      <summary>
        <para>Obtains assemblies containing project types that satisfy the specified filtering condition.</para>
      </summary>
      <param name="filter">A System.Func delegate specifying a filtering condition.</param>
      <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> objects.</returns>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IProjectTypes.ProjectAssembly">
      <summary>
        <para>Obtains the assembly of the current project.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> containing information about the assembly of the current project.</value>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.IProjectTypes.ProjectAssemblyName">
      <summary>
        <para>Obtains the name of the current assembly</para>
      </summary>
      <value>A <see cref="T:System.String"/> string containing the assembly name.</value>
    </member>
    <member name="T:DevExpress.Entity.ProjectModel.IResourceOptions">
      <summary>
        <para>When implemented by a class, provides options for project resources.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Entity.ProjectModel.ISolutionTypesProvider">
      <summary>
        <para>If implemented, provides access to the known types in the current solution.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.ActiveProjectTypes">
      <summary>
        <para>Provides access to types available for the current project.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Entity.ProjectModel.IProjectTypes"/> object, providing access to project types.</value>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.AddReference(System.String)">
      <summary>
        <para>Adds a new reference by an assembly name.</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> specifying the name of an assembly to reference.</param>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.AddReferenceFromFile(System.String)">
      <summary>
        <para>Adds a new reference by an assembly file path.</para>
      </summary>
      <param name="assemblyPath">A <see cref="T:System.String"/> specifying the path to an assembly file.</param>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindType(System.Predicate{DevExpress.Entity.ProjectModel.IDXTypeInfo})">
      <summary>
        <para>Returns the first found type that satisfies the specified predicate.</para>
      </summary>
      <param name="predicate">A System.Predicate delegate.</param>
      <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindType(System.String)">
      <summary>
        <para>Obtains a project type by its full name.</para>
      </summary>
      <param name="fullName">A <see cref="T:System.String"/> value specifying the full name of a type.</param>
      <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindTypes(DevExpress.Entity.ProjectModel.IDXTypeInfo,System.Predicate{DevExpress.Entity.ProjectModel.IDXTypeInfo})">
      <summary>
        <para>Obtains a collection of types that extend the specified base class and satisfy the specified predicate.</para>
      </summary>
      <param name="baseClass">An <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> object.</param>
      <param name="predicate">A System.Predicate delegate.</param>
      <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.FindTypes(System.Predicate{DevExpress.Entity.ProjectModel.IDXTypeInfo})">
      <summary>
        <para>Obtains a collection of types that satisfy the specified predicate.</para>
      </summary>
      <param name="predicate">A System.Predicate delegate.</param>
      <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetAssembly(System.String)">
      <summary>
        <para>Obtains the specified assembly</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> specifying the name of the assembly to obtain.</param>
      <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IDXAssemblyInfo"/> object containing information about an assembly.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetAssemblyReferencePath(System.String,System.String)">
      <summary>
        <para>Returns the path to an application&#39;s assembly reference.</para>
      </summary>
      <param name="projectAssemblyFullName">A <see cref="T:System.String"/> value, specifying the project assembly.</param>
      <param name="referenceName">A <see cref="T:System.String"/> value, specifying the reference name.</param>
      <returns>A <see cref="T:System.String"/> value.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetProjectTypes(System.String)">
      <summary>
        <para>Obtains project types available in the specified assembly.</para>
      </summary>
      <param name="assemblyFullName">A <see cref="T:System.String"/> specifying the name of an assembly.</param>
      <returns>An <see cref="T:DevExpress.Entity.ProjectModel.IProjectTypes"/> object providing access to project types.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.GetTypes">
      <summary>
        <para>Obtains a collection of available types.</para>
      </summary>
      <returns>A collection of <see cref="T:DevExpress.Entity.ProjectModel.IDXTypeInfo"/> objects.</returns>
    </member>
    <member name="M:DevExpress.Entity.ProjectModel.ISolutionTypesProvider.IsReferenceExists(System.String)">
      <summary>
        <para>Indicates whether the specified assembly is referenced by the project.</para>
      </summary>
      <param name="assemblyName">A <see cref="T:System.String"/> specifying the assembly name.</param>
      <returns>true, if an assembly is referenced by the project; otherwise, false.</returns>
    </member>
    <member name="N:DevExpress.Export">
      <summary>
        <para>Contains settings controlling data export from controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Export.ClipboardMode">
      <summary>
        <para>Contains values that specify whether or not the Clipboard Management feature is enabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.ClipboardMode.Default">
      <summary>
        <para>Equal to the <see cref="F:DevExpress.Export.ClipboardMode.PlainText"/> value.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.ClipboardMode.Formatted">
      <summary>
        <para>Data is copied to the Clipboard together with its format settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.ClipboardMode.PlainText">
      <summary>
        <para>Copied data is stored in Clipboard as simple plain text.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Export.ClipboardOptions">
      <summary>
        <para>Provides base properties that manage copy/paste operations from/to Data Grid and Tree List controls.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Export.ClipboardOptions.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Export.ClipboardOptions"/> class with the specified settings.</para>
      </summary>
      <param name="allowFormattedMode">true, if the <see cref="P:DevExpress.Export.ClipboardOptions.ClipboardMode"/> property should be set to Formatted; otherwise, false.</param>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.AllowCsvFormat">
      <summary>
        <para>Gets or sets whether copying data in CSV format is enabled.</para>
      </summary>
      <value>A value that specifies whether copying data in CSV format is enabled. The Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.AllowExcelFormat">
      <summary>
        <para>Gets or sets whether copying data in XLS (Biff8) format is enabled.</para>
      </summary>
      <value>A value that specifies whether copying data in XLS (Biff8) format is enabled. The Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.AllowHtmlFormat">
      <summary>
        <para>Gets or sets whether copying data in HTML format is enabled.</para>
      </summary>
      <value>A value that specifies whether copying data in HTML format is enabled. The Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.AllowRtfFormat">
      <summary>
        <para>Gets or sets whether copying data in RTF format is enabled.</para>
      </summary>
      <value>A value that specifies whether copying data in RTF format is enabled. The Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.AllowTxtFormat">
      <summary>
        <para>Gets or sets whether copying data in Text and UnicodeText formats is enabled.</para>
      </summary>
      <value>A value that specifies whether copying data in Text and UnicodeText formats is enabled. The Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="M:DevExpress.Export.ClipboardOptions.Assign(DevExpress.Export.ClipboardOptions)">
      <summary>
        <para>Copies settings from the target object to the current object.</para>
      </summary>
      <param name="optionsCore">An object whose setting will be copied to the current object</param>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.ClipboardMode">
      <summary>
        <para>Gets or sets whether data is copied to the Clipboard as plain text or along with its format settings (in RTF, HTML, XLS (Biff8), CSV, UnicodeText and Text formats).</para>
      </summary>
      <value>A ClipboardMode enumerator value that specifies whether or not data copied from the target control should be stored together with its format settings.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.CopyCollapsedData">
      <summary>
        <para>Gets or sets whether formatted data is copied from both expanded and collapsed rows/nodes.</para>
      </summary>
      <value>A value that specifies if an end-user can copy formatted data from both expanded and collapsed selected rows/nodes. The Default value is equivalent to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.CopyColumnHeaders">
      <summary>
        <para>Gets or sets whether column and band headers are to be copied along with data cells.</para>
      </summary>
      <value>A value that specifies if the column and band headers are copied. The Default value is equal to DefaultBoolean.True.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.PasteMode">
      <summary>
        <para>Gets or sets data pasting mode.</para>
      </summary>
      <value>Data pasting mode.</value>
    </member>
    <member name="P:DevExpress.Export.ClipboardOptions.ShowProgress">
      <summary>
        <para>Gets or sets whether a progress bar that indicates a data copy operation&#39;s progress is enabled.</para>
      </summary>
      <value>A value that specifies if the progress bar is visible when copying very large amounts of RTF or HTML formatted data.</value>
    </member>
    <member name="T:DevExpress.Export.PasteMode">
      <summary>
        <para>Contains values that specify how data is pasted to a target grid/treelist control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.PasteMode.Append">
      <summary>
        <para>Pasted data is added as new rows to the target control. For the WinForms Tree List control, use the <see cref="P:DevExpress.XtraTreeList.TreeListOptionsClipboard.PasteAsChildNodes"/> setting to specify if pasted data is inserted as the focused node&#39;s children or siblings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.PasteMode.Default">
      <summary>
        <para>Data Grids: The Default mode is equivalent to None (data pasting is not allowed) for controls not in master&#0045;detail mode, and for master Views in master-detail mode. For detail Views in master&#0045;detail mode, the actual paste mode is determined by master Views.Tree Lists: The Default mode is equivalent to None (data pasting is not allowed).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.PasteMode.None">
      <summary>
        <para>Data pasting is disabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.PasteMode.Update">
      <summary>
        <para>Pasted data updates existing cells of the target control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Export.ProgressMode">
      <summary>
        <para>Contains values that specify the visibility of the progress bar.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.ProgressMode.Always">
      <summary>
        <para>The progress bar is always visible when copying data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.ProgressMode.Automatic">
      <summary>
        <para>The progress bar is visible only when copying large portions of RTF- or HTML-formatted data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.ProgressMode.Never">
      <summary>
        <para>The progress bar is never shown.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Export.RowPasteMode">
      <summary>
        <para>Identifies data pasting modes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.RowPasteMode.Default">
      <summary>
        <para>The same value as OnlyValidRow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.RowPasteMode.Force">
      <summary>
        <para>Forces the control to paste a row, even if the row contains invalid data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Export.RowPasteMode.OnlyValidRow">
      <summary>
        <para>Only valid rows are pasted. Invalid rows are skipped.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Office.Crypto">
      <summary>
        <para>Contains classes used to encrypt spreadsheet documents.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Office.Crypto.EncryptionOptions">
      <summary>
        <para>Contains encryption options for a workbook.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Office.Crypto.EncryptionOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Office.Crypto.EncryptionOptions"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Office.Crypto.EncryptionOptions.CopyFrom(DevExpress.Office.Crypto.EncryptionOptions)">
      <summary>
        <para>Copies the appropriate properties of the specified object into the current instance of the <see cref="T:DevExpress.Office.Crypto.EncryptionOptions"/> class.</para>
      </summary>
      <param name="options">An <see cref="T:DevExpress.Office.Crypto.EncryptionOptions"/> class instance representing the source object for copying.</param>
    </member>
    <member name="F:DevExpress.Office.Crypto.EncryptionOptions.DefaultType">
      <summary>
        <para>Stores the default <see cref="P:DevExpress.Office.Crypto.EncryptionOptions.Type"/> value that is <see cref="F:DevExpress.Office.Crypto.ModelEncryptionType.Strong"/>.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Office.Crypto.EncryptionOptions.Password">
      <summary>
        <para>Gets or sets the password to encrypt the workbook.</para>
      </summary>
      <value>A string that is the password to protect the document.</value>
    </member>
    <member name="M:DevExpress.Office.Crypto.EncryptionOptions.PreserveSession(DevExpress.Office.Crypto.IEncryptionSession,System.String)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="session"></param>
      <param name="password"></param>
    </member>
    <member name="M:DevExpress.Office.Crypto.EncryptionOptions.Reset">
      <summary>
        <para>Resets all encryption options to their default values.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Office.Crypto.EncryptionOptions.Type">
      <summary>
        <para>Gets or sets the encryption mechanism used to create a password-protected workbook.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.Office.Crypto.ModelEncryptionType"/> enumeration values specifying the type of encryption. The default is ModelEncryptionType.Strong.</value>
    </member>
    <member name="T:DevExpress.Office.Crypto.ModelEncryptionType">
      <summary>
        <para>Lists the supported encryption mechanisms for XLSX files.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Office.Crypto.ModelEncryptionType.Compatible">
      <summary>
        <para>Standard encryption for OpenXml (.xlsx) files that uses a binary EncryptionInfo structure. The encryption algorithm is Advanced Encryption Standard (AES) and SHA-1 is used as the hashing algorithm.
Supported in Excel 2007 and higher.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Office.Crypto.ModelEncryptionType.Strong">
      <summary>
        <para>Agile encryption for OpenXml (.xlsx) files that uses an XML EncryptionInfo structure. Default encryption algorithm is AES-128.
Supported in Excel 2010 and higher.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Printing">
      <summary>
        <para>Contains classes that provide the basic printing functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Printing.PrinterItem">
      <summary>
        <para>Provides settings for a printer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Printing.PrinterItem.#ctor(System.Printing.PrintQueue,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Printing.PrinterItem"/> class with the specified settings.</para>
      </summary>
      <param name="printQueue">A <see cref="T:System.Printing.PrintQueue"/> object that manages printer jobs.</param>
      <param name="isFax">true, if an item is a fax; otherwise, false.</param>
      <param name="isNetwork">true, if an item is a network printer; otherwise, false.</param>
      <param name="isDefault">true, if a printer is the default printer on a computer; otherwise, false.</param>
      <param name="isOffline">true, if a printer is offline; otherwise, false.</param>
    </member>
    <member name="M:DevExpress.Printing.PrinterItem.#ctor(System.String,System.String,System.String,System.String,System.String,DevExpress.Printing.Native.PrintEditor.PrinterStatus)">
      <summary>
        <para></para>
      </summary>
      <param name="fullName"></param>
      <param name="displayName"></param>
      <param name="location"></param>
      <param name="comment"></param>
      <param name="printerDocumentsInQueue"></param>
      <param name="status"></param>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.Comment">
      <summary>
        <para>Gets a comment about a printer.</para>
      </summary>
      <value>A string that specifies the comment about the printer.</value>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.DisplayName">
      <summary>
        <para>Gets the printer display name.</para>
      </summary>
      <value>A string that specifies the printer display name.</value>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.FullName">
      <summary>
        <para>Gets the printer full name.</para>
      </summary>
      <value>A string that specifies the printer name.</value>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.Location">
      <summary>
        <para>Gets the printer location.</para>
      </summary>
      <value>A string that specifies the printer location.</value>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.PrinterDocumentsInQueue">
      <summary>
        <para>Gets information on documents in the print queue.</para>
      </summary>
      <value>A string that specifies the documents in the print queue.</value>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.PrinterType">
      <summary>
        <para>Gets the printer type.</para>
      </summary>
      <value>The printer type.</value>
    </member>
    <member name="P:DevExpress.Printing.PrinterItem.Status">
      <summary>
        <para>Gets the printer status.</para>
      </summary>
      <value>A string that specifies the printer status.</value>
    </member>
    <member name="N:DevExpress.Schedule">
      <summary>
        <para>Contains classes that implement basic functionality for creating schedules.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Schedule.DateCheckResult">
      <summary>
        <para>Lists the day types regarding the recognized working activity.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Schedule.DateCheckResult.Holiday">
      <summary>
        <para>This date is treated as a holiday.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Schedule.DateCheckResult.Unknown">
      <summary>
        <para>This date cannot be attributed to a working day or holiday.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Schedule.DateCheckResult.WorkDay">
      <summary>
        <para>This date is treated as a working day.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Schedule.ExactWorkDay">
      <summary>
        <para>Represents a day that is recognized as a work day.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Schedule.ExactWorkDay.#ctor(System.DateTime,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Schedule.ExactWorkDay"/> class with the specified date and display name.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value that specifies the date of the working day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.</param>
      <param name="displayName">A <see cref="T:System.String"/> which specifies the display name of the working day. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.</param>
    </member>
    <member name="M:DevExpress.Schedule.ExactWorkDay.CheckDate(System.DateTime)">
      <summary>
        <para>Determines whether the specified date is treated as a working day for the current <see cref="T:DevExpress.Schedule.ExactWorkDay"/>.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value representing the date to check.</param>
      <returns>A <see cref="F:DevExpress.Schedule.DateCheckResult.WorkDay"/> enumeration value if the date is a work day; otherwise the <see cref="F:DevExpress.Schedule.DateCheckResult.Unknown"/> value.</returns>
    </member>
    <member name="M:DevExpress.Schedule.ExactWorkDay.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Schedule.ExactWorkDay"/> object.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Schedule.ExactWorkDay"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Schedule.ExactWorkDay.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Schedule.ExactWorkDay"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Schedule.ExactWorkDay"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Schedule.ExactWorkDay.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Schedule.ExactWorkDay"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Schedule.ExactWorkDay.IsWorkDay(System.DateTime)">
      <summary>
        <para>Determines whether the specified date is treated as a working day.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value representing the date to be identified.</param>
      <returns>true if the specified day is a working day; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Schedule.ExactWorkDay.Type">
      <summary>
        <para>Gets the day type associated with this class.</para>
      </summary>
      <value>An <see cref="F:DevExpress.Schedule.WorkDayType.ExactWorkDay"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Schedule.Holiday">
      <summary>
        <para>Represents a day that is recognized as a holiday.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.#ctor(System.DateTime,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Schedule.Holiday"/> class with the specified date and display name.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value that specifies the date of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.</param>
      <param name="displayName">A <see cref="T:System.String"/> which specifies the display name of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.</param>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.#ctor(System.DateTime,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Schedule.Holiday"/> class with the specified date, display name and location.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value that specifies the date of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.Date"/> property.</param>
      <param name="displayName">A <see cref="T:System.String"/> which specifies the display name of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.KnownDateDay.DisplayName"/> property.</param>
      <param name="location">A <see cref="T:System.String"/> which specifies the location of the holiday. This value is assigned to the <see cref="P:DevExpress.Schedule.Holiday.Location"/> property.</param>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.CheckDate(System.DateTime)">
      <summary>
        <para>Determines whether the specified date is treated as a working day for the current holiday.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value representing the date to check.</param>
      <returns>A <see cref="F:DevExpress.Schedule.DateCheckResult.Holiday"/> enumeration value if the date is a holiday; otherwise the <see cref="F:DevExpress.Schedule.DateCheckResult.Unknown"/> value.</returns>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Schedule.Holiday"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Schedule.Holiday"/> object which is a copy of the current object.</returns>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Schedule.Holiday"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Schedule.Holiday"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Schedule.Holiday"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Schedule.Holiday.IsWorkDay(System.DateTime)">
      <summary>
        <para>Determines whether the specified date is treated as a working day for the current holiday.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value representing the date to be identified.</param>
      <returns>Always false.</returns>
    </member>
    <member name="P:DevExpress.Schedule.Holiday.Location">
      <summary>
        <para>Gets or sets the location attribute of the holiday.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the holiday&#39;s location.</value>
    </member>
    <member name="P:DevExpress.Schedule.Holiday.Type">
      <summary>
        <para>Gets the day type associated with this class.</para>
      </summary>
      <value>A <see cref="F:DevExpress.Schedule.WorkDayType.Holiday"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Schedule.HolidayBaseCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Schedule.Holiday"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Schedule.HolidayBaseCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Schedule.KnownDateDay">
      <summary>
        <para>Serves as a base class to represent a day corresponding to the particular date.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Schedule.KnownDateDay.Date">
      <summary>
        <para>Returns a date, associated with the current KnownDateDay object or its descendant.</para>
      </summary>
      <value>A <see cref="T:System.DateTime"/> value.</value>
    </member>
    <member name="P:DevExpress.Schedule.KnownDateDay.DisplayName">
      <summary>
        <para>Gets or sets the name of the day to display, associated with the current KnownDateDay object or its descendant.</para>
      </summary>
      <value>A <see cref="T:System.String"/> representing a name of the day.</value>
    </member>
    <member name="M:DevExpress.Schedule.KnownDateDay.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.Schedule.KnownDateDay"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Schedule.KnownDateDay"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Schedule.KnownDateDay.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Schedule.KnownDateDay"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="T:DevExpress.Schedule.OutlookHolidaysLoader">
      <summary>
        <para>Represents a class implemented to load holidays from the Outlook.hol file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Schedule.OutlookHolidaysLoader"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.ExtractLocations(System.IO.Stream)">
      <summary>
        <para>Retrieves locations for which holidays are present.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> containing holidays, as they are specified for MS Outlook.</param>
      <returns>An array of strings containing location names.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.ExtractLocations(System.String)">
      <summary>
        <para>Retrieves locations for which holidays are present.</para>
      </summary>
      <param name="fileName">A string representing the location of the file containing holidays in MS Outlook format.</param>
      <returns>An array of strings containing location names.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String)">
      <summary>
        <para>Loads holidays from the specified file.</para>
      </summary>
      <param name="fileName">A string that is the location of the holidays file. For MS Office 2013 US English you can find it at C:\Program Files\Microsoft Office\Office15\1033\outlook.hol.</param>
      <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String,System.String[])">
      <summary>
        <para>Loads holidays for specified locations from the specified file.</para>
      </summary>
      <param name="fileName">A string that is the location of the holidays file. For MS Office 2013 US English you can find it at C:\Program Files\Microsoft Office\Office15\1033\outlook.hol.</param>
      <param name="locations">An array of strings containing location names.</param>
      <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromFile(System.String,System.Text.Encoding,System.String[])">
      <summary>
        <para>Loads holidays for specified locations from the specified file, using the specified encoding.</para>
      </summary>
      <param name="fileName">A string that is the location of the holidays file. For MS Office 2013 US English you can find it at C:\Program Files\Microsoft Office\Office15\1033\outlook.hol.</param>
      <param name="encoding">A <see cref="T:System.Text.Encoding"/> class representing a character encoding.</param>
      <param name="locations">An array of strings containing location names.</param>
      <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream)">
      <summary>
        <para>Loads holidays from the specified stream.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.</param>
      <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream,System.String[])">
      <summary>
        <para>Loads holidays for specified locations from the specified stream.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.</param>
      <param name="locations">An array of strings containing location names.</param>
      <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.</returns>
    </member>
    <member name="M:DevExpress.Schedule.OutlookHolidaysLoader.FromStream(System.IO.Stream,System.Text.Encoding,System.String[])">
      <summary>
        <para>Loads holidays for specified locations from the specified stream, using the specified encoding.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream"/> containing holidays as they are represented for MS Outlook.</param>
      <param name="encoding">A <see cref="T:System.Text.Encoding"/> class representing a character encoding.</param>
      <param name="locations">An array of strings containing location names.</param>
      <returns>A <see cref="T:DevExpress.Schedule.HolidayBaseCollection"/> collection containing holidays imported from MS Outlook.</returns>
    </member>
    <member name="T:DevExpress.Schedule.WorkDay">
      <summary>
        <para>Serves as a base class for classes that represent a day, regarding the working activity recognized for the specific date.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Schedule.WorkDay.CheckDate(System.DateTime)">
      <summary>
        <para>Determines how to treat the specified date in terms of the work day and a holiday.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value, representing the date to check.</param>
      <returns>A <see cref="T:DevExpress.Schedule.DateCheckResult"/> enumeration member.</returns>
    </member>
    <member name="M:DevExpress.Schedule.WorkDay.IsWorkDay(System.DateTime)">
      <summary>
        <para>Determines whether the specified date is treated as a working day for the current working day.</para>
      </summary>
      <param name="date">A <see cref="T:System.DateTime"/> value representing the date to be identified.</param>
      <returns>true if the specified date is a working day; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Schedule.WorkDay.Type">
      <summary>
        <para>Gets the type of the day that the current instance of the WorkDay class descendant represents.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Schedule.WorkDayType"/> enumeration member specifying the day type.</value>
    </member>
    <member name="T:DevExpress.Schedule.WorkDayType">
      <summary>
        <para>Lists day types by the working activity.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Schedule.WorkDayType.ExactWorkDay">
      <summary>
        <para>Indicates that a particular, exact date is a work day.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Schedule.WorkDayType.Holiday">
      <summary>
        <para>Indicates that this day is a holiday.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Schedule.WorkDayType.WeekDay">
      <summary>
        <para>Indicates a weekday.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Security.Resources">
      <summary>
        <para>Contains classes that allow you to specify security access settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Security.Resources.AccessPermission">
      <summary>
        <para>Specifies access permissions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Security.Resources.AccessPermission.Allow">
      <summary>
        <para>Allows access.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Security.Resources.AccessPermission.Deny">
      <summary>
        <para>Denies access.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Security.Resources.AccessSettings">
      <summary>
        <para>Allows you to restrict external resource locations for security reasons.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Security.Resources.AccessSettings.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Security.Resources.AccessSettings"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Security.Resources.AccessSettings.CheckRules``1(System.Func{``0,System.Boolean})">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="check"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Security.Resources.AccessSettings.DataResources">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Security.Resources.AccessSettings"/> class&#39;s instance that allows you to specify data resource access settings.</para>
      </summary>
      <value>The object that allows you to set access rules to data resources.</value>
    </member>
    <member name="P:DevExpress.Security.Resources.AccessSettings.ReportingSpecificResources">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Security.Resources.AccessSettings"/> class&#39;s instance that allows you to specify Reporting-specific resource access settings.</para>
      </summary>
      <value>The object that allows you to set Reporting-specific resource access rules.</value>
    </member>
    <member name="M:DevExpress.Security.Resources.AccessSettings.SetRules(DevExpress.Security.Resources.IAccessRule[])">
      <summary>
        <para>Sets resource access rules. Raises an exception if this method is called for the second time while the application is running.</para>
      </summary>
      <param name="rules">An array of access rules.</param>
    </member>
    <member name="P:DevExpress.Security.Resources.AccessSettings.StaticResources">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Security.Resources.AccessSettings"/> class&#39;s instance that allows you to specify static resource access settings.</para>
      </summary>
      <value>The object that allows you to set static resource access rules.</value>
    </member>
    <member name="M:DevExpress.Security.Resources.AccessSettings.TrySetRules(DevExpress.Security.Resources.IAccessRule[])">
      <summary>
        <para>Sets resource access rules.</para>
      </summary>
      <param name="rules">An array of access rules.</param>
      <returns>true, if the specified rule collection is registered successfully. Otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Security.Resources.CustomAccessRule">
      <summary>
        <para>A rule that uses a custom logic to determine whether to allow or deny access to a URL/file directory.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Security.Resources.CustomAccessRule.#ctor(DevExpress.Security.Resources.AccessPermission)">
      <summary>
        <para>Creates an instance of the CustomAccessRule class.</para>
      </summary>
      <param name="permission">The <see cref="T:DevExpress.Security.Resources.AccessPermission"/> enumeration value that specifies whether the created rule allows or denies access.</param>
    </member>
    <member name="E:DevExpress.Security.Resources.CustomAccessRule.CheckUri">
      <summary>
        <para>Occurs when URI accessibility is checked.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Security.Resources.DirectoryAccessRule">
      <summary>
        <para>A rule that allows or denies access to a file directory.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Security.Resources.DirectoryAccessRule.#ctor(DevExpress.Security.Resources.AccessPermission)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> that provides the specified access permission to file directories.</para>
      </summary>
      <param name="permission">The <see cref="T:DevExpress.Security.Resources.AccessPermission"/> enumeration value that specifies whether the created rule allows or denies access to file directories.</param>
    </member>
    <member name="M:DevExpress.Security.Resources.DirectoryAccessRule.#ctor(DevExpress.Security.Resources.AccessPermission,System.String[])">
      <summary>
        <para>Creates the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> type rule that provides the specified access permission to the specified file directories.</para>
      </summary>
      <param name="permission">The <see cref="T:DevExpress.Security.Resources.AccessPermission"/> enumeration value that specifies whether the created rule allows or denies access to the specified file directories.</param>
      <param name="directories">An array of file directories that the created rule allows or denies.</param>
    </member>
    <member name="M:DevExpress.Security.Resources.DirectoryAccessRule.Allow(System.String[])">
      <summary>
        <para>Creates the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> that allows resource loading only from the file directories passed as the parameter.</para>
      </summary>
      <param name="directories">An array of file directories that this rule allows. Other directories are considered as denied in this application.</param>
      <returns>An instance of the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> class.</returns>
    </member>
    <member name="M:DevExpress.Security.Resources.DirectoryAccessRule.Deny(System.String[])">
      <summary>
        <para>Creates the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> that denies resource load from the file directories passed as the parameter.</para>
      </summary>
      <param name="directories">An array of file directories that this rule denies. Other directories are considered as allowed in this application.</param>
      <returns>An instance of the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> class.</returns>
    </member>
    <member name="T:DevExpress.Security.Resources.IAccessRule">
      <summary>
        <para>A rule that allows or denies access.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Security.Resources.IAccessRule.Permission">
      <summary>
        <para>Indicates whether the rule allows or denies access.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Security.Resources.AccessPermission"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Security.Resources.IUriAccessRule">
      <summary>
        <para>A rule that allows or denies access to a URI.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Security.Resources.IUriAccessRule.CheckUri(System.Uri)">
      <summary>
        <para>Determines whether the rule allows resource load from the specified URI.</para>
      </summary>
      <param name="uri">The URI whose accessibility this method checks.</param>
      <returns>true, if the application can load resources from the specified URI. Otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.Security.Resources.UriAccessRule">
      <summary>
        <para>A base class for the <see cref="T:DevExpress.Security.Resources.DirectoryAccessRule"/> and <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> classes.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Security.Resources.UrlAccessRule">
      <summary>
        <para>A rule that allows or denies access to a URL.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Security.Resources.UrlAccessRule.#ctor(DevExpress.Security.Resources.AccessPermission)">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> that provides the specified access permission to URLs.</para>
      </summary>
      <param name="permission">The <see cref="T:DevExpress.Security.Resources.AccessPermission"/> enumeration value that specifies whether the created rule allows or denies access to URls.</param>
    </member>
    <member name="M:DevExpress.Security.Resources.UrlAccessRule.#ctor(DevExpress.Security.Resources.AccessPermission,System.String[])">
      <summary>
        <para>Creates the <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> that provides the specified access permission to specified URLs.</para>
      </summary>
      <param name="permission">The <see cref="T:DevExpress.Security.Resources.AccessPermission"/> enumeration value that specifies whether the created rule allows or denies access to the specified URls.</param>
      <param name="urls">An array of Urls that the created rule allows or denies.</param>
    </member>
    <member name="M:DevExpress.Security.Resources.UrlAccessRule.Allow(System.String[])">
      <summary>
        <para>Creates the <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> rule that allows resource loading only from the URLs passed as the parameter.</para>
      </summary>
      <param name="urls">An array of URLs that this rule allows. Other URLs are considered as denied in this application.</param>
      <returns>An instance of the <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> class.</returns>
    </member>
    <member name="M:DevExpress.Security.Resources.UrlAccessRule.Deny(System.String[])">
      <summary>
        <para>Creates the <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> that denies resource loading from the URLs passed as the parameter.</para>
      </summary>
      <param name="urls">An array of URLs that this rule denies. Other URLs are considered as allowed in this application.</param>
      <returns>An instance of the <see cref="T:DevExpress.Security.Resources.UrlAccessRule"/> class.</returns>
    </member>
    <member name="N:DevExpress.Services">
      <summary>
        <para>Contains classes representing a set of services intended to facilitate the implementation of common tasks, such as keyboard and mouse event handling.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Services.IKeyboardHandlerService">
      <summary>
        <para>Defines a service responsible for processing keyboard input.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a key down event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the pressed key and key modifiers.</param>
    </member>
    <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a key press event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> object specifying the character that is composed when the user presses a key.</param>
    </member>
    <member name="M:DevExpress.Services.IKeyboardHandlerService.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a key up event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the released key and key modifiers.</param>
    </member>
    <member name="T:DevExpress.Services.IMouseHandlerService">
      <summary>
        <para>Defines a service responsible for handling mouse events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a mouse down event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a mouse move event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a mouse up event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="M:DevExpress.Services.IMouseHandlerService.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method in a descending class to handle a mouse wheel event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="T:DevExpress.Services.IProgressIndicationService">
      <summary>
        <para>Exposes functionality that enables you to display a progress indicator for time-consuming operations.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Services.IProgressIndicationService.Begin(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes and displays a progress indicator.</para>
      </summary>
      <param name="displayName">A string indicating what action is currently performed</param>
      <param name="minProgress">An integer specifying the minimum indicator value.</param>
      <param name="maxProgress">An integer specifying the maximum indicator value.</param>
      <param name="currentProgress">An integer specifying the current indicator value.</param>
    </member>
    <member name="M:DevExpress.Services.IProgressIndicationService.End">
      <summary>
        <para>Finalizes progress indication.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Services.IProgressIndicationService.SetProgress(System.Int32)">
      <summary>
        <para>Modifies the indicator value to track progress.</para>
      </summary>
      <param name="currentProgress">An integer that is the value indicating the current progress.</param>
    </member>
    <member name="T:DevExpress.Services.KeyboardHandlerServiceWrapper">
      <summary>
        <para>Represents  a base class for custom services used to process keyboard input.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.#ctor(DevExpress.Services.IKeyboardHandlerService)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Services.KeyboardHandlerServiceWrapper"/> class with the specified service.</para>
      </summary>
      <param name="service">An object exposing the <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface.</param>
    </member>
    <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
        <para>Override this method to handle a key down event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the pressed key and key modifiers.</param>
    </member>
    <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
        <para>Override this method to handle a key press event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> object specifying the character that is composed when the user presses a key.</param>
    </member>
    <member name="M:DevExpress.Services.KeyboardHandlerServiceWrapper.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
        <para>Override this method to handle a key up event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> object containing information about the released key and key modifiers.</param>
    </member>
    <member name="P:DevExpress.Services.KeyboardHandlerServiceWrapper.Service">
      <summary>
        <para>Provides access to the service interface of the wrapper.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface of the wrapper.</value>
    </member>
    <member name="T:DevExpress.Services.MouseHandlerServiceWrapper">
      <summary>
        <para>Represents  a base class for custom services used to process mouse events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.#ctor(DevExpress.Services.IMouseHandlerService)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Services.MouseHandlerServiceWrapper"/> class with the specified service.</para>
      </summary>
      <param name="service">An object exposing the <see cref="T:DevExpress.Services.IMouseHandlerService"/> interface.</param>
    </member>
    <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method to handle a mouse down event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method to handle a mouse move event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method to handle a mouse up event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="M:DevExpress.Services.MouseHandlerServiceWrapper.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <para>Override this method to handle a mouse wheel event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object containing information on pressed mouse buttons, coordinates of the mouse, and the amount the mouse wheel moved.</param>
    </member>
    <member name="P:DevExpress.Services.MouseHandlerServiceWrapper.Service">
      <summary>
        <para>Provides access to the service interface of the wrapper.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Services.IKeyboardHandlerService"/> interface of the wrapper.</value>
    </member>
    <member name="N:DevExpress.Utils">
      <summary>
        <para>Contains utility classes used by DevExpress controls and components.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.AzureCompatibility">
      <summary>
        <para>Provides an option to fix issues with unexpected output content (such as red crosses X, distorted fonts, etc.) for Printing, Reporting, RichEditDocumentServer and PDF libraries used on the Microsoft Azure Web Sites.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.AzureCompatibility.Enable">
      <summary>
        <para>Specifies whether or not the PDF export mode is Azure-compatible.</para>
      </summary>
      <value>true if the PDF export is Azure-compatible; otherwise false.</value>
    </member>
    <member name="N:DevExpress.Utils.Commands">
      <summary>
        <para>Contains classes that implement the Command pattern.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Commands.Command">
      <summary>
        <para>Represents a command.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Commands.Command.CanExecute">
      <summary>
        <para>Determines whether the command can execute in its current state.</para>
      </summary>
      <returns>true if the command can execute; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.CommandSourceType">
      <summary>
        <para>Gets or sets the type of the object which invokes the command.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Commands.CommandSourceType"/> enumeration value, specifying the object type.</value>
    </member>
    <member name="M:DevExpress.Utils.Commands.Command.CreateDefaultCommandUIState">
      <summary>
        <para>Creates an object defining the command state for the current command.</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface that defines the command state.</returns>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.Description">
      <summary>
        <para>Gets the text description of a command.</para>
      </summary>
      <value>A string containing the command&#39;s description.</value>
    </member>
    <member name="M:DevExpress.Utils.Commands.Command.Execute">
      <summary>
        <para>Executes the command on the current command target.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Commands.Command.ForceExecute(DevExpress.Utils.Commands.ICommandUIState)">
      <summary>
        <para>Performs a command action regardless of a command state.</para>
      </summary>
      <param name="state">An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the command state.</param>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.HideDisabled">
      <summary>
        <para>Gets or sets whether the object to which the command is attached is hidden, if the command is disabled.</para>
      </summary>
      <value>true to hide the object with a disabled command; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.Image">
      <summary>
        <para>Gets an image associated with the command.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.KeyTip">
      <summary>
        <para>Gets a key tip associated with the command.</para>
      </summary>
      <value>A string value that is the command key tip.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.LargeImage">
      <summary>
        <para>Gets a larger image associated with the command.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Image"/> object representing the associated image.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.MenuCaption">
      <summary>
        <para>Gest the menu caption associated with the current command.</para>
      </summary>
      <value>A string representing the text of the menu item.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.ShowsModalDialog">
      <summary>
        <para>Indicates whether a command invokes a modal dialog when executing.</para>
      </summary>
      <value>true if a modal dialog is displayed while executing the command; otherwise, false. By default it is false.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.SupportsImage">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Utils.Commands.Command.SvgImage">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Utils.Commands.Command.UpdateUIState(DevExpress.Utils.Commands.ICommandUIState)">
      <summary>
        <para>Updates the command state.</para>
      </summary>
      <param name="state">An <see cref="T:DevExpress.Utils.Commands.ICommandUIState"/> interface defining the state of a command.</param>
    </member>
    <member name="T:DevExpress.Utils.Commands.CommandSourceType">
      <summary>
        <para>Lists the command sources.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Commands.CommandSourceType.Keyboard">
      <summary>
        <para>The command is issued from the keyboard.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Commands.CommandSourceType.Menu">
      <summary>
        <para>The command is issued from the menu.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Commands.CommandSourceType.Mouse">
      <summary>
        <para>The command is issued using a mouse.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Commands.CommandSourceType.Unknown">
      <summary>
        <para>The type of the command source is not known.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Commands.ICommandUIState">
      <summary>
        <para>Defines a command state.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Commands.ICommandUIState.Checked">
      <summary>
        <para>Gets or sets the checked state of the command.</para>
      </summary>
      <value>true if the command state is checked; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.ICommandUIState.EditValue">
      <summary>
        <para>Gets or sets the value used by a command.</para>
      </summary>
      <value>An object representing the value used by a command.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.ICommandUIState.Enabled">
      <summary>
        <para>Gets or sets whether the command is enabled.</para>
      </summary>
      <value>true to enable the command; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.Commands.ICommandUIState.Visible">
      <summary>
        <para>Gets or sets whether the UI element to which the command is attached is visible.</para>
      </summary>
      <value>true to display the UI element; otherwise, false.</value>
    </member>
    <member name="N:DevExpress.Utils.Controls">
      <summary>
        <para>Contains classes that serve as the base for objects implementing particular aspects of DevExpress controls&#39; functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs">
      <summary>
        <para>Provides data for the events that fire after option changes .</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object with default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value representing the name of the option whose value has been changed. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name"/> property.</param>
      <param name="oldValue">A <see cref="T:System.Object"/> value representing the option&#39;s previous value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue"/> property.</param>
      <param name="newValue">A <see cref="T:System.Object"/> value representing the option&#39;s current value. This value is assigned to the <see cref="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue"/> property.</param>
    </member>
    <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.Name">
      <summary>
        <para>Gets the name of the option whose value has been changed.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value representing the option&#39;s name.</value>
    </member>
    <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.NewValue">
      <summary>
        <para>Gets or sets the option&#39;s current value.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value representing the option&#39;s current value.</value>
    </member>
    <member name="P:DevExpress.Utils.Controls.BaseOptionChangedEventArgs.OldValue">
      <summary>
        <para>Gets the option&#39;s previous value.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value representing the option&#39;s previous value.</value>
    </member>
    <member name="T:DevExpress.Utils.Controls.BaseOptionChangedEventHandler">
      <summary>
        <para>Represents a method that will handle the event raised after the option has been changed.</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.Controls.BaseOptionChangedEventArgs"/> object that contains data related to the event.</param>
    </member>
    <member name="T:DevExpress.Utils.Controls.BaseOptions">
      <summary>
        <para>Serves as a base for classes representing options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> class.</para>
      </summary>
      <param name="viewBagOwner">An object that implements the IViewBagOwner interface.</param>
      <param name="objectPath">The string value.</param>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all settings from the options object passed as a parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.</param>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Utils.Controls.BaseOptions"></see> object by disallowing visual updates until the EndUpdate or CancelUpdate method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.Controls.BaseOptions"></see> object after it has been locked by the BeginUpdate method, without causing an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.Controls.BaseOptions"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.Reset">
      <summary>
        <para>Resets all options to their default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Controls.BaseOptions.ToString">
      <summary>
        <para>Returns a string representing the currently enabled options.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value representing the currently enabled options. &quot;&quot; (String.Empty) if no option is enabled.</returns>
    </member>
    <member name="T:DevExpress.Utils.DefaultBoolean">
      <summary>
        <para>Lists values which specify the validity of a condition (indicates whether the condition is true or false).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DefaultBoolean.Default">
      <summary>
        <para>The value is determined by the current object&#39;s parent object setting (e.g., a control setting).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DefaultBoolean.False">
      <summary>
        <para>Corresponds to a Boolean value of false.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.DefaultBoolean.True">
      <summary>
        <para>Corresponds to a Boolean value of true.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.DXCollection`1">
      <summary>
        <para>Represents the universal collection, which may be used as a base class for other collection classes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DXCollection`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXCollection`1"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.DXCollection`1.Item(System.Int32)">
      <summary>
        <para>Provides indexed access to individual items in the collection.</para>
      </summary>
      <param name="index">A zero-based integer specifying the desired item&#39;s position within the collection. If it&#39;s negative or exceeds the last available index, an exception is raised.</param>
      <value>A &lt;T&gt; object which represents the item at the specified position.</value>
    </member>
    <member name="T:DevExpress.Utils.DXCollectionBase`1">
      <summary>
        <para>Represents the universal collection, which may be used as a base class for other collection classes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> class with the specified capacity.</para>
      </summary>
      <param name="capacity">An integer value representing the number of elements that the collection can contain. This value is assigned to the <see cref="P:DevExpress.Utils.DXCollectionBase`1.Capacity"/> property.</param>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Add(`0)">
      <summary>
        <para>Adds the specified object to the collection.</para>
      </summary>
      <param name="value">A &lt;T&gt; object to append to the collection.</param>
      <returns>An integer value indicating the position into which the new element was inserted.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.AddRange(System.Collections.ICollection)">
      <summary>
        <para>Adds a collection of elements to the end of the collection.</para>
      </summary>
      <param name="collection">A <see cref="T:System.Collections.ICollection"/> object which represents the collection of elements to append to the collection.</param>
    </member>
    <member name="P:DevExpress.Utils.DXCollectionBase`1.Capacity">
      <summary>
        <para>Gets or sets the number of elements that the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> can contain.</para>
      </summary>
      <value>An integer value representing the number of elements that the collection can contain.</value>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Clear">
      <summary>
        <para>Removes all objects from the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> instance.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Contains(`0)">
      <summary>
        <para>Determines whether the collection contains the specified item.</para>
      </summary>
      <param name="value">A &lt;T&gt; object to locate in the collection.</param>
      <returns>true if the collection contains the specified item; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.CopyTo(`0[],System.Int32)">
      <summary>
        <para>Copies all the elements from the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> instance to a one-dimensional array, starting at the specified index of the target array.</para>
      </summary>
      <param name="array">A one-dimensional array of &lt;T&gt; objects.</param>
      <param name="index">An integer value specifying the zero-based index in the target array at which copying begins.</param>
    </member>
    <member name="P:DevExpress.Utils.DXCollectionBase`1.Count">
      <summary>
        <para>Gets the number of elements contained in the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> instance.</para>
      </summary>
      <value>An integer value representing the number of elements contained in the collection.</value>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Find(System.Predicate{`0})">
      <summary>
        <para>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:DevExpress.Utils.DXCollectionBase`1"/>.</para>
      </summary>
      <param name="match">The <see cref="T:System.Predicate`1"/> delegate that defines the conditions of the element to search for.</param>
      <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.ForEach(System.Action{`0})">
      <summary>
        <para>Performs the specified action on each element of the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/>.</para>
      </summary>
      <param name="action">The <see cref="T:System.Action"/>&lt;T&gt; delegate to perform on each element of the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.GetEnumerator">
      <summary>
        <para>Returns an enumerator that iterates through the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> instance.</para>
      </summary>
      <returns>A <see cref="T:System.Collections.IEnumerator"/> for the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> instance.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.IndexOf(`0)">
      <summary>
        <para>Returns the zero-based index of the specified element in the collection.</para>
      </summary>
      <param name="value">A &lt;T&gt; object to locate in the collection.</param>
      <returns>An integer value representing the position of the specified element in the collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Insert(System.Int32,`0)">
      <summary>
        <para>Inserts the specified element into the collection at the specified position.</para>
      </summary>
      <param name="index">An integer value which represents the zero-based index at which the element should be inserted.</param>
      <param name="value">A &lt;T&gt; object to insert into the collection.</param>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Remove(`0)">
      <summary>
        <para>Removes the specified element from the collection.</para>
      </summary>
      <param name="value">A &lt;T&gt; object to be removed from the collection.</param>
      <returns>true if the specified element has been successfully removed from the collection; false if the specified element has not been found within the collection.</returns>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the element at the specified index of the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> instance.</para>
      </summary>
      <param name="index">A zero-based integer specifying the index of the object to remove. If it&#39;s negative or exceeds the number of elements, an exception is raised.</param>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.Sort(System.Collections.Generic.IComparer{`0})">
      <summary>
        <para>Sorts the elements in the entire <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> using the specified comparer.</para>
      </summary>
      <param name="comparer">The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</param>
    </member>
    <member name="M:DevExpress.Utils.DXCollectionBase`1.ToArray">
      <summary>
        <para>Copies the <see cref="T:DevExpress.Utils.DXCollectionBase`1"/> elements to a new array.</para>
      </summary>
      <returns>An array containing the DXCollectionBase&lt;T&gt; elements.</returns>
    </member>
    <member name="P:DevExpress.Utils.DXCollectionBase`1.UniquenessProviderType">
      <summary>
        <para>Gets or sets the type of an object, which provides uniqueness for the current <see cref="T:DevExpress.Utils.DXCollectionBase`1"/>.</para>
      </summary>
      <value>A DevExpress.Utils.DXCollectionUniquenessProviderType instance.</value>
    </member>
    <member name="N:DevExpress.Utils.Filtering">
      <summary>
        <para>Contains types related to pop-up filter menus, filter editors, filter panels, etc.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.Filtering.Internal">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId">
      <summary>
        <para>Lists values of localized strings. See the <see cref="T:DevExpress.Utils.Filtering.Internal.FilterUIElementResXLocalizer"/> class description to learn more.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAboveAverageDescription">
      <summary>
        <para>Return value: &quot;Values above the average&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAboveAverageName">
      <summary>
        <para>Return value: &quot;Above Average&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAfterDescription">
      <summary>
        <para>Return value: &quot;After a date&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAfterName">
      <summary>
        <para>Return value: &quot;After&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAllDatesInThePeriodDescription">
      <summary>
        <para>Return value: &quot;Dates within a range&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAllDatesInThePeriodName">
      <summary>
        <para>Return value: &quot;All Dates In The Period&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAprilDescription">
      <summary>
        <para>Return value: &quot;April&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAprilName">
      <summary>
        <para>Return value: &quot;April&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAugustDescription">
      <summary>
        <para>Return value: &quot;August&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterAugustName">
      <summary>
        <para>Return value: &quot;August&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeforeDescription">
      <summary>
        <para>Return value: &quot;Prior to a date&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeforeName">
      <summary>
        <para>Return value: &quot;Before&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeginsWithDescription">
      <summary>
        <para>Return value: &quot;Starts with a specific text&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBeginsWithName">
      <summary>
        <para>Return value: &quot;Begins With&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBelowAverageDescription">
      <summary>
        <para>Return value: &quot;Values below the average&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBelowAverageName">
      <summary>
        <para>Return value: &quot;Below Average&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBetweenDescription">
      <summary>
        <para>Return value: &quot;Values within a range&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBetweenName">
      <summary>
        <para>Return value: &quot;Between&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBottomNDescription">
      <summary>
        <para>Return value: &quot;The lowest values&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterBottomNName">
      <summary>
        <para>Return value: &quot;Bottom N&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterContainsDescription">
      <summary>
        <para>Return value: &quot;Contains a specific text&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterContainsName">
      <summary>
        <para>Return value: &quot;Contains&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterCustomDescription">
      <summary>
        <para>Return value: &quot;Two conditions combined by the AND or OR operators&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterCustomName">
      <summary>
        <para>Return value: &quot;Custom Filter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDatePeriodsDescription">
      <summary>
        <para>Return value: &quot;Common date ranges&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDatePeriodsName">
      <summary>
        <para>Return value: &quot;Specific Date Periods&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDecemberDescription">
      <summary>
        <para>Return value: &quot;December&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDecemberName">
      <summary>
        <para>Return value: &quot;December&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotBeginsWithDescription">
      <summary>
        <para>Return value: &quot;Does not start with a specific text&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotBeginsWithName">
      <summary>
        <para>Return value: &quot;Does Not Begin With&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotBeginWithDescription">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotBeginWithName">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotContainDescription">
      <summary>
        <para>Return value: &quot;Does not contain a specific text&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotContainName">
      <summary>
        <para>Return value: &quot;Does not contain&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEndsWithDescription">
      <summary>
        <para>Return value: &quot;Does not end with a specific text&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEndsWithName">
      <summary>
        <para>Return value: &quot;Does Not End With&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEndWithDescription">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEndWithName">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEqualDescription">
      <summary>
        <para>Return value: &quot;Does not equal a value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterDoesNotEqualName">
      <summary>
        <para>Return value: &quot;Does Not Equal&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEndsWithDescription">
      <summary>
        <para>Return value: &quot;Ends with a specific text&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEndsWithName">
      <summary>
        <para>Return value: &quot;Ends With&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEqualsDescription">
      <summary>
        <para>Return value: &quot;Equals a value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterEqualsName">
      <summary>
        <para>Return value: &quot;Equals&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterFebruaryDescription">
      <summary>
        <para>Return value: &quot;February&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterFebruaryName">
      <summary>
        <para>Return value: &quot;February&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanDescription">
      <summary>
        <para>Return value: &quot;Greater than a value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanName">
      <summary>
        <para>Return value: &quot;Greater Than&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanOrEqualToDescription">
      <summary>
        <para>Return value: &quot;Greater than or equal to a value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterGreaterThanOrEqualToName">
      <summary>
        <para>Return value: &quot;Greater Than Or Equal To&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsBlankDescription">
      <summary>
        <para>Return value: &quot;Empty or not specified&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsBlankName">
      <summary>
        <para>Return value: &quot;Is Blank&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotBlankDescription">
      <summary>
        <para>Return value: &quot;Not empty&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotBlankName">
      <summary>
        <para>Return value: &quot;Is Not Blank&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotNullDescription">
      <summary>
        <para>Return value: &quot;Not empty&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNotNullName">
      <summary>
        <para>Return value: &quot;Is Not Null&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNullDescription">
      <summary>
        <para>Return value: &quot;Is empty&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsNullName">
      <summary>
        <para>Return value: &quot;Is Null&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsSameDayDescription">
      <summary>
        <para>Return value: &quot;The same date&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterIsSameDayName">
      <summary>
        <para>Return value: &quot;Is Same Day&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJanuaryDescription">
      <summary>
        <para>Return value: &quot;January&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJanuaryName">
      <summary>
        <para>Return value: &quot;January&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJulyDescription">
      <summary>
        <para>Return value: &quot;July&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJulyName">
      <summary>
        <para>Return value: &quot;July&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJuneDescription">
      <summary>
        <para>Return value: &quot;June&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterJuneName">
      <summary>
        <para>Return value: &quot;June&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastMonthDescription">
      <summary>
        <para>Return value: &quot;Last month&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastMonthName">
      <summary>
        <para>Return value: &quot;Last Month&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastQuarterDescription">
      <summary>
        <para>Return value: &quot;Last quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastQuarterName">
      <summary>
        <para>Return value: &quot;Last Quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastWeekDescription">
      <summary>
        <para>Return value: &quot;Last week&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastWeekName">
      <summary>
        <para>Return value: &quot;Last Week&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastYearDescription">
      <summary>
        <para>Return value: &quot;Last year&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLastYearName">
      <summary>
        <para>Return value: &quot;Last Year&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanDescription">
      <summary>
        <para>Return value: &quot;Less than a value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanName">
      <summary>
        <para>Return value: &quot;Less Than&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanOrEqualToDescription">
      <summary>
        <para>Return value: &quot;Less then or equal to a value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLessThanOrEqualToName">
      <summary>
        <para>Return value: &quot;Less Than Or Equal To&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLikeDescription">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterLikeName">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMarchDescription">
      <summary>
        <para>Return value: &quot;March&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMarchName">
      <summary>
        <para>Return value: &quot;March&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMayDescription">
      <summary>
        <para>Return value: &quot;May&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterMayName">
      <summary>
        <para>Return value: &quot;May&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextMonthDescription">
      <summary>
        <para>Return value: &quot;Next month&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextMonthName">
      <summary>
        <para>Return value: &quot;Next Month&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextQuarterDescription">
      <summary>
        <para>Return value: &quot;Next quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextQuarterName">
      <summary>
        <para>Return value: &quot;Next Quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextWeekDescription">
      <summary>
        <para>Return value: &quot;Next week&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextWeekName">
      <summary>
        <para>Return value: &quot;Next Week&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextYearDescription">
      <summary>
        <para>Return value: &quot;Next year&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNextYearName">
      <summary>
        <para>Return value: &quot;Next Year&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNoneDescription">
      <summary>
        <para>Return value: &quot;Choose One Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNoneName">
      <summary>
        <para>Return value: &quot;Choose One&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNotLikeDescription">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNotLikeName">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNovemberDescription">
      <summary>
        <para>Return value: &quot;November&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterNovemberName">
      <summary>
        <para>Return value: &quot;November&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterOctoberDescription">
      <summary>
        <para>Return value: &quot;October&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterOctoberName">
      <summary>
        <para>Return value: &quot;October&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter1Description">
      <summary>
        <para>Return value: &quot;First quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter1Name">
      <summary>
        <para>Return value: &quot;Quarter 1&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter2Description">
      <summary>
        <para>Return value: &quot;Second quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter2Name">
      <summary>
        <para>Return value: &quot;Quarter 2&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter3Description">
      <summary>
        <para>Return value: &quot;Third quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter3Name">
      <summary>
        <para>Return value: &quot;Quarter 3&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter4Description">
      <summary>
        <para>Return value: &quot;Fourth quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterQuarter4Name">
      <summary>
        <para>Return value: &quot;Quarter 4&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersBooleanDescription">
      <summary>
        <para>Return value: &quot;Filters Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersBooleanName">
      <summary>
        <para>Return value: &quot;Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersDateTimeDescription">
      <summary>
        <para>Return value: &quot;Date Filters Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersDateTimeName">
      <summary>
        <para>Return value: &quot;Date Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersEnumDescription">
      <summary>
        <para>Return value: &quot;Filters Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersEnumName">
      <summary>
        <para>Return value: &quot;Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSeptemberDescription">
      <summary>
        <para>Return value: &quot;September&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSeptemberName">
      <summary>
        <para>Return value: &quot;September&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierItemsDescription">
      <summary>
        <para>Return value: &quot;Items Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierItemsName">
      <summary>
        <para>Return value: &quot;Items&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierPercentsDescription">
      <summary>
        <para>Return value: &quot;Percents Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterSequenceQualifierPercentsName">
      <summary>
        <para>Return value: &quot;Percents&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersNumericDescription">
      <summary>
        <para>Return value: &quot;Numeric Filters Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersNumericName">
      <summary>
        <para>Return value: &quot;Numeric Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersTextDescription">
      <summary>
        <para>Return value: &quot;Text Filters Description&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFiltersTextName">
      <summary>
        <para>Return value: &quot;Text Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisMonthDescription">
      <summary>
        <para>Return value: &quot;This month&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisMonthName">
      <summary>
        <para>Return value: &quot;This Month&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisQuarterDescription">
      <summary>
        <para>Return value: &quot;This quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisQuarterName">
      <summary>
        <para>Return value: &quot;This Quarter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisWeekDescription">
      <summary>
        <para>Return value: &quot;This week&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisWeekName">
      <summary>
        <para>Return value: &quot;This Week&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisYearDescription">
      <summary>
        <para>Return value: &quot;This year&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterThisYearName">
      <summary>
        <para>Return value: &quot;This year&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTodayDescription">
      <summary>
        <para>Return value: &quot;Today&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTodayName">
      <summary>
        <para>Return value: &quot;Today&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTomorrowDescription">
      <summary>
        <para>Return value: &quot;Tomorrow&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTomorrowName">
      <summary>
        <para>Return value: &quot;Tomorrow&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTopNDescription">
      <summary>
        <para>Return value: &quot;The highest values&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterTopNName">
      <summary>
        <para>Return value: &quot;Top N&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterUserDescription">
      <summary>
        <para>Return value: &quot;Predefined Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterUserName">
      <summary>
        <para>Return value: &quot;Predefined Filters&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYearToDateDescription">
      <summary>
        <para>Return value: &quot;From the beginning of the year to the present&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYearToDateName">
      <summary>
        <para>Return value: &quot;Year To Date&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYesterdayDescription">
      <summary>
        <para>Return value: &quot;Yesterday&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFilterYesterdayName">
      <summary>
        <para>Return value: &quot;Yesterday&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIFirstLabel">
      <summary>
        <para>Return value: &quot;First&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptChooseOne">
      <summary>
        <para>Return value: &quot;Choose one...&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptEnterADate">
      <summary>
        <para>Return value: &quot;Enter a date...&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptEnterAValue">
      <summary>
        <para>Return value: &quot;Enter a value...&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptSearchControl">
      <summary>
        <para>Return value: &quot;Enter text to search...&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptSelectADate">
      <summary>
        <para>Return value: &quot;Select a date...&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUINullValuePromptSelectAValue">
      <summary>
        <para>Return value: &quot;Select a value...&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUISecondLabel">
      <summary>
        <para>Return value: &quot;Second&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUITypeLabel">
      <summary>
        <para>Return value: &quot;Type&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.CustomUIValueLabel">
      <summary>
        <para>Return value: &quot;Value&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUIClearFilter">
      <summary>
        <para>Return value: &quot;Clear Filter&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUIClose">
      <summary>
        <para>Return value: &quot;Close&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUISearchByDayCaption">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUISearchByMonthCaption">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUISearchByYearCaption">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUITabGroups">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.Filtering.Internal.FilterUIElementLocalizerStringId.FilteringUITabValues">
      <summary>
        <para>Return value: &quot;Values&quot;.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Filtering.Internal.FilterUIElementResXLocalizer">
      <summary>
        <para>Allows you to localize filter menu elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Filtering.Internal.FilterUIElementResXLocalizer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Filtering.Internal.FilterUIElementResXLocalizer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.FilterPopupExcelParseFilterCriteria"/>, <see cref="E:DevExpress.XtraTreeList.TreeList.FilterPopupExcelParseFilterCriteria"/>, <see cref="E:DevExpress.XtraVerticalGrid.VGridControl.FilterPopupExcelParseFilterCriteria"/> and <see cref="E:DevExpress.XtraPivotGrid.PivotGridControl.FilterPopupExcelParseFilterCriteria"/> events.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.FilterCriteria">
      <summary>
        <para>Gets the applied filter criteria.</para>
      </summary>
      <value>An object that specifies the filter criteria.</value>
    </member>
    <member name="P:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.Path">
      <summary>
        <para>Gets the name of the processed data field or the full path to the data field through object relationships.</para>
      </summary>
      <value>A string value that specifies the name of the processed data field or the full path to the data field through object relationships.</value>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetBlanks">
      <summary>
        <para>Selects the data value that corresponds to the blank value.</para>
      </summary>
      <returns>true, if the data value is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetEmpty">
      <summary>
        <para>Selects the data value that corresponds to the empty string value.</para>
      </summary>
      <returns>true, if the data value is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetNotBlanks">
      <summary>
        <para>Selects the data values that do not correspond to the blank value.</para>
      </summary>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetNotEmpty">
      <summary>
        <para>Selects the data values that do not correspond to the empty string value.</para>
      </summary>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetNotNull">
      <summary>
        <para>Selects the data values that do not correspond to the null value.</para>
      </summary>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetNull">
      <summary>
        <para>Selects the data value that corresponds to the null value.</para>
      </summary>
      <returns>true, if the data value is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetRange(System.Object,System.Object)">
      <summary>
        <para>Selects the specified range of values.</para>
      </summary>
      <param name="from">An object that specifies the start value of the range.</param>
      <param name="to">An object that specifies the end value of the range.</param>
      <returns>true, if the data value range is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetRange``1(``0,``0)">
      <summary>
        <para>Selects the specified range of values.</para>
      </summary>
      <param name="from">An object that specifies the start value of the range.</param>
      <param name="to">An object that specifies the end value of the range.</param>
      <returns>true, if the data value range is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetResult(System.Object[],System.Boolean)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="values">For internal use.</param>
      <param name="useInversion">For internal use.</param>
      <returns>For internal use.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetValue(System.Object,System.Boolean)">
      <summary>
        <para>Selects the specified value.</para>
      </summary>
      <param name="value">An object that specifies the value by which data is filtered.</param>
      <param name="useInversion">true, to select values that are not specified; otherwise, false.</param>
      <returns>true, if the data value is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetValue``1(``0)">
      <summary>
        <para>Selects the specified value.</para>
      </summary>
      <param name="value">An object that specifies the value by which data is filtered.</param>
      <returns>true, if the data value is successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetValues(System.Object[])">
      <summary>
        <para>Selects the specified values.</para>
      </summary>
      <param name="values">An array of values by which data is filtered.</param>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetValues``1(System.Collections.Generic.IReadOnlyCollection{``0})">
      <summary>
        <para>Selects the specified values.</para>
      </summary>
      <param name="values">An object that specifies the collection of values by which data is filtered.</param>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetValuesOrBlanks(System.Object[])">
      <summary>
        <para>Selects the specified values and the &quot;Blanks&quot; value.</para>
      </summary>
      <param name="values">An array of values by which data is filtered.</param>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.SetValuesOrBlanks``1(System.Collections.Generic.IReadOnlyCollection{``0})">
      <summary>
        <para>Selects the specified values and the &quot;Blanks&quot; value.</para>
      </summary>
      <param name="values">An object that specifies the collection of values by which data is filtered.</param>
      <returns>true, if the data values are successfully selected; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.Filtering.ParseFilterCriteriaEventArgs.Value">
      <summary>
        <para>Gets an object that specifies the filter menu view model.</para>
      </summary>
      <value>An object that specifies the filter menu view model.</value>
    </member>
    <member name="T:DevExpress.Utils.FormatInfo">
      <summary>
        <para>Provides formatting settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.#ctor">
      <summary>
        <para>Creates an instance of the <see cref="T:DevExpress.Utils.FormatInfo"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.#ctor(DevExpress.Utils.IComponentLoading)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.FormatInfo"/> class with the specified settings.</para>
      </summary>
      <param name="componentLoading">A DevExpress.Utils.IComponentLoading object.</param>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.#ctor(DevExpress.Utils.IComponentLoading,DevExpress.WebUtils.IViewBagOwner,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.FormatInfo"/> class with the specified settings.</para>
      </summary>
      <param name="componentLoading">A DevExpress.Utils.IComponentLoading object.</param>
      <param name="bagOwner">An object that implements the IViewBagOwner interface.</param>
      <param name="objectPath">The string value.</param>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.FormatInfo"/> class.</para>
      </summary>
      <param name="bagOwner">An object that implements the IViewBagOwner interface.</param>
      <param name="objectPath">The string value.</param>
    </member>
    <member name="P:DevExpress.Utils.FormatInfo.AlwaysUseThreadFormat">
      <summary>
        <para>Gets or sets whether a value for the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property should be determined each time the property is accessed.</para>
      </summary>
      <value>true if the value for the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property should be determined each time the property is accessed.</value>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.Assign(DevExpress.Utils.FormatInfo)">
      <summary>
        <para>Copies properties of the specified <see cref="T:DevExpress.Utils.FormatInfo"/> object to the current object.</para>
      </summary>
      <param name="info">The <see cref="T:DevExpress.Utils.FormatInfo"/> object whose properties must be copied.</param>
    </member>
    <member name="E:DevExpress.Utils.FormatInfo.Changed">
      <summary>
        <para>Occurs on changing properties of the current <see cref="T:DevExpress.Utils.FormatInfo"/> class object.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.FormatInfo.Empty">
      <summary>
        <para>Gets a <see cref="T:DevExpress.Utils.FormatInfo"/> object with default settings.</para>
      </summary>
      <value>The <see cref="T:DevExpress.Utils.FormatInfo"/> object with default property values.</value>
    </member>
    <member name="P:DevExpress.Utils.FormatInfo.Format">
      <summary>
        <para>Gets or sets the <see cref="T:System.IFormatProvider"/> object which specifies how values should be formatted.</para>
      </summary>
      <value>The IFormatProvider object which specifies how values should be formatted.</value>
    </member>
    <member name="P:DevExpress.Utils.FormatInfo.FormatString">
      <summary>
        <para>Gets the pattern for formatting values.</para>
      </summary>
      <value>The string representing the format pattern.</value>
    </member>
    <member name="P:DevExpress.Utils.FormatInfo.FormatType">
      <summary>
        <para>Gets or sets the type of formatting specified by the current <see cref="T:DevExpress.Utils.FormatInfo"/> object.</para>
      </summary>
      <value>One of <see cref="T:DevExpress.Utils.FormatType"/> values specifying the formatting type.</value>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.GetDisplayText(System.Object)">
      <summary>
        <para>Gets the value formatted according to the format pattern and using the format provider settings.</para>
      </summary>
      <param name="val">The value to format.</param>
      <returns>The text representation of the specified value according to settings of the current <see cref="T:DevExpress.Utils.FormatInfo"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.GetFormatString">
      <summary>
        <para>Returns the actual format string.</para>
      </summary>
      <returns>The actual format string.</returns>
    </member>
    <member name="P:DevExpress.Utils.FormatInfo.IsEmpty">
      <summary>
        <para>Tests whether properties of the current object are set to default values.</para>
      </summary>
      <value>true if the object properties are set to default values; otherwise,false.</value>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.IsEquals(DevExpress.Utils.FormatInfo)">
      <summary>
        <para>Compares properties of the current object with settings of the specified <see cref="T:DevExpress.Utils.FormatInfo"/> object.</para>
      </summary>
      <param name="info">The <see cref="T:DevExpress.Utils.FormatInfo"/> object whose properties are compared.</param>
      <returns>true if properties of the current object equal to corresponding properties of the info parameter.</returns>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.LockParse">
      <summary>
        <para>The method supports the internal .NET infrastructure and you must not call it from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.OnEndDeserializing(System.String)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="restoredVersion"></param>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.OnEndSerializing">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.OnStartDeserializing(DevExpress.Utils.LayoutAllowEventArgs)">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="e"></param>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.OnStartSerializing">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.Parse">
      <summary>
        <para>Performs actions when the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property changes.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.Reset">
      <summary>
        <para>Reverts properties of the current object to default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.ResetCache">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.ShouldSerialize">
      <summary>
        <para>Tests whether the <see cref="T:DevExpress.Utils.FormatInfo"/> object should be persisted.</para>
      </summary>
      <returns>true if the object should be persisted; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value that represents the current object.</returns>
    </member>
    <member name="M:DevExpress.Utils.FormatInfo.UnlockParse">
      <summary>
        <para>The method supports the internal .NET infrastructure and you must not call it from your code.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.FormatType">
      <summary>
        <para>Enumerates values for the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FormatType.Custom">
      <summary>
        <para>Use Custom to format string values.Use Custom when assigning a custom <see cref="T:System.IFormatProvider"/> to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property.  Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to Custom does not change the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> and <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> property values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FormatType.DateTime">
      <summary>
        <para>Specifies that values should be formatted as the <see cref="T:System.DateTime"/> type.Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to DateTime assigns the static <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo"/> format provider to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property. This defines the format provider for the current culture.
Also <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> is set to &quot;d&quot; (short date pattern).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FormatType.None">
      <summary>
        <para>No formatting is performed.Setting the <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> property to None clears the <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> property and sets the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> object to null.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.FormatType.Numeric">
      <summary>
        <para>Specifies that values should be formatted as numbers.Setting <see cref="P:DevExpress.Utils.FormatInfo.FormatType"/> to Numeric assigns the static System.Globalization.NumberFormatInfo.CurrentInfo format provider to the <see cref="P:DevExpress.Utils.FormatInfo.Format"/> property. This defines the format provider for the current culture.Also <see cref="P:DevExpress.Utils.FormatInfo.FormatString"/> is set to an empty string.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.HorzAlignment">
      <summary>
        <para>Specifies the horizontal alignment of an object or text in a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HorzAlignment.Center">
      <summary>
        <para>Centers an object or text within a region.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HorzAlignment.Default">
      <summary>
        <para>Places an object or text at the default position, which is determined by a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HorzAlignment.Far">
      <summary>
        <para>Places an object/text at a far position.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.HorzAlignment.Near">
      <summary>
        <para>Places an object/text at a near position.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Utils.IoC">
      <summary>
        <para>Contains classes that provide support for the &quot;Inversion of Control&quot; software design pattern in DevExpress products.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.IoC.FactoryRegistration">
      <summary>
        <para>Enables you to register factories that are used to create object instances.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.FactoryRegistration.#ctor(System.Func{System.Object})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.FactoryRegistration"/> class with the specified factory.</para>
      </summary>
      <param name="factory">A function, specifying the required <see cref="T:System.Object"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.IoC.FactoryRegistration.AsTransient">
      <summary>
        <para>Modifies the registration so that a new dependency will be created on each <see cref="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve(System.Type)"/> method call.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.FactoryRegistration.Dispose">
      <summary>
        <para>Releases all resources used by <see cref="T:DevExpress.Utils.IoC.FactoryRegistration"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.IoC.FactoryRegistration.Instance">
      <summary>
        <para>Gets the cached resolved instance for a resolved non-transient dependency.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="P:DevExpress.Utils.IoC.FactoryRegistration.Transient">
      <summary>
        <para>Gets the flag for a transient registration.</para>
      </summary>
      <value>A Boolean value.</value>
    </member>
    <member name="T:DevExpress.Utils.IoC.InstanceRegistration">
      <summary>
        <para>Provides a container registration for dependencies that are registered by passing an instance (using the <see cref="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterInstance(System.Type,System.Object)"/> method).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.InstanceRegistration.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.InstanceRegistration"/> class with the specified instance.</para>
      </summary>
      <param name="instance">A <see cref="T:System.Object"/> value.</param>
    </member>
    <member name="P:DevExpress.Utils.IoC.InstanceRegistration.Instance">
      <summary>
        <para>Gets the passed reference as a dependency.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="T:DevExpress.Utils.IoC.IntegrityContainer">
      <summary>
        <para>A dependency injection container.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.IntegrityContainer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.Dispose">
      <summary>
        <para>Releases all resources used by <see cref="T:DevExpress.Utils.IoC.IntegrityContainer"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterFactory``1(System.Func{``0})">
      <summary>
        <para>Registers a delegate to resolve an instance of the specified type with a specified TServiceType key.</para>
      </summary>
      <param name="factory">A function, specifying the type to resolve.</param>
      <returns>A <see cref="T:DevExpress.Utils.IoC.FactoryRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterFactory``1(System.Func{System.IServiceProvider,``0})">
      <summary>
        <para>Registers a delegate with the specified container as an argument to resolve an instance of the specified type with a corresponding TServiceType key.</para>
      </summary>
      <param name="factory">A function, specifying the type to resolve.</param>
      <returns>A <see cref="T:DevExpress.Utils.IoC.FactoryRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterInstance(System.Type,System.Object)">
      <summary>
        <para>Registers the specified instance as a singleton with the specified serviceType key.</para>
      </summary>
      <param name="serviceType">A <see cref="T:System.Type"/> object.</param>
      <param name="instance">A <see cref="T:System.Object"/> value.</param>
      <returns>An <see cref="T:DevExpress.Utils.IoC.InstanceRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterInstance``1(``0)">
      <summary>
        <para>Registers the specified instance as a singleton with the specified TServiceType key.</para>
      </summary>
      <param name="instance">A <see cref="T:System.Object"/> value.</param>
      <returns>An <see cref="T:DevExpress.Utils.IoC.InstanceRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterType(System.Type,System.Type)">
      <summary>
        <para>Registers the specified concreteType with the specified serviceType key.</para>
      </summary>
      <param name="serviceType">A <see cref="T:System.Type"/> object.</param>
      <param name="concreteType">A <see cref="T:System.Type"/> object.</param>
      <returns>A <see cref="T:DevExpress.Utils.IoC.TypeRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterType``1">
      <summary>
        <para>Registers the specified TConcreteType as a dependency.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.IoC.TypeRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterType``2">
      <summary>
        <para>Registers the specified TConcreteType with the specified TServiceType key.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Utils.IoC.TypeRegistration"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve(System.Type)">
      <summary>
        <para>Gets an instance with the specified serviceType key.</para>
      </summary>
      <param name="serviceType">A <see cref="T:System.Type"/> object.</param>
      <returns>A <see cref="T:System.Object"/> value.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve``1">
      <summary>
        <para>Gets an instance of the specified type with a corresponding TServiceType key.</para>
      </summary>
      <returns>A <see cref="T:System.Object"/> value.</returns>
    </member>
    <member name="T:DevExpress.Utils.IoC.Registration">
      <summary>
        <para>Provides an abstract container registration.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.IoC.RegistrationFailedException">
      <summary>
        <para>Occurs if there is an error during registration of a type.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.RegistrationFailedException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.RegistrationFailedException"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.RegistrationFailedException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.RegistrationFailedException"/> class with the specified error message.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value, specifying the error message.</param>
    </member>
    <member name="M:DevExpress.Utils.IoC.RegistrationFailedException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.RegistrationFailedException"/> class with the specified message and exception details.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value, specifying the message displayed when a database connection fails.</param>
      <param name="inner">A <see cref="T:System.Exception"/> object, specifying the error details.</param>
    </member>
    <member name="T:DevExpress.Utils.IoC.ResolutionFailedException">
      <summary>
        <para>Occurs if there is an error during request of a dependency.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.ResolutionFailedException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.ResolutionFailedException"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.ResolutionFailedException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.ResolutionFailedException"/> class with the specified error message.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value, specifying the error message.</param>
    </member>
    <member name="M:DevExpress.Utils.IoC.ResolutionFailedException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.ResolutionFailedException"/> class with the specified message and exception details.</para>
      </summary>
      <param name="message">A <see cref="T:System.String"/> value, specifying the message displayed when a database connection fails.</param>
      <param name="inner">A <see cref="T:System.Exception"/> object, specifying the error details.</param>
    </member>
    <member name="T:DevExpress.Utils.IoC.TypeRegistration">
      <summary>
        <para>Enables a container registration for dependencies that are registered by type (i.e., by calling the <see cref="M:DevExpress.Utils.IoC.IntegrityContainer.RegisterType(System.Type,System.Type)"/> methods).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.IoC.TypeRegistration.#ctor(System.Type,System.Reflection.ConstructorInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.IoC.TypeRegistration"/> class with the specified settings.</para>
      </summary>
      <param name="concreteType">A <see cref="T:System.Type"/> object.</param>
      <param name="constructorInfo">A <see cref="T:System.Reflection.ConstructorInfo"/> object.</param>
    </member>
    <member name="M:DevExpress.Utils.IoC.TypeRegistration.AsTransient">
      <summary>
        <para>Modifies the registration so that a new dependency will be created on each <see cref="M:DevExpress.Utils.IoC.IntegrityContainer.Resolve(System.Type)"/> method call.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.IoC.TypeRegistration.ConcreteType">
      <summary>
        <para>Gets the type of a dependency.</para>
      </summary>
      <value>A <see cref="T:System.Type"/> object.</value>
    </member>
    <member name="P:DevExpress.Utils.IoC.TypeRegistration.ConstructorInfo">
      <summary>
        <para>Gets the selected constructor to be resolved.</para>
      </summary>
      <value>A <see cref="T:System.Reflection.ConstructorInfo"/> object.</value>
    </member>
    <member name="M:DevExpress.Utils.IoC.TypeRegistration.Dispose">
      <summary>
        <para>Releases all resources used by <see cref="T:DevExpress.Utils.IoC.TypeRegistration"/>.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.IoC.TypeRegistration.Instance">
      <summary>
        <para>Gets the cached instance for a resolved non-transient dependency.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="P:DevExpress.Utils.IoC.TypeRegistration.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> value.</value>
    </member>
    <member name="P:DevExpress.Utils.IoC.TypeRegistration.Transient">
      <summary>
        <para>Gets the flag for a transient registration.</para>
      </summary>
      <value>A Boolean value.</value>
    </member>
    <member name="M:DevExpress.Utils.IoC.TypeRegistration.TryGetParameterValue(System.String,System.Object@)">
      <summary>
        <para>Gets the registered value for a constructor parameter that was registered using the <see cref="M:DevExpress.Utils.IoC.TypeRegistration.WithCtorArgument(System.String,System.Object)"/> methods.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value.</param>
      <param name="value">A <see cref="T:System.Object"/> value.</param>
      <returns>true, if the constructor parameter value has been obtained; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.IoC.TypeRegistration.WithCtorArgument(System.String,System.Object)">
      <summary>
        <para>Registers a constructor parameter value (if it is not registered in the container as a dependency).</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value, specifying the parameter name.</param>
      <param name="value">A <see cref="T:System.Object"/> value, specifying the parameter value.</param>
      <returns>A <see cref="T:DevExpress.Utils.IoC.TypeRegistration"/> object.</returns>
    </member>
    <member name="T:DevExpress.Utils.LayoutAllowEventArgs">
      <summary>
        <para>Provides data for events raised when upgrading a control&#39;s layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.LayoutAllowEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.LayoutAllowEventArgs"/> class with the specified previous version.</para>
      </summary>
      <param name="previousVersion">A <see cref="T:System.String"/> specifying the previous version number. This value is assigned to the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion"/> property.</param>
    </member>
    <member name="P:DevExpress.Utils.LayoutAllowEventArgs.Allow">
      <summary>
        <para>Gets or sets whether to allow upgrading the control layout.</para>
      </summary>
      <value>true to allow the operation; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.LayoutAllowEventHandler">
      <summary>
        <para>A method that will handle events raised when upgrading a control&#39;s layout, allowing you to cancel the upgrade (e.g. <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.BeforeLoadLayout"/>, <see cref="E:DevExpress.XtraBars.BarManager.BeforeLoadLayout"/>, etc.).</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.LayoutAllowEventArgs"/> object that contains event data.</param>
    </member>
    <member name="T:DevExpress.Utils.LayoutUpgradeEventArgs">
      <summary>
        <para>Provides data for the events raised when upgrading a control&#39;s layout (e.g., <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.LayoutUpgradeEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.LayoutUpgradeEventArgs"/> class with the specified previous version.</para>
      </summary>
      <param name="previousVersion">A <see cref="T:System.String"/> specifying the previous version number. This value is assigned to the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion"/> property.</param>
    </member>
    <member name="M:DevExpress.Utils.LayoutUpgradeEventArgs.#ctor(System.String,System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.LayoutUpgradeEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="previousVersion">A value used to initialize the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion"/> property.</param>
      <param name="newHiddenItems">A value used to initialize the <see cref="P:DevExpress.Utils.LayoutUpgradeEventArgs.NewHiddenItems"/> property.</param>
    </member>
    <member name="P:DevExpress.Utils.LayoutUpgradeEventArgs.NewHiddenItems">
      <summary>
        <para>Returns an array of items that exist in the current control but do not exist in the layout being loaded. These items are hidden. This property is in effect for the <see cref="T:DevExpress.XtraLayout.LayoutControl"/>.</para>
      </summary>
      <value>An array of items that exist in the current control but do not exist in the layout being loaded.</value>
    </member>
    <member name="P:DevExpress.Utils.LayoutUpgradeEventArgs.PreviousVersion">
      <summary>
        <para>Returns the textual representation of the previous layout version.</para>
      </summary>
      <value>A <see cref="T:System.String"/> representing the previous version of the layout.</value>
    </member>
    <member name="T:DevExpress.Utils.LayoutUpgradeEventHandler">
      <summary>
        <para>A method that will handle events raised when upgrading a control&#39;s layout (e.g., <see cref="E:DevExpress.XtraGrid.Views.Base.BaseView.LayoutUpgrade"/>, <see cref="E:DevExpress.XtraBars.BarManager.LayoutUpgrade"/>, etc.).</para>
      </summary>
      <param name="sender">The event sender.</param>
      <param name="e">A <see cref="T:DevExpress.Utils.LayoutUpgradeEventArgs"/> object that contains event data.</param>
    </member>
    <member name="N:DevExpress.Utils.Localization">
      <summary>
        <para>Represents classes, that implement basic functionality for localization of Windows Forms and Localization controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Localization.XtraLocalizer`1">
      <summary>
        <para>Represents the base class for all localizer classes.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.Localization.XtraLocalizer`1.Active">
      <summary>
        <para>Gets or sets a localizer object providing localization of the user interface at runtime.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> descendant, which is used to localize the user interface at runtime.</value>
    </member>
    <member name="E:DevExpress.Utils.Localization.XtraLocalizer`1.ActiveChanged">
      <summary>
        <para>Fires immediately after the <see cref="P:DevExpress.Utils.Localization.XtraLocalizer`1.Active"/> property value has been changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.CreateResXLocalizer">
      <summary>
        <para>Returns a localizer object, which provides resources based on the thread&#39;s language and regional settings (culture).</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object representing resources based on the thread&#39;s culture.</returns>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.CreateXmlDocument">
      <summary>
        <para>Creates an XML document, which contains resource strings provided by the current <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object.</para>
      </summary>
      <returns>A <see cref="T:System.Xml.XmlDocument"/> object.</returns>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.GetActiveLocalizerProvider">
      <summary>
        <para>Returns an active localizer provider for this <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object.</para>
      </summary>
      <returns>An ActiveLocalizerProvider&lt;T&gt; object.</returns>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.GetLocalizedString(`0)">
      <summary>
        <para>Gets the string, localized by the current <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/>, for the specified user interface element.</para>
      </summary>
      <param name="id">A T enumeration value specifying the UI element whose caption (text) is to be localized.</param>
      <returns>A <see cref="T:System.String"/> representing the text to be displayed within the specified UI element.</returns>
    </member>
    <member name="P:DevExpress.Utils.Localization.XtraLocalizer`1.Language">
      <summary>
        <para>Returns the name of the language currently used by this localizer object.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the language of the user interface localization.</value>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.RaiseActiveChanged">
      <summary>
        <para>Raises the <see cref="E:DevExpress.Utils.Localization.XtraLocalizer`1.ActiveChanged"/> event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.SetActiveLocalizerProvider(DevExpress.Utils.Localization.Internal.ActiveLocalizerProvider{`0})">
      <summary>
        <para>Sets an active localizer provider for this <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object.</para>
      </summary>
      <param name="value">An ActiveLocalizerProvider&lt;T&gt; object.</param>
    </member>
    <member name="M:DevExpress.Utils.Localization.XtraLocalizer`1.WriteToXml(System.String)">
      <summary>
        <para>Saves the current <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/>&#39;s resources to the specified XML file.</para>
      </summary>
      <param name="fileName">A <see cref="T:System.String"/> specifying the file name (including the file path), to which all localization resources will be saved.</param>
    </member>
    <member name="T:DevExpress.Utils.NotificationCollection`1">
      <summary>
        <para>Represents a base class for collections that are able to send update notifications.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.NotificationCollection`1.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.NotificationCollection`1"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.NotificationCollection`1.AddRange(System.Collections.ICollection)">
      <summary>
        <para>Adds a collection of objects to the end of the current collection.</para>
      </summary>
      <param name="collection">An object exposing the <see cref="T:System.Collections.ICollection"/> interface, which represents the collection of objects to append.</param>
    </member>
    <member name="M:DevExpress.Utils.NotificationCollection`1.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.Utils.NotificationCollection`1"></see>, preventing change notifications (and visual updates) from being raised by the object until the EndUpdate or CancelUpdate method is called.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.NotificationCollection`1.CancelUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.NotificationCollection`1"></see> object after it has been locked by the BeginUpdate method, without causing an immediate visual update.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.NotificationCollection`1.CollectionChanged">
      <summary>
        <para>Occurs when the collection is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.Utils.NotificationCollection`1.CollectionChanging">
      <summary>
        <para>This event occurs when the collection is about to change.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.NotificationCollection`1.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.Utils.NotificationCollection`1"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.NotificationCollection`1.IsUpdateLocked">
      <summary>
        <para>Gets whether the collection has been locked for updating.</para>
      </summary>
      <value>true if the collection is locked; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.OptionsColumnLayout">
      <summary>
        <para>Contains options that specify how column specific settings are stored to and restored from storage (a stream, xml file or the system registry).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.OptionsColumnLayout.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.OptionsColumnLayout"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.OptionsColumnLayout.AddNewColumns">
      <summary>
        <para>Gets or sets whether the columns that exist in the current control but do not exist in a layout when it&#39;s restored should be retained.</para>
      </summary>
      <value>true to retain the columns that exist in the current control&#39;s layout but don&#39;t exist in the layout being restored; false to destroy such columns.</value>
    </member>
    <member name="M:DevExpress.Utils.OptionsColumnLayout.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all the settings from the options object passed as the parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.Utils.OptionsColumnLayout.RemoveOldColumns">
      <summary>
        <para>Gets or sets whether the columns that exist in a layout when it&#39;s restored but that don&#39;t exist in the current control should be discarded or added to the control.</para>
      </summary>
      <value>true to discard the columns that exist in the layout being restored but don&#39;t exist in the current control; false to add these columns to the control.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAllOptions">
      <summary>
        <para>Gets or sets whether all the settings of a control&#39;s columns/bands (except for the appearance settings) are stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if all the settings of a control&#39;s columns/bands are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAppearance">
      <summary>
        <para>Gets or sets whether the appearance settings of the columns and bands are also stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if the appearance settings of the columns and bands are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreLayout">
      <summary>
        <para>Gets or sets whether the position, width and visibility of the columns and bands are stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if the position, width and visibility of columns and bands are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.OptionsLayoutBase">
      <summary>
        <para>Represents the base class for classes which contain the options that are responsible for how the control&#39;s layout is stored to and restored from storage (a stream, xml file or system registry).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.OptionsLayoutBase.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.OptionsLayoutBase"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.OptionsLayoutBase.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies settings from the specified object to the current object.</para>
      </summary>
      <param name="source">An object whose settings are copied to the current object.</param>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutBase.CurrentLayoutScaleFactor">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutBase.FullLayout">
      <summary>
        <para>Returns an <see cref="T:DevExpress.Utils.OptionsLayoutBase"/> object whose settings indicate that the full layout of the control should be stored to and restored from storage (a stream, xml file or system registry).</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.OptionsLayoutBase"/> object whose settings indicate that the full layout of the control should be stored to/restored from storage.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutBase.LayoutScaleFactor">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutBase.LayoutVersion">
      <summary>
        <para>Gets or sets the version of the layout.</para>
      </summary>
      <value>A string representing the version of the layout.</value>
    </member>
    <member name="M:DevExpress.Utils.OptionsLayoutBase.ShouldSerializeCore(System.ComponentModel.IComponent)">
      <summary>
        <para>Gets whether the settings should be persisted.</para>
      </summary>
      <param name="owner">The component that owns the current settings.</param>
      <returns>true, if the settings should be persisted; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutBase.StoredLayoutScaleFactor">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Utils.OptionsLayoutGrid">
      <summary>
        <para>Contains options that specify how a control&#39;s layout is stored to and restored from storage (a stream, xml file or system registry).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.OptionsLayoutGrid.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.OptionsLayoutGrid"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.OptionsLayoutGrid.Assign(DevExpress.Utils.Controls.BaseOptions)">
      <summary>
        <para>Copies all the settings from the options object passed as the parameter.</para>
      </summary>
      <param name="options">A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.</param>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutGrid.Columns">
      <summary>
        <para>Contains options that specify how the columns&#39; and bands&#39; settings are stored to and restored from storage (a stream, xml file or sysytem registry).</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.OptionsColumnLayout"/> object that specifies how the columns&#39; and bands&#39; settings are stored to and restored from storage.</value>
    </member>
    <member name="M:DevExpress.Utils.OptionsLayoutGrid.Reset">
      <summary>
        <para>Resets all options to their default values.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAllOptions">
      <summary>
        <para>Gets or sets whether all the control&#39;s settings (except for the appearance settings and format rules) are stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if all the control&#39;s settings are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from the storage; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAppearance">
      <summary>
        <para>Gets or sets whether the control&#39;s appearance settings are also stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if the control&#39;s appearance settings are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreDataSettings">
      <summary>
        <para>Gets or sets whether the control&#39;s grouping, sorting, filtering settings and summaries are stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if the control&#39;s grouping, sorting, filtering settings and summaries are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreFormatRules">
      <summary>
        <para>Gets or sets whether MS Excel-style conditional formatting rules are stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if MS Excel-style conditional formatting rules are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreVisualOptions">
      <summary>
        <para>Gets or sets whether the control&#39;s visual options are stored when the layout is saved to storage and restored when the layout is restored from storage.</para>
      </summary>
      <value>true if the control&#39;s visual options are included in the layout when it&#39;s saved to storage and these settings are restored when the layout is restored from storage; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Utils.PointFloat">
      <summary>
        <para>Represents a point with floating X and Y values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.PointFloat.#ctor(System.Drawing.PointF)">
      <summary>
        <para>For internal use only. Initializes a new instance of the <see cref="T:DevExpress.Utils.PointFloat"/> class.</para>
      </summary>
      <param name="pt"></param>
    </member>
    <member name="M:DevExpress.Utils.PointFloat.#ctor(System.Single,System.Single)">
      <summary>
        <para>For internal use only. Initializes a new instance of the <see cref="T:DevExpress.Utils.PointFloat"/> class.</para>
      </summary>
      <param name="x">A <see cref="T:System.Single"/> value.</param>
      <param name="y">A <see cref="T:System.Single"/> value.</param>
    </member>
    <member name="F:DevExpress.Utils.PointFloat.Empty">
      <summary>
        <para>For internal use only. Represents an empty point.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Utils.PointFloat.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.Utils.PointFloat"/> instance.</para>
      </summary>
      <param name="obj">The object specifying a <see cref="T:DevExpress.Utils.PointFloat"/> instance to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.Utils.PointFloat"/> instance.</returns>
    </member>
    <member name="M:DevExpress.Utils.PointFloat.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Utils.PointFloat.IsEmpty">
      <summary>
        <para>For internal use only. Checks whether the current point object is empty.</para>
      </summary>
      <value>true if the point is empty; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.Utils.PointFloat.Offset(System.Single,System.Single)">
      <summary>
        <para>Adds the specified values to <see cref="P:DevExpress.Utils.PointFloat.X"/> and <see cref="P:DevExpress.Utils.PointFloat.Y"/>.</para>
      </summary>
      <param name="dx">A value to be added to <see cref="P:DevExpress.Utils.PointFloat.X"/>.</param>
      <param name="dy">A value to be added to <see cref="P:DevExpress.Utils.PointFloat.Y"/>.</param>
    </member>
    <member name="M:DevExpress.Utils.PointFloat.ToString">
      <summary>
        <para>For internal use. Returns the textual representation of <see cref="T:DevExpress.Utils.PointFloat"/>.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value.</returns>
    </member>
    <member name="P:DevExpress.Utils.PointFloat.X">
      <summary>
        <para>For internal use. Specifies the X-coordinate of the <see cref="T:DevExpress.Utils.PointFloat"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.Utils.PointFloat.Y">
      <summary>
        <para>For internal use. Specifies the Y-coordinate of the <see cref="T:DevExpress.Utils.PointFloat"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="N:DevExpress.Utils.Serializing.Helpers">
      <summary>
        <para>Contains helper classes that extend serialization capabilities of DevExpress controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter">
      <summary>
        <para>When implemented, specifies a converter used to serialize/deserialize arbitrary objects in a custom manner.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.CanConvert(System.Type)">
      <summary>
        <para>When implemented, returns whether the converter can serialize/deserialize objects of the specified type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> that specifies the type to check.</param>
      <returns>true if the converter can serialize/deserialize objects of the specified type; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.FromString(System.Type,System.String)">
      <summary>
        <para>When implemented, deserializes an object of the specified type from the specified string.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> that specifies the type of object to deserialize.</param>
      <param name="str">A <see cref="T:System.String"/> that represents the serialized object.</param>
      <returns>A deserialized object.</returns>
    </member>
    <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.GetType(System.String)">
      <summary>
        <para>When implemented, returns the type by its full name.</para>
      </summary>
      <param name="typeName">A <see cref="T:System.String"/> that specifies the full name of the type to return.</param>
      <returns>A <see cref="T:System.Type"/> that identifies the type whose full name is specified by the typeName parameter.</returns>
    </member>
    <member name="M:DevExpress.Utils.Serializing.Helpers.ICustomObjectConverter.ToString(System.Type,System.Object)">
      <summary>
        <para>When implemented, serializes the specified object of the specified type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> that specifies the type of the object to serialize.</param>
      <param name="obj">The object to serialize.</param>
      <returns>A <see cref="T:System.String"/> that represents the serialized object.</returns>
    </member>
    <member name="N:DevExpress.Utils.Svg">
      <summary>
        <para>Provides an API that supports vector images.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.Svg.SvgImage">
      <summary>
        <para>A vector image.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.#ctor">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.#ctor(System.IO.Stream)">
      <summary>
        <para>Creates a vector image from the given stream.</para>
      </summary>
      <param name="stream">A stream from which the vector icon should be created.</param>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.#ctor(System.Type,System.String)">
      <summary>
        <para>Creates a vector icon from a resource.</para>
      </summary>
      <param name="type">A Type of resource assembly.</param>
      <param name="resource">Image name.</param>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.Clone">
      <summary>
        <para>Copies this vector icon.</para>
      </summary>
      <returns>The vector image copy.</returns>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.Clone(System.Action{DevExpress.Utils.Svg.SvgElement,System.Collections.Hashtable})">
      <summary>
        <para>You cannot modify SvgImage objects directly. Instead, you need to create their copies and modify them in process.</para>
      </summary>
      <param name="updateStyle">A Delegate that modifies the icon.</param>
      <returns>New vector image copy.</returns>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.Create(DevExpress.Utils.Svg.SvgRoot)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="root"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.DefaultStyle">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.Elements">
      <summary>
        <para>Provides access to elements (primitives) from which this vector image consists.</para>
      </summary>
      <value>A List of vector image elements.</value>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.FromFile(System.String)">
      <summary>
        <para>Creates a new SvgImage object from a vector image on local storage.</para>
      </summary>
      <param name="path">A path to the image file.</param>
      <returns>The SvgImage object created from the given file.</returns>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.FromResources(System.String,System.Reflection.Assembly)">
      <summary>
        <para>Creates a new SvgImage object from a vector image stored in project resources.</para>
      </summary>
      <param name="name">The name an icon has in resources.</param>
      <param name="asm">The assembly name.</param>
      <returns>A newly created SvgImage.</returns>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.FromStream(System.IO.Stream)">
      <summary>
        <para>Creates a new SvgImage object from a vector image stored in a stream.</para>
      </summary>
      <param name="stream">The stream that stores the image.</param>
      <returns>A newly created SvgImage object.</returns>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.GetTransform">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.GetViewBoxTransform">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.Height">
      <summary>
        <para>Returns the image height.</para>
      </summary>
      <value>The image height.</value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.OffsetX">
      <summary>
        <para>Returns the horizontal image offset.</para>
      </summary>
      <value>The horizontal image offset.</value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.OffsetY">
      <summary>
        <para>Returns the vertical image offset.</para>
      </summary>
      <value>The vertical image offset.</value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.Root">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.Save(System.String)">
      <summary>
        <para>Saves this vector image to the specific file.</para>
      </summary>
      <param name="filePath">A path to the file where this vector icon should be stored.</param>
    </member>
    <member name="M:DevExpress.Utils.Svg.SvgImage.SetTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <param name="transform"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.Styles">
      <summary>
        <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.Tag">
      <summary>
        <para>Gets or sets a unique image identifier.</para>
      </summary>
      <value>An Object that identifies this image.</value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.UnknownTags">
      <summary>
        <para>Returns the collection of image tags that are not supported by DevExpress controls.</para>
      </summary>
      <value>Stores unsupported image tags.</value>
    </member>
    <member name="P:DevExpress.Utils.Svg.SvgImage.Width">
      <summary>
        <para>Returns the image width.</para>
      </summary>
      <value>The image width.</value>
    </member>
    <member name="T:DevExpress.Utils.UrlAccessSecurityLevel">
      <summary>
        <para>Lists the values specifying whether a report control allows loading images using the &quot;file://&quot; protocol.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.Custom">
      <summary>
        <para>Enables loading of images from custom directories (defined using the <see cref="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomBaseDirectories(System.String[])"/> or <see cref="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomCallback(System.Func{System.String,System.Uri})"/> method).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.FilesFromBaseDirectory">
      <summary>
        <para>Enables loading of images from an application&#39;s working directory (defined by the AppDomain.CurrentDomain.BaseDirectory property).</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.FilesFromDirectories">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.Restricted">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.Unrestricted">
      <summary>
        <para>Enables loading of any image from any directory.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.UrlAccessSecurityLevel.WebUrlsOnly">
      <summary>
        <para>Forbids loading images using the &quot;file://&quot; protocol (only the &quot;http://&quot;, &quot;https://&quot; and &quot;ftp://&quot; protocols are supported).</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.UrlAccessSecurityLevelSetting">
      <summary>
        <para>Specifies the security settings for resolving URL&#39;s in a web application.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.#ctor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.CreateUriFromCustomRegistration(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="path"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomBaseDirectories(System.String[])">
      <summary>
        <para>Enables using the &quot;file://&quot; protocol for loading images to the specified directories.</para>
      </summary>
      <param name="baseDirectories">An array of <see cref="T:System.String"/> values, specifying the custom directories.</param>
      <returns>true, if loading images to custom directories is enabled; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.RegisterCustomCallback(System.Func{System.String,System.Uri})">
      <summary>
        <para>Enables loading images to the protocols defined in the specified callback.</para>
      </summary>
      <param name="customCallback">A function, specifying a custom callback.</param>
      <returns>true, if loading images to custom directories is enabled; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Utils.UrlAccessSecurityLevelSetting.SafeSetSecurityLevel(DevExpress.Utils.UrlAccessSecurityLevel)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Utils.UrlAccessSecurityLevelSetting.SecurityLevel">
      <summary>
        <para>Specifies whether a report control allows loading images using the &quot;file://&quot; protocol.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.UrlAccessSecurityLevel"/> enumeration value.</value>
    </member>
    <member name="T:DevExpress.Utils.VertAlignment">
      <summary>
        <para>Specifies the vertical alignment of an object or text in a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VertAlignment.Bottom">
      <summary>
        <para>Places the text to the bottom of an object.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VertAlignment.Center">
      <summary>
        <para>Centers the text within an object.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VertAlignment.Default">
      <summary>
        <para>Places the text to its default position. The default position is in the center of an object.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.VertAlignment.Top">
      <summary>
        <para>Places the text to the top of an object.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Utils.WordWrap">
      <summary>
        <para>Enumerates wrapping modes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.WordWrap.Default">
      <summary>
        <para>Default wrapping mode. The actual wrapping mode is determined by a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.WordWrap.NoWrap">
      <summary>
        <para>The word wrapping feature is disabled.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Utils.WordWrap.Wrap">
      <summary>
        <para>The word wrapping feature is enabled.</para>
      </summary>
    </member>
    <member name="N:DevExpress.WebUtils">
      <summary>
        <para>Contains classes implementing the common ViewState management functionality for DevExpress Web controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.WebUtils.ViewStatePersisterCore">
      <summary>
        <para>Represents a base for classes providing different options.</para>
      </summary>
    </member>
    <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.WebUtils.ViewStatePersisterCore"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor(DevExpress.WebUtils.IViewBagOwner)">
      <summary>
        <para></para>
      </summary>
      <param name="viewBagOwner"></param>
    </member>
    <member name="M:DevExpress.WebUtils.ViewStatePersisterCore.#ctor(DevExpress.WebUtils.IViewBagOwner,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="viewBagOwner"></param>
      <param name="objectPath"></param>
    </member>
    <member name="N:DevExpress.Xpf.Core">
      <summary>
        <para>Contains common utility classes used by WPF controls and components from DevExpress.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Core.ApplicationThemeHelper">
      <summary>
        <para>An abstract class that provides access to an application&#39;s theme settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Core.ApplicationThemeHelper.ApplicationThemeName">
      <summary>
        <para>Gets or sets the name of the theme applied to the entire application.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value that specifies the theme name.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.ApplicationThemeHelper.ConfigurationUserLevel">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpf.Core.ApplicationThemeHelper.SaveApplicationThemeName">
      <summary>
        <para>Saves the current theme name to the application configuration file.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Core.ApplicationThemeHelper.UpdateApplicationThemeName">
      <summary>
        <para>Loads the theme name from the application configuration file.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Core.ApplicationThemeHelper.UseDefaultSvgImages">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpf.Core.ApplicationThemeHelper.UseLegacyDefaultTheme">
      <summary>
        <para>Specifies whether the application should use the legacy default theme (&quot;DeepBlue&quot;).</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpf.Core.CompatibilityMode">
      <summary>
        <para>Lists the values that specify the compatibility settings version.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.CompatibilityMode.Latest">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.CompatibilityMode.v17_2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.CompatibilityMode.v18_1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.CompatibilityMode.v18_2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.CompatibilityMode.v19_1">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.CompatibilityMode.v19_2">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Core.CompatibilitySettings">
      <summary>
        <para>Provides access to compatibility settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.AllowEditValueBindingInInplaceEditors">
      <summary>
        <para>Gets or sets whether the GridControl&#39;s logic of getting/setting the editor&#39;s value is enabled.</para>
      </summary>
      <value>true, if the GridControl&#39;s logic of getting/setting the editor&#39;s value is enabled; otherwise, false.The default value is true.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.AllowGlyphRunRenderingInInplaceEditors">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.AllowRecyclingRibbonItems">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.CompatibilityMode">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.ConvertOccurrenceToNormalWhenDragBetweenResources">
      <summary>
        <para>Specifies whether a recurring appointment is converted to a normal appointment when an end-user drags and drops it to another resource.</para>
      </summary>
      <value>True, if a recurring appointment is converted to normal after a drag-and-drop operation to another resource; otherwise, false. Default is false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.DXBindingResolvingMode">
      <summary>
        <para>Gets or sets a value that specifies how the DXBinding (DXEvent, DXCommand) markup extensions resolve input expressions.</para>
      </summary>
      <value>Any of the <see cref="T:DevExpress.Xpf.Core.DXBindingResolvingMode"/> enumeration values.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.EnableDPICorrection">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.MakeGetWindowReturnActualFloatPanelWindow">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.RenderPDFPageContentWithDirectX">
      <summary>
        <para>Gets or sets whether to render page content with DirectX.</para>
      </summary>
      <value>true, to enable DirectX page content rendering; false, to render page content with GDI/GDI+. The default is true.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.SchedulerAppearanceStyle">
      <summary>
        <para>Gets or sets the SchedulerControl UI style.</para>
      </summary>
      <value>By default, Outlook2019.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseDateNavigatorInDateEdit">
      <summary>
        <para>Specifies whether to use the <see cref="T:DevExpress.Xpf.Editors.DateNavigator.DateNavigator"/> control to render the <see cref="T:DevExpress.Xpf.Editors.DateEdit"/>&#39;s dropdown window.</para>
      </summary>
      <value>true to use the DateNavigator in the DateEdit&#39;s dropdown; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseFriendlyDateRangePresentation">
      <summary>
        <para>Gets or sets whether the Between Dates and On Dates date operators are used.</para>
      </summary>
      <value>true, to use the Between Dates and On Dates date operators; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseLegacyColumnFilterPopup">
      <summary>
        <para>Gets or sets whether the legacy drop-down filter is used.</para>
      </summary>
      <value>true, to use the legacy drop-down filter; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseLegacyDeleteButtonInButtonEdit">
      <summary>
        <para>Gets or sets whether to use the legacy Null Value button in the ButtonEdit editor and its descendants.</para>
      </summary>
      <value>true, to use the legacy Null Value button; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseLegacyFilterEditor">
      <summary>
        <para>Gets or sets whether the legacy filter editor is used.</para>
      </summary>
      <value>true, to use the legacy filter editor; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseLegacySchedulerCellDecoration">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseLightweightBarItems">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseLightweightTemplatesInStandardButtons">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseThemedMessageBoxInServices">
      <summary>
        <para>Gets or sets whether to use the ThemedMessageBox instead of  DXMessageBox in WindowService, DialogService, and WindowedDocumentUIService.</para>
      </summary>
      <value>true, to use the ThemedMessageBox; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.Xpf.Core.CompatibilitySettings.UseThemedWindowInServices">
      <summary>
        <para>Gets or sets whether to use the <see cref="T:DevExpress.Xpf.Core.ThemedWindow"/> instead of <see cref="T:DevExpress.Xpf.Core.DXWindow"/> in WindowService, DialogService, and WindowedDocumentUIService.</para>
      </summary>
      <value>true, to use the <see cref="T:DevExpress.Xpf.Core.ThemedWindow"/>; otherwise, false.</value>
    </member>
    <member name="T:DevExpress.Xpf.Core.DXBindingResolvingMode">
      <summary>
        <para>Lists values that specify how the DXBinding (DXEvent, DXCommand) markup extensions resolve input expressions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.DXBindingResolvingMode.DynamicTyping">
      <summary>
        <para>The DXBinding, DXCommand and DXEvent markup extensions interpret their expressions that allows them using dynamic typization, so you do no need to cast values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpf.Core.DXBindingResolvingMode.LegacyStaticTyping">
      <summary>
        <para>The DXBinding, DXCommand and DXEvent markup extensions compile their expressions thus using static typization, so you do need to cast values.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Xpf.Printing">
      <summary>
        <para>Contains classes that provide the basic functionality for the DXPrinting for WPF library. To use these classes in XAML code, add the xmlns:dxp=&quot;&quot; namespace reference.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpf.Printing.ServiceKnownTypeProvider">
      <summary>
        <para>Registers known types on a WCF-service.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.GetKnownTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="provider"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.GetKnownTypesMethodName">
      <summary>
        <para>&quot;GetKnownTypes&quot;</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.IsRegistered(System.Type)">
      <summary>
        <para>Specifies whether or not a custom parameter type is registered.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> enumeration value.</param>
      <returns>true if the parameter type is registered; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <para>Registers a collection of custom parameter types.</para>
      </summary>
      <param name="types">A collection of <see cref="T:System.Type"/> objects.</param>
    </member>
    <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register(System.Type)">
      <summary>
        <para>Registers a custom parameter type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> enumeration value.</param>
    </member>
    <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register(System.Type[])">
      <summary>
        <para>Registers an array of custom parameter types.</para>
      </summary>
      <param name="types">An array of <see cref="T:System.Type"/> enumeration values.</param>
    </member>
    <member name="M:DevExpress.Xpf.Printing.ServiceKnownTypeProvider.Register``1">
      <summary>
        <para>Registers a custom parameter type.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Xpo">
      <summary>
        <para>Contains classes that support the infrastructure of the eXpress Persistent Objects.</para>
      </summary>
    </member>
    <member name="N:DevExpress.Xpo.DB">
      <summary>
        <para>Contains classes that handle operations on a data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.AutoCreateOption">
      <summary>
        <para>Lists the values that specify the action which is performed when a session is connected to a data store.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.AutoCreateOption.DatabaseAndSchema">
      <summary>
        <para>A session will try to automatically create the database if it doesn&#39;t exist. It will also create or update the database schema for any persistent classes currently being used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.AutoCreateOption.None">
      <summary>
        <para>A session will not automatically create the database or update the database schema. The database schema is still queried and checked to match the currently used persistent class metadata.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaAlreadyExists">
      <summary>
        <para>A session will never query the database for schema to validate against persistent class metadata. This will suppress the SchemaCorrectionNeededException, but a database error may occur during data operations if the schema is not compatible with run-time persistent classes metadata.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.AutoCreateOption.SchemaOnly">
      <summary>
        <para>A session will automatically create or update the database schema for the persistent classes currently being used. If the database doesn&#39;t exist, it won&#39;t be created by a session.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.BaseStatement">
      <summary>
        <para>Serves as the base class for the classes that represent statements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.BaseStatement.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.BaseStatement.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesColumns(DevExpress.Xpo.DB.BaseStatement[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="statements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesNames">
      <summary>
        <para>Returns the names of the tables that are referenced in the statement.</para>
      </summary>
      <returns>An array of strings that specify the names of the tables that are referenced in the statement.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.BaseStatement.GetTablesNames(DevExpress.Xpo.DB.BaseStatement[])">
      <summary>
        <para>Returns the names of the tables that are referenced in the specified statements.</para>
      </summary>
      <param name="statements">An array of <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> descendants that represents statements.</param>
      <returns>An array of strings that specify the names of the tables that are referenced in the specified statements.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.BaseStatement.Operands">
      <summary>
        <para>The collection of operands.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.CommandPoolBehavior">
      <summary>
        <para>Contains values that specify the command pool behavior.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.CommandPoolBehavior.ConnectionSession">
      <summary>
        <para>Pooling of prepared (or compiled) commands in the scope of the database transaction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.CommandPoolBehavior.None">
      <summary>
        <para>No command pooling.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.CommandPoolBehavior.Transaction">
      <summary>
        <para>Pooling of prepared (or compiled) commands in the scope of the database transaction.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.CommandPoolBehavior.TransactionNoPrepare">
      <summary>
        <para>Pooling of commands in the scope of the database transaction. The <see cref="M:System.Data.IDbCommand.Prepare"/> method is not called for commands.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.ConnectionProviderSql">
      <summary>
        <para>Implements the base functionality for  SQL-based data store adapters, including the <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> and other adapters listed in the Database Systems Supported by XPO topic.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.BraceJoin">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CanCreateDatabase">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CanCreateSchema">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CollectTablesToCreate(System.Collections.ICollection)">
      <summary>
        <para></para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeColumnName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeConstraintName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeSchemaName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ComposeSafeTableName(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.Connection">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.ConnectionString">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateColumn(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateCommand">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateForeignKey(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBForeignKey)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="foreignKey"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateIndex(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBIndex)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="index"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreatePrimaryKey(DevExpress.Xpo.DB.DBTable)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.CreateTable(DevExpress.Xpo.DB.DBTable)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CustomAggregates">
      <summary>
        <para>Gets a collection of custom aggregate functions supplied by the current metadata provider.</para>
      </summary>
      <value>A collection of custom aggregate functions.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.CustomFunctionOperators">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.DefaultCommandTimeout">
      <summary>
        <para>Specifies the timeout value passed to the IDbCommand.CommandTimeout property of each created command, in seconds.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.EnableConnectionStringArgumentEscaping">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.EscapeConnectionStringArgument(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="argument"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExecSql(DevExpress.Xpo.DB.Helpers.Query)">
      <summary>
        <para></para>
      </summary>
      <param name="query"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExecSqlAsync(DevExpress.Xpo.DB.Helpers.Query,DevExpress.Data.Helpers.AsyncOperationIdentifier,System.Threading.CancellationToken)">
      <summary>
        <para></para>
      </summary>
      <param name="query"></param>
      <param name="asyncOperationId"></param>
      <param name="cancellationToken"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitBeginTransaction">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitBeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para></para>
      </summary>
      <param name="isolationLevel"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitCommitTransaction">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ExplicitRollbackTransaction">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatBinary(DevExpress.Data.Filtering.BinaryOperatorType,System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="operatorType"></param>
      <param name="leftOperand"></param>
      <param name="rightOperand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatColumn(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatColumn(System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatColumnSafe(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="columnName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatConstraint(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatConstraintSafe(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="constraintName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatDelete(System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tableName"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatFunction(DevExpress.Data.Filtering.FunctionOperatorType,System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatFunction(DevExpress.Xpo.DB.Helpers.ProcessParameter,DevExpress.Data.Filtering.FunctionOperatorType,System.Object[])">
      <summary>
        <para></para>
      </summary>
      <param name="processParameter"></param>
      <param name="operatorType"></param>
      <param name="operands"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatInsert(System.String,System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tableName"></param>
      <param name="fields"></param>
      <param name="values"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatInsertDefaultValues(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatOrder(System.String,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para></para>
      </summary>
      <param name="sortProperty"></param>
      <param name="direction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatOuterApply(System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="sql"></param>
      <param name="alias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="selectedPropertiesSql"></param>
      <param name="fromSql"></param>
      <param name="whereSql"></param>
      <param name="orderBySql"></param>
      <param name="groupBySql"></param>
      <param name="havingSql"></param>
      <param name="topSelectedRecords"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatSelect(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="selectedPropertiesSql"></param>
      <param name="fromSql"></param>
      <param name="whereSql"></param>
      <param name="orderBySql"></param>
      <param name="groupBySql"></param>
      <param name="havingSql"></param>
      <param name="skipSelectedRecords"></param>
      <param name="topSelectedRecords"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatTable(System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatTable(System.String,System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="schema"></param>
      <param name="tableName"></param>
      <param name="tableAlias"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatTableSafe(DevExpress.Xpo.DB.DBTable)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatUnary(DevExpress.Data.Filtering.UnaryOperatorType,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="operatorType"></param>
      <param name="operand"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.FormatUpdate(System.String,System.String,System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="tableName"></param>
      <param name="sets"></param>
      <param name="whereClause"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GenerateStoredProcedures(DevExpress.Xpo.DB.DBTable,System.String@)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="dropLines"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GenerateStoredProceduresInfoOnce">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetColumnType(System.Data.DbType,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <param name="suppressExceptionOnUnknown"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetCustomAggregate(System.String)">
      <summary>
        <para>Searches custom aggregate functions registered in an application via the <see cref="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregateFormattable)"/> and <see cref="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomAggregates(System.Collections.Generic.ICollection{DevExpress.Data.Filtering.ICustomAggregateFormattable})"/> method calls for a function with the specified name.</para>
      </summary>
      <param name="aggregateName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <returns>An <see cref="T:DevExpress.Data.Filtering.ICustomAggregateFormattable"/> object that corresponds to the aggregateName, if found; otherwise, null (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetCustomFunctionOperator(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="functionName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetDbType(DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para></para>
      </summary>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetParameterName(DevExpress.Data.Filtering.OperandValue,System.Int32,System.Boolean@)">
      <summary>
        <para></para>
      </summary>
      <param name="parameter"></param>
      <param name="index"></param>
      <param name="createParameter"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetSqlCreateColumnFullAttributes(DevExpress.Xpo.DB.DBTable,DevExpress.Xpo.DB.DBColumn,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="column"></param>
      <param name="forTableCreate"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetStorageTables(System.String[])">
      <summary>
        <para></para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetStorageTablesList(System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="includeViews"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetStoredProcedures">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.GetTableSchema(DevExpress.Xpo.DB.DBTable,System.Boolean,System.Boolean)">
      <summary>
        <para></para>
      </summary>
      <param name="table"></param>
      <param name="checkIndexes"></param>
      <param name="checkForeignKeys"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.GlobalDefaultCommandTimeout">
      <summary>
        <para>Specifies the timeout value passed to the IDbCommand.CommandTimeout property, in seconds. Can be overridden by the <see cref="F:DevExpress.Xpo.DB.ConnectionProviderSql.DefaultCommandTimeout"/> field. The default is 300.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.IdentityColumnMagicName">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.MaxDeadLockRetryDelayMilliseconds">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.MaxDeadLockTryCount">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.ModifyDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.NativeOuterApplySupported">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.NativeSkipTakeSupported">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="E:DevExpress.Xpo.DB.ConnectionProviderSql.Reconnected">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregateFormattable)">
      <summary>
        <para>Registers a custom aggregate function to use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customAggregate">A custom aggregate function to register.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomAggregates(System.Collections.Generic.ICollection{DevExpress.Data.Filtering.ICustomAggregateFormattable})">
      <summary>
        <para>Registers custom aggregate functions to use in any <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/>-based criteria in your application.</para>
      </summary>
      <param name="customAggregates">A collection of custom aggregate functions to register.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomFunctionOperator(DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable)">
      <summary>
        <para></para>
      </summary>
      <param name="customFunction"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.RegisterCustomFunctionOperators(System.Collections.Generic.ICollection{DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable})">
      <summary>
        <para></para>
      </summary>
      <param name="customFunctions"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.SelectDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para></para>
      </summary>
      <param name="cancellationToken"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.SupportNamedParameters">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.SyncRoot">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.ConnectionProviderSql.Transaction">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UnregisterCustomAggregate(DevExpress.Data.Filtering.ICustomAggregateFormattable)">
      <summary>
        <para>Unregisters a specified custom aggregate function from use in any <see cref="T:DevExpress.Xpo.DB.ConnectionProviderSql"/>-based connection provider in your application.</para>
      </summary>
      <param name="customAggregate">A custom aggregate function to unregister.</param>
      <returns>true, if the customAggregate was unregistered successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UnregisterCustomAggregate(System.String)">
      <summary>
        <para>Unregisters a custom aggregate function with the specified name from use in any <see cref="T:DevExpress.Xpo.DB.ConnectionProviderSql"/>-based connection provider in your application.</para>
      </summary>
      <param name="functionName">A custom aggregate function&#39;s name. This value cannot be null (Nothing in Visual Basic) or match a standard aggregate name: Sum, Min, Max, Avg, Count, Exists, or Single.</param>
      <returns>true, if a custom aggregate function whose name matches the functionName was unregistered successfully; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UnregisterCustomFunctionOperator(DevExpress.Data.Filtering.ICustomFunctionOperatorFormattable)">
      <summary>
        <para></para>
      </summary>
      <param name="customFunction"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UnregisterCustomFunctionOperator(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="functionName"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ConnectionProviderSql.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para></para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist"></param>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.ConnectionProviderSql.UseLegacyTimeSpanSupport">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataCacheNode">
      <summary>
        <para>The Node element that is used to connect to a cached data store&#39;s Root or Node element.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNode.#ctor(DevExpress.Xpo.DB.ICacheToCacheCommunicationCore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataCacheNode"/> class with default settings and a specified parent cache element.</para>
      </summary>
      <param name="parentCache">A parent Root or Node element specifying the element to which the current Node is connected.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataCacheNode.AutoCreateOption">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNode.CatchUp">
      <summary>
        <para>Synchronizes the Node&#39;s table update information with the Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNode.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
      <summary>
        <para>Applies specified configuration settings to a cached data store.</para>
      </summary>
      <param name="configuration">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNode.GetStorageTables(System.String[])">
      <summary>
        <para>Returns information that describes the structure of specified tables in a cached data store.</para>
      </summary>
      <param name="tables">An array of table names whose information should be retrieved.</param>
      <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structure of the requested tables.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNode.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of all the tables available in a cached data store.</para>
      </summary>
      <param name="includeViews">true, to include views; otherwise, false.</param>
      <returns>An array of the table names in the cached data store.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.DataCacheNode.GlobalTotalMemoryPurgeThreshold">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataCacheNode.GlobalTotalMemoryPurgeTreshhold">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DataCacheNode.MaxCacheLatency">
      <summary>
        <para>Specifies the time period (also known as latency) between regular contacts that the current Node makes to its parent element for up-to-date table update information. The default value is 30 seconds.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DataCacheNode.MinCachedRequestsAfterPurge">
      <summary>
        <para>Specifies the minimum number of query results to retain within the current Node&#39;s cache during its automatic purge. The default value is 16.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeThreshold">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryNotPurgeTreshhold">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeThreshold">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataCacheNode.TotalMemoryPurgeTreshhold">
      <summary>
        <para>For internal use.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataCacheNodeLocal">
      <summary>
        <para>The Node element that is used to connect to a cached data store&#39;s Root or Node element located on the local host.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNodeLocal.#ctor(DevExpress.Xpo.DB.ICacheToCacheCommunicationCore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataCacheNodeLocal"/> class with default settings and a specified parent cache element.</para>
      </summary>
      <param name="parentCache">A parent Root or Node element specifying the element (located on the same computer) to which the current Node is connected.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheNodeLocal.IsProbablyGroupByStatement(DevExpress.Xpo.DB.SelectStatement)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="statement"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataCacheRoot">
      <summary>
        <para>The Root element that is used to connect Node elements to a cached data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheRoot.#ctor(DevExpress.Xpo.DB.IDataStore)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> class with a specified data store provider connected to a data store to be cached.</para>
      </summary>
      <param name="subjectForCache">A  object which provides connection to a data store to be cached.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataCacheRoot.AutoCreateOption">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheRoot.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
      <summary>
        <para>Applies specified configuration settings to a cached data store.</para>
      </summary>
      <param name="configuration">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheRoot.GetStorageTables(System.String[])">
      <summary>
        <para>Returns information that describes the structure of specified tables in a cached data store.</para>
      </summary>
      <param name="tables">An array of table names whose information should be retrieved.</param>
      <returns>An array of <see cref="T:DevExpress.Xpo.DB.DBTable"/> objects that describe the structure of the requested tables.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataCacheRoot.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>Returns a list of all the tables available in a cached data store.</para>
      </summary>
      <param name="includeViews">true, to include views; otherwise, false</param>
      <returns>An array of the table names in the cached data store.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataStoreBase">
      <summary>
        <para>The base class for data store providers (the objects providing access to specific data stores).</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataStoreBase.AutoCreateOption">
      <summary>
        <para>Returns which operations are performed when a data store is accessed for the first time.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value that specifies the action which is performed when a data store is accessed for the first time.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataStoreBase.Factories">
      <summary>
        <para>Returns registered provider factories.</para>
      </summary>
      <value>An array of provider factories that are registered for the current data store.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreBase.QueryDataStore(System.Data.IDbConnection,DevExpress.Xpo.DB.AutoCreateOption)">
      <summary>
        <para>Creates a data store based on specified settings.</para>
      </summary>
      <param name="connection">An object which implements the <see cref="T:System.Data.IDbConnection"/> interface.</param>
      <param name="autoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to the created data store. The specified value initializes the data store&#39;s <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
      <returns>A data store implementing the <see cref="T:DevExpress.Xpo.DB.IDataStore"/> interface, which uses the connection to access a database.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreBase.QueryDataStore(System.String,System.String,DevExpress.Xpo.DB.AutoCreateOption,System.IDisposable[]@)">
      <summary>
        <para>Creates a data store based on specified settings.</para>
      </summary>
      <param name="providerType">A <see cref="T:System.String"/> specifying the provider type. Normally, each provider returns its type via the XpoProviderTypeString property.</param>
      <param name="connectionString">The connection string which is used to instantiate a connection provider.</param>
      <param name="defaultAutoCreateOption">An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> enumeration value which specifies the action which is performed when connecting to the created data store. The specified value initializes the data store&#39;s <see cref="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption"/> property.</param>
      <param name="objectsToDisposeOnDisconnect">An array of objects that implement the System.IDisposable interface. These objects are automatically disposed of when the created data store is disconnected.</param>
      <returns>A data store implementing the <see cref="T:DevExpress.Xpo.DB.IDataStore"/> interface, which uses the connection to access a database.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterDataStoreProvider(System.String,DevExpress.Xpo.DB.Helpers.DataStoreCreationFromConnectionDelegate)">
      <summary>
        <para>Registers a data store provider using a specified connection type name and a procedure that establishes a connection for the provider.</para>
      </summary>
      <param name="connectionTypeShortName">A <see cref="T:System.String"/> specifying a connection type name, including a namespace. For instance, the <see cref="T:DevExpress.Xpo.DB.MSSqlConnectionProvider"/> defines this parameter as &quot;System.Data.SqlClient.SqlConnection&quot;.</param>
      <param name="createFromConnectionDelegate">A DataStoreCreationFromConnectionDelegate delegate to be called when the data store provider is created and connected to a database using a connection of the specified type.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterDataStoreProvider(System.String,DevExpress.Xpo.DB.Helpers.DataStoreCreationFromStringDelegate)">
      <summary>
        <para>Registers a data store provider using a specified name and a procedure that establishes a connection for the provider.</para>
      </summary>
      <param name="providerKey">A <see cref="T:System.String"/> that uniquely identifies a data store provider.</param>
      <param name="createFromStringDelegate">A DataStoreCreationFromStringDelegate delegate to be called when the data store provider is created and connected to a database using a connection string.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreBase.RegisterFactory(DevExpress.Xpo.DB.ProviderFactory)">
      <summary>
        <para>Registers a specified data store provider factory.</para>
      </summary>
      <param name="providerFactory">A ProviderFactory object exposing members required to create a data store provider.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreBase.UpdateSchema(DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>Updates a data store&#39;s schema according to specified settings.</para>
      </summary>
      <param name="tables">An array of tables whose structure should be saved in the data store.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.DataStoreBase.XpoProviderTypeParameterName">
      <summary>
        <para>Returns a parameter name used to denote a provider type in a connection string. The default value is &quot;XpoProvider&quot;.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DataStoreLogger">
      <summary>
        <para>Enables operations performed by a specific <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object to be logged.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DataStoreLogger.#ctor(DevExpress.Xpo.DB.IDataStore,System.IO.TextWriter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DataStoreLogger"/> class with the specified settings.</para>
      </summary>
      <param name="nestedProvider">A <see cref="T:DevExpress.Xpo.DB.IDataStore"/> object that represents a tracked data store.</param>
      <param name="logWriter">A <see cref="T:System.IO.TextWriter"/> object that will log data-aware operations performed on the tracked data store</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.DataStoreLogger.LogWriter">
      <summary>
        <para>Gets a writer that logs the data-aware operations performed on the tracked data store.</para>
      </summary>
      <value>A <see cref="T:System.IO.TextWriter"/> object that logs the data-aware operations performed on the tracked data store</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBColumn">
      <summary>
        <para>The schema of a column in a <see cref="T:DevExpress.Xpo.DB.DBTable"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBColumn"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor(System.String,System.Boolean,System.String,System.Int32,DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBColumn"/> class with the specified settings.</para>
      </summary>
      <param name="name"></param>
      <param name="isKey"></param>
      <param name="dBTypeName"></param>
      <param name="size"></param>
      <param name="type"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.#ctor(System.String,System.Boolean,System.String,System.Int32,DevExpress.Xpo.DB.DBColumnType,System.Boolean,System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="name"></param>
      <param name="isKey"></param>
      <param name="dBTypeName"></param>
      <param name="size"></param>
      <param name="type"></param>
      <param name="isNullable"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.ColumnType">
      <summary>
        <para>Specifies the column&#39;s type.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.DbDefaultValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.DBTypeName">
      <summary>
        <para>Specifies the name of the column data type.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.DefaultValue">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.GetColumnType(System.Type)">
      <summary>
        <para>Gets the column type of the specified runtime type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> object that represents the exact runtime type.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value that corresponds to the specified runtime type.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.GetColumnType(System.Type,System.Boolean)">
      <summary>
        <para>Gets the column type of the specified runtime type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> object that represents the exact runtime type.</param>
      <param name="suppressExceptionOnUnknown">true to return the DBColumnType.Unknown value if the specified type cannot be identified; false to raise the <see cref="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException"/> exception.</param>
      <returns>A DevExpress.Xpo.DB.DBColumnType enumeration value that corresponds to the specified runtime type.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.GetType(DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para>Gets the runtime type of the specified column type.</para>
      </summary>
      <param name="type">One of the <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration values.</param>
      <returns>A <see cref="T:System.Type"/> object that represents the exact runtime type of the specified column type.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.IsIdentity">
      <summary>
        <para>true if the value of the column increments automatically; otherwise, false. The default value is false.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.IsKey">
      <summary>
        <para>true if the column is the key column; otherwise, false.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.IsNullable">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.IsStorableType(DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para>Indicates whether values of the specified column type can be saved to a database.</para>
      </summary>
      <param name="type">One of the <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration values.</param>
      <returns>true if values of the specified column type can be saved to a database; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBColumn.IsStorableType(System.Type)">
      <summary>
        <para>Indicates whether values of the specified runtime type can be saved to a database.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type"/> object that represents the exact runtime type.</param>
      <returns>true if values of the specified type can be saved to a database; otherwise, false.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.Name">
      <summary>
        <para>Specifies the column&#39;s name.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumn.Size">
      <summary>
        <para>The maximum length of a text column. This is ignored for non-text columns.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBColumnType">
      <summary>
        <para>Lists the supported database column types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Boolean">
      <summary>
        <para>Indicates the <see cref="T:System.Boolean"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Byte">
      <summary>
        <para>Indicates the <see cref="T:System.Byte"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.ByteArray">
      <summary>
        <para>Indicates the <see cref="T:System.Byte"/> array data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Char">
      <summary>
        <para>Indicates the <see cref="T:System.Char"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.DateTime">
      <summary>
        <para>Indicates the <see cref="T:System.DateTime"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Decimal">
      <summary>
        <para>Indicates the <see cref="T:System.Decimal"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Double">
      <summary>
        <para>Indicates the <see cref="T:System.Double"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Guid">
      <summary>
        <para>Indicates the <see cref="T:System.Guid"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Int16">
      <summary>
        <para>Indicates the <see cref="T:System.Int16"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Int32">
      <summary>
        <para>Indicates the <see cref="T:System.Int32"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Int64">
      <summary>
        <para>Indicates the <see cref="T:System.Int64"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.SByte">
      <summary>
        <para>Indicates the <see cref="T:System.SByte"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Single">
      <summary>
        <para>Indicates the <see cref="T:System.Single"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.String">
      <summary>
        <para>Indicates the <see cref="T:System.String"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.TimeSpan">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.UInt16">
      <summary>
        <para>Indicates the <see cref="T:System.UInt16"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.UInt32">
      <summary>
        <para>Indicates the <see cref="T:System.UInt32"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.UInt64">
      <summary>
        <para>Indicates the <see cref="T:System.UInt64"/> data type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBColumnType.Unknown">
      <summary>
        <para>Indicates a non-standard data type.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBForeignKey">
      <summary>
        <para>The foreign key of a table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBForeignKey.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBForeignKey.#ctor(System.Collections.ICollection,System.String,System.Collections.Specialized.StringCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> class with the specified settings.</para>
      </summary>
      <param name="columns">A collection of strings that specify the names of columns that function as foreign keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.</param>
      <param name="primaryKeyTable">A <see cref="T:System.String"/> value that specifies the name of a primary key table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTable"/> field.</param>
      <param name="primaryKeyTableKeyColumns">A collection of strings that specify the names of columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTableKeyColumns"/> field.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTable">
      <summary>
        <para>Specifies the name of a primary key table.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBForeignKey.PrimaryKeyTableKeyColumns">
      <summary>
        <para>A collection of strings that specify the names of columns that function as primary keys for a table.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBIndex">
      <summary>
        <para>For internal use. An index of a table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor(System.Collections.ICollection,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with the specified settings.</para>
      </summary>
      <param name="columns">A collection of strings that identify the columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.</param>
      <param name="isUnique">true if the index must be unique; otherwise, false. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBIndex.IsUnique"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBIndex.#ctor(System.String,System.Collections.ICollection,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBIndex"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name"/> property.</param>
      <param name="columns">A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.</param>
      <param name="isUnique">true if the index must be unique; otherwise, false. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBIndex.IsUnique"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBIndex.IsUnique">
      <summary>
        <para>true if the index must be unique; otherwise, false. If the IsUnique field is set to true, an exception will be thrown when assigning an index that isn&#39;t unique.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBNameTypePair">
      <summary>
        <para>Stores a pair of values, specifying a <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> along with its corresponding name.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBNameTypePair.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBNameTypePair"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBNameTypePair.#ctor(System.String,DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBNameTypePair"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value.</param>
      <param name="type">A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBNameTypePair.Name">
      <summary>
        <para>A <see cref="T:System.String"/> value, specifying the database column name.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBNameTypePair.ToString">
      <summary>
        <para>Returns a value, specifying the name and type of the data table column (separated by a white space).</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value. Example: &quot;OrderDate DateTime&quot;.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBNameTypePair.Type">
      <summary>
        <para>A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> value, specifying the database column type.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBPrimaryKey">
      <summary>
        <para>The primary key of a table.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor(System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with the specified columns that function as primary keys for a table.</para>
      </summary>
      <param name="columns">A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBPrimaryKey.#ctor(System.String,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> class with the specified name and columns that function as primary keys for a table.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name"/> property.</param>
      <param name="columns">A collection of strings that identify columns that function as primary keys for a table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns"/> property.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBStoredProcedure">
      <summary>
        <para>A stored procedure.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedure.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedure"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.DBStoredProcedure.Arguments">
      <summary>
        <para>Provides access to the collection of a stored procedure&#39;s arguments.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgument"/> values.</value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBStoredProcedure.Name">
      <summary>
        <para>A <see cref="T:System.String"/> value, specifying the stored procedure name.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.DBStoredProcedure.ResultSets">
      <summary>
        <para>Provides access to the collection of a stored procedure&#39;s result sets.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureResultSet"/> values.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedure.ToString">
      <summary>
        <para>Returns the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedure"/> name.</para>
      </summary>
      <returns>Always the <see cref="F:DevExpress.Xpo.DB.DBStoredProcedure.Name"/> value.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBStoredProcedureArgument">
      <summary>
        <para>Provides information about a stored procedure&#39;s parameter.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgument"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.#ctor(System.String,DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgument"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value.</param>
      <param name="type">A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.#ctor(System.String,DevExpress.Xpo.DB.DBColumnType,DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgument"/> class with the specified settings.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBNameTypePair.Name"/> property.</param>
      <param name="type">A <see cref="T:DevExpress.Xpo.DB.DBColumnType"/> enumeration value. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBNameTypePair.Type"/> property.</param>
      <param name="direction">A <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection"/> enumeration value. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBStoredProcedureArgument.Direction"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgument.Direction">
      <summary>
        <para>A <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection"/> value corresponding to an appropriate <see cref="T:DevExpress.Xpo.DB.DBNameTypePair"/> object.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureArgument.ToString">
      <summary>
        <para>Returns a value, specifying the stored procedure&#39;s parameter direction (within brackets and in uppercase letters) along with the name and type of the parameter (separated by a white space).</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value. Example: &quot;[INOUT] OrderDate DateTime&quot;.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection">
      <summary>
        <para>Lists the directions available for a stored procedure&#39;s parameter.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection.In">
      <summary>
        <para>Indicates an input parameter of a stored procedure.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection.InOut">
      <summary>
        <para>Indicates a bidirectional parameter of a stored procedure.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBStoredProcedureArgumentDirection.Out">
      <summary>
        <para>Indicates an output parameter of a stored procedure.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBStoredProcedureResultSet">
      <summary>
        <para>A result set of a stored procedure.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureResultSet.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureResultSet"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureResultSet.#ctor(System.Collections.Generic.ICollection{DevExpress.Xpo.DB.DBNameTypePair})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBStoredProcedureResultSet"/> class with the specified settings.</para>
      </summary>
      <param name="columns">A collection of <see cref="T:DevExpress.Xpo.DB.DBNameTypePair"/> values.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.DBStoredProcedureResultSet.Columns">
      <summary>
        <para>Provides access to the list of data tables included in a stored procedure&#39;s result sets.</para>
      </summary>
      <value>A collection of <see cref="T:DevExpress.Xpo.DB.DBNameTypePair"/> values.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBStoredProcedureResultSet.ToString">
      <summary>
        <para>Returns a value, specifying the number of data table columns included in the stored procedure&#39;s result set.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value. Example: &quot;5 columns&quot;.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBTable">
      <summary>
        <para>A table that stores a persistent object&#39;s data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DBTable"/> class with the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the table&#39;s name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBTable.Name"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.AddColumn(DevExpress.Xpo.DB.DBColumn)">
      <summary>
        <para>Appends a column to the <see cref="P:DevExpress.Xpo.DB.DBTable.Columns"/> collection.</para>
      </summary>
      <param name="column">A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the column to be added to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.AddForeignKey(DevExpress.Xpo.DB.DBForeignKey)">
      <summary>
        <para>Appends a <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to the <see cref="P:DevExpress.Xpo.DB.DBTable.ForeignKeys"/> collection.</para>
      </summary>
      <param name="foreignKey">A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to be added to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.AddIndex(DevExpress.Xpo.DB.DBIndex)">
      <summary>
        <para>Appends a <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to the <see cref="P:DevExpress.Xpo.DB.DBTable.Indexes"/> collection.</para>
      </summary>
      <param name="index">A <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to be added to the collection.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.DBTable.Columns">
      <summary>
        <para>Provides access to the current <see cref="T:DevExpress.Xpo.DB.DBTable"/>&#39;s column collection.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Xpo.DB.DBColumn"/> objects that represent the columns defined in the current DBTable.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.DBTable.ForeignKeys">
      <summary>
        <para>Provides access to the current <see cref="T:DevExpress.Xpo.DB.DBTable"/>&#39;s foreign keys collection.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> objects that represent the foreign keys defined in the current DBTable.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.GetColumn(System.String)">
      <summary>
        <para>Creates a new column with the specified name and appends it to the <see cref="P:DevExpress.Xpo.DB.DBTable.Columns"/> collection.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value that specifies the column&#39;s name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.DBColumn.Name"/> property.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the new column.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.DBTable"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.DBTable.Indexes">
      <summary>
        <para>Provides access to the current <see cref="T:DevExpress.Xpo.DB.DBTable"/>&#39;s indexes collection.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Xpo.DB.DBIndex"/> objects that represent the indexes defined for the current DBTable.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.IsForeignKeyIncluded(DevExpress.Xpo.DB.DBForeignKey)">
      <summary>
        <para>Indicates whether the <see cref="P:DevExpress.Xpo.DB.DBTable.ForeignKeys"/> collection contains the specified <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object.</para>
      </summary>
      <param name="foreignKey">A <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> object to locate in the collection.</param>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.IsIndexIncluded(DevExpress.Xpo.DB.DBIndex)">
      <summary>
        <para>Indicates whether the <see cref="P:DevExpress.Xpo.DB.DBTable.Indexes"/> collection contains the specified <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object.</para>
      </summary>
      <param name="index">A <see cref="T:DevExpress.Xpo.DB.DBIndex"/> object to locate in the collection.</param>
      <returns>true if the collection contains the specified object; otherwise, false.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBTable.IsView">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBTable.Name">
      <summary>
        <para>Specifies the table&#39;s name.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBTable.PrimaryKey">
      <summary>
        <para>Specifies a <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> object that represents a primary keys for the table. The primary key must be unique to identify the record in the table. It&#39;s also possible to have a table with a primary key made up of two or more columns.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.DBTable.ToString">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.DBTableMultiColumnGadget">
      <summary>
        <para>An abstract base class for <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/>, <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/> and <see cref="T:DevExpress.Xpo.DB.DBIndex"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Columns">
      <summary>
        <para>Specifies a collection of strings that are the names of the columns comprising the <see cref="T:DevExpress.Xpo.DB.DBTableMultiColumnGadget"/> object. In the <see cref="T:DevExpress.Xpo.DB.DBPrimaryKey"/> descendant class, these columns are primary keys.  In <see cref="T:DevExpress.Xpo.DB.DBForeignKey"/>, these are foreign keys. In <see cref="T:DevExpress.Xpo.DB.DBIndex"/>, these are columns comprising the index.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.DBTableMultiColumnGadget.Name">
      <summary>
        <para>This member supports the XPO Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.DeleteStatement">
      <summary>
        <para>Represents the delete statement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DeleteStatement.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.DeleteStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/> class with the specified settings.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.</param>
      <param name="alias">A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.DeleteStatement.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DeleteStatement.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.DeleteStatement.ToString">
      <summary>
        <para>Returns a string representation of the <see cref="T:DevExpress.Xpo.DB.DeleteStatement"/>.</para>
      </summary>
      <returns>A string representing the DeleteStatement.</returns>
    </member>
    <member name="N:DevExpress.Xpo.DB.Exceptions">
      <summary>
        <para>Contains classes that describe exceptions on the datastore level.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException">
      <summary>
        <para>An exception that is thrown when a key or index constraint fails.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException.#ctor(System.String,System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.ConstraintViolationException"/> class with the specified settings.</para>
      </summary>
      <param name="sql">A string that specifies the SQL statement that raised the exception.</param>
      <param name="parameters">A string that specifies the parameters for the SQL statement.</param>
      <param name="innerException">An <see cref="T:System.Exception"/> object that represents the inner error.</param>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.LockingException">
      <summary>
        <para>An exception thrown because an attempt is made to modify a row in a database, but its version doesn&#39;t match the version of the row being posted.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.LockingException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.LockingException"/> class.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException">
      <summary>
        <para>An exception that is thrown when a connection provider cannot identify the type of column to create a column in a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException"/> class with the specified settings.</para>
      </summary>
      <param name="objectType">The type of column that cannot be identified.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.PropertyTypeMappingMissingException.PropertyType">
      <summary>
        <para>Gets the type of column that cannot be identified.</para>
      </summary>
      <value>The type of column that cannot be identified.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException">
      <summary>
        <para>An exception that is thrown when the storage schema doesn&#39;t match the structure of persistent objects and the schema cannot be modified.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException"/> class.</para>
      </summary>
      <param name="innerException"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException"/> class .</para>
      </summary>
      <param name="sql">A SQL statement or the name of the object that raised this exception.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException"/> class.</para>
      </summary>
      <param name="sql"></param>
      <param name="innerException"></param>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.SchemaCorrectionNeededException.Sql">
      <summary>
        <para>A SQL statement or the name of an object that raised this exception.</para>
      </summary>
      <value>A SQL statement or the name of an object that raised this exception.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException">
      <summary>
        <para>An exception that is thrown when an unexpected error occurs during the execution of a SQL statement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.#ctor(System.String,System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException"/> class with the specified settings.</para>
      </summary>
      <param name="sql">A string that specifies the SQL statement that raised the exception.</param>
      <param name="parameters">A string that specifies the parameters for the SQL statement.</param>
      <param name="innerException">An <see cref="T:System.Exception"/> object that represents the inner error.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.Parameters">
      <summary>
        <para>Gets a string that represents the parameters for the current SQL statement.</para>
      </summary>
      <value>A string that represents the parameters for the SQL statement.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.SqlExecutionErrorException.Sql">
      <summary>
        <para>Gets the SQL statement that raised the exception.</para>
      </summary>
      <value>A string that specifies the SQL statement which raised the exception.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException">
      <summary>
        <para>An exception that is thrown when a specific object cannot be created in a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException"/> class with the specified settings.</para>
      </summary>
      <param name="objectTypeName">A string that specifies the type of the object that cannot be created.</param>
      <param name="objectName">A string that specifies the name of the object.</param>
      <param name="parentObjectName">A string that specifies the name of the object&#39;s parent.</param>
      <param name="innerException">An <see cref="T:System.Exception"/> object that represents the inner error.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ObjectName">
      <summary>
        <para>Gets the name of the object that cannot be created.</para>
      </summary>
      <value>The name of the object that cannot be created.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ObjectTypeName">
      <summary>
        <para>Gets the type of the object that cannot be created.</para>
      </summary>
      <value>A string that specifies the type of the object that cannot be created.</value>
    </member>
    <member name="P:DevExpress.Xpo.DB.Exceptions.UnableToCreateDBObjectException.ParentObjectName">
      <summary>
        <para>Gets the name of the parent which contains the object that cannot be created.</para>
      </summary>
      <value>The name of the parent.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException">
      <summary>
        <para>An exception that is thrown when a database either cannot be created or opened.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Exceptions.UnableToOpenDatabaseException"/> class with the specified settings.</para>
      </summary>
      <param name="connectionString">A connection string that is used to connect to the database.</param>
      <param name="innerException">An <see cref="T:System.Exception"/> object that represents the inner error.</param>
    </member>
    <member name="N:DevExpress.Xpo.DB.Helpers">
      <summary>
        <para>Contains auxiliary (helper) classes that handle operations on data stores.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheBase">
      <summary>
        <para>Base class for classes that implement data store caching.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheBase.AutoCreateOption">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.Configure(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration)">
      <summary>
        <para>When implemented by a descendant class, applies specified configuration settings to a cached data store.</para>
      </summary>
      <param name="configuration">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object containing cache configuration settings.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.GetStorageTables(System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.GetStorageTablesList(System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="includeViews"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.IsBadForCache(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,DevExpress.Xpo.DB.JoinNode)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="config"></param>
      <param name="node"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.IsBadForCache(DevExpress.Xpo.DB.Helpers.DataCacheConfiguration,System.String)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="config"></param>
      <param name="tableName"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheBase.LogCategory">
      <summary>
        <para>The name of a category used to tag data cache operations in XPO logs. The default category name is &quot;DataCache&quot;.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="cookie"></param>
      <param name="statements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="dmlStatements"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="cookie"></param>
      <param name="dirtyTablesNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.NotifyDirtyTables(System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="dirtyTablesNames"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="cookie"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.Reset">
      <summary>
        <para>When implemented by a descendant class, resets or clears any cached information on data store tables (such as table update information and cached query results).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="cookie"></param>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="selects"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="cookie"></param>
      <param name="tables"></param>
      <param name="doNotCreateIfFirstTableNotExist"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheBase.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist"></param>
      <param name="tables"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration">
      <summary>
        <para>Contains configuration settings for cached data stores.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.#ctor(DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching,System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> class with specified caching scope settings.</para>
      </summary>
      <param name="caching">A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching"/> enumeration value specifying the scope of tables. The specified value is used to initialize the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Caching"/> property.</param>
      <param name="tables">An array of table names used to determine the caching scope. The specified value is used to initialize the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Caching">
      <summary>
        <para>Specifies the scope of table settings in the current configuration.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching"/> enumeration value which identifies if tables specified via the <see cref="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables"/> property are included in or excluded from the caching scope.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.CreateTableDictionary(System.String[])">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="tableList"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Empty">
      <summary>
        <para>Returns a shallow <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> instance.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration"/> object instance with no configuration settings specified.</value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.SuppressExplicitTransactionExceptions">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.TableDictionary">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.Helpers.DataCacheConfiguration.Tables">
      <summary>
        <para>Specifies tables to be used to determine the caching scope of the current configuration.</para>
      </summary>
      <value>An array of table names specifying the tables to be included in or excluded from the caching scope.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching">
      <summary>
        <para>Lists the values that specify the scope of cache configuration settings in cached data stores.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.All">
      <summary>
        <para>All tables will be cached, regardless of their inclusion in the configuration settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.InList">
      <summary>
        <para>Only tables specified in configuration settings will be cached.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheConfigurationCaching.NotInList">
      <summary>
        <para>All tables except for the tables specified in configuration settings will be cached.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheCookie">
      <summary>
        <para>A cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) state information stored in a Node element (<see cref="T:DevExpress.Xpo.DB.DataCacheNode"/> or <see cref="T:DevExpress.Xpo.DB.DataCacheNodeLocal"/>).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheCookie.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheCookie.#ctor(System.Guid,System.Int64)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="guid"></param>
      <param name="age"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Age">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Empty">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheCookie.Guid">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult">
      <summary>
        <para>Information on the last state of a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including data modification results.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult.ModificationResult">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheResult">
      <summary>
        <para>Information on the last state of a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheResult.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.CacheConfig">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.Cookie">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheResult.UpdatedTableAges">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult">
      <summary>
        <para>Information on the last state of a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including query results.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.SelectedData">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult.SelectingCookie">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult">
      <summary>
        <para>Information on the last state of a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>), including schema update results.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult.UpdateSchemaResult">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.Helpers.TableAge">
      <summary>
        <para>Information on the age of tables cached via a <see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.TableAge.#ctor">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.Helpers.TableAge.#ctor(System.String,System.Int64)">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <param name="name"></param>
      <param name="age"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.TableAge.Age">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.Helpers.TableAge.Name">
      <summary>
        <para>This member supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.ICachedDataStore">
      <summary>
        <para>The interface for objects that need to interact with a cached data store.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore">
      <summary>
        <para>Provides methods for transferring data between cached data store elements.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ModifyData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>When implemented by a class, executes specified modification statements against a cached data store, notifies about affected tables and returns the operation result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheModificationResult"/> denoting the result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.NotifyDirtyTables(DevExpress.Xpo.DB.Helpers.DataCacheCookie,System.String[])">
      <summary>
        <para>When implemented by a class, informs a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>) about specific modified tables.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="dirtyTablesNames">An array of table names specifying modified tables.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheResult"/> object specifying a Root element&#39;s state.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.ProcessCookie(DevExpress.Xpo.DB.Helpers.DataCacheCookie)">
      <summary>
        <para>When implemented by a class, synchronizes table update information with a cached data store&#39;s Root element (<see cref="T:DevExpress.Xpo.DB.DataCacheRoot"/> or <see cref="T:DevExpress.Xpo.DB.Helpers.MSSql2005SqlDependencyCacheRoot"/>).</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheResult"/> object specifying a Root element&#39;s state.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.SelectData(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>When implemented by a class, fetches data from a cached data store using specified query statements and returns the operation result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="selects">An array of query statements.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheSelectDataResult"/> object denoting the result of the data fetch.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ICacheToCacheCommunicationCore.UpdateSchema(DevExpress.Xpo.DB.Helpers.DataCacheCookie,DevExpress.Xpo.DB.DBTable[],System.Boolean)">
      <summary>
        <para>When implemented by a class, updates a cached data store&#39;s schema according to specified settings and returns the operation result.</para>
      </summary>
      <param name="cookie">A Root element&#39;s state stored by a specific cache Node.</param>
      <param name="tables">An array of tables whose structure should be saved in the cached data store.</param>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created if the table that corresponds to the first item in the tables array doesn&#39;t exist in the cached data store; otherwise, false.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.Helpers.DataCacheUpdateSchemaResult"/> denoting the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.IDataStore">
      <summary>
        <para>The interface for objects that need to interact with a data store.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.IDataStore.AutoCreateOption">
      <summary>
        <para>When implemented by a class, returns which operations are performed when a data store is accessed for the first time.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Xpo.DB.AutoCreateOption"/> value that specifies which operations are performed when a data store is accessed for the first time.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStore.ModifyData(DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Updates data in a data store using the specified modification statements.</para>
      </summary>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>The result of the data modifications.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStore.SelectData(DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>When implemented by a class, fetches data from a data store using the specified query statements.</para>
      </summary>
      <param name="selects">An array of statements to obtain data from the data store.</param>
      <returns>Data retrieved from the data store.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStore.UpdateSchema(System.Boolean,DevExpress.Xpo.DB.DBTable[])">
      <summary>
        <para>When implemented by a class, updates the storage schema according to the specified class descriptions.</para>
      </summary>
      <param name="doNotCreateIfFirstTableNotExist">true if the schema should not be created if the table that corresponds to the first item in the tables array doesn&#39;t exist in the data store.</param>
      <param name="tables">An array of tables whose structure should be saved in the data store.</param>
      <returns>An <see cref="T:DevExpress.Xpo.DB.UpdateSchemaResult"/> value that specifies the result of the update operation.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.IDataStoreAsync">
      <summary>
        <para>The interface for objects that need to interact with a data store asynchronously.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreAsync.ModifyDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.ModificationStatement[])">
      <summary>
        <para>Uses specified modification statements to asynchronously update data in a data store.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="dmlStatements">An array of data modification statements.</param>
      <returns>A Task that returns the data modification result.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.IDataStoreAsync.SelectDataAsync(System.Threading.CancellationToken,DevExpress.Xpo.DB.SelectStatement[])">
      <summary>
        <para>Uses specified query statements to asynchronously fetch data from a data store.</para>
      </summary>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <param name="selects">An array of statements to obtain data from the data store.</param>
      <returns>A Task that returns data retrieved from the data store.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.InsertStatement">
      <summary>
        <para>Represents the insert statement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.InsertStatement.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InsertStatement"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.InsertStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.InsertStatement"/> class with the specified settings.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.</param>
      <param name="alias">A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.InsertStatement.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.InsertStatement"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.InsertStatement.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.InsertStatement"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityColumn">
      <summary>
        <para>Specifies the name of an identity column in a table.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityColumnType">
      <summary>
        <para>Specifies the type of an identity column in a table.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.InsertStatement.IdentityParameter">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.InsertStatement.ToString">
      <summary>
        <para>Returns a string representation of the <see cref="T:DevExpress.Xpo.DB.InsertStatement"/>.</para>
      </summary>
      <returns>A string representing the InsertStatement.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.ISqlDataStore">
      <summary>
        <para>Represents the interface for objects that need to interact with SQL Server databases,</para>
      </summary>
    </member>
    <member name="P:DevExpress.Xpo.DB.ISqlDataStore.Connection">
      <summary>
        <para>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to a data store, if the specified data store allows commands to be created.</para>
      </summary>
      <value>A <see cref="T:System.Data.IDbConnection"/> object that specifies the connection to the data store, if the specified data store allows commands to be created.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ISqlDataStore.CreateCommand">
      <summary>
        <para>Creates a command if the data store allows commands to be created.</para>
      </summary>
      <returns>A <see cref="T:System.Data.IDbCommand"/> command that is executed when connected to a data store.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.JoinNode">
      <summary>
        <para>Serves as a base for the <see cref="T:DevExpress.Xpo.DB.BaseStatement"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNode"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.#ctor(DevExpress.Xpo.DB.DBTable,System.String,DevExpress.Xpo.DB.JoinType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNode"/> class with default settings.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represent the table.</param>
      <param name="alias">A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.</param>
      <param name="type">A <see cref="T:DevExpress.Xpo.DB.JoinType"/> enumeration value that specifies the join&#39;s type. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Type"/> property.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinNode.Alias">
      <summary>
        <para>A <see cref="T:System.String"/> value that identifies the table.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.CollectJoinNodesAndCriteria(System.Collections.Generic.List{DevExpress.Xpo.DB.JoinNode}@,System.Collections.Generic.List{DevExpress.Data.Filtering.CriteriaOperator}@)">
      <summary>
        <para></para>
      </summary>
      <param name="nodes"></param>
      <param name="criteria"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinNode.Condition">
      <summary>
        <para>Specifies the criteria expression.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.JoinNode"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.GetColumn(System.String)">
      <summary>
        <para>Returns the column with the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> value that specifies the column&#39;s name.</param>
      <returns>A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object that represents the table column.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.JoinNode"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinNode.SubNodes">
      <summary>
        <para>Provides access to the collection of sub nodes that is represented by a <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> object.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinNode.Table">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNode.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Xpo.DB.JoinNode"/> object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinNode.Type">
      <summary>
        <para>A <see cref="T:DevExpress.Xpo.DB.JoinType"/> enumeration value that specifies the join&#39;s type.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.JoinNodeCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.JoinNode"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.JoinNodeCollection.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Xpo.DB.JoinNodeCollection"/> object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.JoinType">
      <summary>
        <para>Lists the values that specify the join type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinType.Inner">
      <summary>
        <para>Represents an inner join. Inner joins (also known as equijoins) are used to combine information from two or more tables.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.JoinType.LeftOuter">
      <summary>
        <para>Includes all the records in which the linked field value in both tables is an exact match and every record in the primary for which there is no match.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.ModificationResult">
      <summary>
        <para>Represents the result of an update operation on a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ModificationResult"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor(DevExpress.Xpo.DB.ParameterValue[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ModificationResult"/> class.</para>
      </summary>
      <param name="identities"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ModificationResult.#ctor(System.Collections.Generic.List{DevExpress.Xpo.DB.ParameterValue})">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.ModificationResult"/> class.</para>
      </summary>
      <param name="identities"></param>
    </member>
    <member name="F:DevExpress.Xpo.DB.ModificationResult.Identities">
      <summary>
        <para>An array of identifiers.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.ModificationStatement">
      <summary>
        <para>Serves as the base class for classes that represent modification statements.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.ModificationStatement.Parameters">
      <summary>
        <para>Gets the collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.ModificationStatement.RecordsAffected">
      <summary>
        <para>Specifies the number of records to be modified.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.ModificationStatement.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Xpo.DB.ModificationStatement"/> object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.ParameterValue">
      <summary>
        <para>This class supports the internal infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ParameterValue.#ctor">
      <summary>
        <para>For internal use only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.ParameterValue.#ctor(System.Int32)">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <param name="tag"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.ParameterValue.Equals(System.Object)">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.ParameterValue.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.ParameterValue"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.ParameterValue.Tag">
      <summary>
        <para>For internal use only.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.QueryOperand">
      <summary>
        <para>Represents a query operand.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(DevExpress.Xpo.DB.DBColumn,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified column and alias name.</para>
      </summary>
      <param name="column">A <see cref="T:DevExpress.Xpo.DB.DBColumn"/> object representing the column that the query operand corresponds to. The name of this column is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> property.</param>
      <param name="nodeAlias">A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified column name and alias name.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value that specifies the column&#39;s name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> field.</param>
      <param name="nodeAlias">A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.#ctor(System.String,System.String,DevExpress.Xpo.DB.DBColumnType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> class with the specified settings.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value that specifies the column&#39;s name. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.ColumnName"/> field.</param>
      <param name="nodeAlias">A <see cref="T:System.String"/> value that specifies the alias name of the table in a query. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias"/> field.</param>
      <param name="columnType"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.Accept(DevExpress.Data.Filtering.ICriteriaVisitor)">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.Accept``1(DevExpress.Data.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para></para>
      </summary>
      <param name="visitor"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.QueryOperand.ColumnName">
      <summary>
        <para>Specifies the column&#39;s name</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.Xpo.DB.QueryOperand.ColumnType">
      <summary>
        <para>The column type.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperand.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.QueryOperand.NodeAlias">
      <summary>
        <para>Specifies the alias name of the table in a query.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.QueryOperandCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.QueryOperand"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryOperandCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.QueryOperandCollection"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryOperandCollection.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.QueryOperandCollection"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.QueryParameterCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.#ctor(DevExpress.Data.Filtering.OperandValue[])">
      <summary>
        <para>Initializes and populates a new instance of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> class.</para>
      </summary>
      <param name="parameters">An array of <see cref="T:DevExpress.Data.Filtering.OperandValue"/> objects that are added to the collection.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.QueryParameterCollection.ToString">
      <summary>
        <para>Returns a string representation of the <see cref="T:DevExpress.Xpo.DB.QueryParameterCollection"/>.</para>
      </summary>
      <returns>A string representing the QueryParameterCollection.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.QuerySortingCollection">
      <summary>
        <para>Represents a collection of <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.QuerySortingCollection.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.SelectedData">
      <summary>
        <para>Represents the result of batch select queries made to a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectedData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectedData"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectedData.#ctor(DevExpress.Xpo.DB.SelectStatementResult[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectedData"/> class with the specified settings.</para>
      </summary>
      <param name="resultSet">An array of <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> objects that represent the result of select operations.</param>
    </member>
    <member name="F:DevExpress.Xpo.DB.SelectedData.ResultSet">
      <summary>
        <para>The results of select query statements. To learn more, refer to How to: Access Data in SQL Query Results.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.SelectStatement">
      <summary>
        <para>Represents the select statement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatement.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> class with the specified settings.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.</param>
      <param name="alias">A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatement.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatement.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.SelectStatement.GroupCondition">
      <summary>
        <para>Specifies the grouping expression that is represented by a <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.SelectStatement.GroupProperties">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> that specifies the columns by which the result of the current <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> should be grouped.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperatorCollection"/> that specifies the columns by which the result of the current SelectStatement should be grouped.</value>
    </member>
    <member name="F:DevExpress.Xpo.DB.SelectStatement.SkipSelectedRecords">
      <summary>
        <para>Specifies the number of records to exclude from the query result.</para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Xpo.DB.SelectStatement.SortProperties">
      <summary>
        <para>Provides access to the <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> collection.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DB.QuerySortingCollection"/> object that represents the collection of <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> objects.</value>
    </member>
    <member name="F:DevExpress.Xpo.DB.SelectStatement.TopSelectedRecords">
      <summary>
        <para>Specifies the maximum number of selected records.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatement.ToString">
      <summary>
        <para>Returns a string that represents the current object.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:DevExpress.Xpo.DB.SelectStatement"/> object.</returns>
    </member>
    <member name="T:DevExpress.Xpo.DB.SelectStatementResult">
      <summary>
        <para>Represents the result of a single select query to a data store.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(DevExpress.Xpo.DB.SelectStatementResultRow[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> class with the specified collection of rows.</para>
      </summary>
      <param name="rows">An array of rows that represent the result of a single select query to a data store. Each row contains the values of the queried fields. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.SelectStatementResult.Rows"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> class with the specified collection of rows.</para>
      </summary>
      <param name="rows">A collection of rows that will be copied to the collection being created.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatementResult.#ctor(System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> class with the specified rows.</para>
      </summary>
      <param name="testData">An array of objects that will be represented as the collection&#39;s elements.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SelectStatementResult.Clone">
      <summary>
        <para>Creates a copy of the current <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> instance.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.Xpo.DB.SelectStatementResult"/> object which represents an exact copy of the current object.</returns>
    </member>
    <member name="F:DevExpress.Xpo.DB.SelectStatementResult.Rows">
      <summary>
        <para>An array of rows that represent the result of a single select query to a data store. Each row contains the values of the queried fields. To learn more, refer to How to: Access Data in SQL Query Results.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Xpo.DB.SortingColumn">
      <summary>
        <para>Represents a sorting column in a query.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with the specified property and sort direction.</para>
      </summary>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant representing the query operand that identifies the sorted column in a query. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Property"/> property.</param>
      <param name="direction">A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Direction"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.SortingColumn.#ctor(System.String,System.String,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> class with the specified settings.</para>
      </summary>
      <param name="columnName">A <see cref="T:System.String"/> value that specifies the name of the sorted column in a query.</param>
      <param name="nodeAlias">A <see cref="T:System.String"/> value that specifies the alias name of the table in the query.</param>
      <param name="direction">A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.DB.SortingColumn.Direction"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.DB.SortingColumn.Direction">
      <summary>
        <para>Gets or sets the column&#39;s sort order.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the column&#39;s sort order.</value>
    </member>
    <member name="M:DevExpress.Xpo.DB.SortingColumn.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.SortingColumn.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.SortingColumn"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.Xpo.DB.SortingColumn.Property">
      <summary>
        <para>Gets or set the query operand that identifies the sorted column in a query.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> descendant representing the query operand that identifies the sorted column in a query.</value>
    </member>
    <member name="T:DevExpress.Xpo.DB.SortingDirection">
      <summary>
        <para>Lists the values that specify the sort order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.SortingDirection.Ascending">
      <summary>
        <para>A property (column) is sorted in ascending order.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.SortingDirection.Descending">
      <summary>
        <para>A property (column) is sorted in descending order.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.UpdateSchemaResult">
      <summary>
        <para>Lists the values that specify the result of the data store schema update operation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.UpdateSchemaResult.FirstTableNotExists">
      <summary>
        <para>Indicates that the table that corresponds to the first item doesn&#39;t exist in the data store.</para>
      </summary>
    </member>
    <member name="F:DevExpress.Xpo.DB.UpdateSchemaResult.SchemaExists">
      <summary>
        <para>Indicates that the database schema exists.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.DB.UpdateStatement">
      <summary>
        <para>Represents the update statement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.UpdateStatement.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.DB.UpdateStatement.#ctor(DevExpress.Xpo.DB.DBTable,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/> class with the specified settings.</para>
      </summary>
      <param name="table">A <see cref="T:DevExpress.Xpo.DB.DBTable"/> object that represents the table.</param>
      <param name="alias">A <see cref="T:System.String"/> value that identifies the table. This value is assigned to the <see cref="F:DevExpress.Xpo.DB.JoinNode.Alias"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.DB.UpdateStatement.Equals(System.Object)">
      <summary>
        <para>Determines whether the current object has the same settings as the specified object.</para>
      </summary>
      <param name="obj">A <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/> object to compare with the current object.</param>
      <returns>true if the object specified by the parameter has the same settings as the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.UpdateStatement.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Xpo.DB.UpdateStatement.ToString">
      <summary>
        <para>Returns a string representation of the <see cref="T:DevExpress.Xpo.DB.UpdateStatement"/>.</para>
      </summary>
      <returns>A string representing the UpdateStatement.</returns>
    </member>
    <member name="N:DevExpress.Xpo.Helpers">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="T:DevExpress.Xpo.Helpers.ICommandChannel">
      <summary>
        <para>An interface for objects that need to accept and execute commands. All XPO layers implement this interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Helpers.ICommandChannel.Do(System.String,System.Object)">
      <summary>
        <para>Accepts and executes a specified command with arguments.</para>
      </summary>
      <param name="command">A command to be accepted and executed.</param>
      <param name="args">Arguments the command accepts.</param>
      <returns>An object that is the operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.Helpers.ICommandChannelAsync">
      <summary>
        <para>An interface for objects that need to accept and execute commands asynchronously. All XPO layers implement this interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.Helpers.ICommandChannelAsync.DoAsync(System.String,System.Object,System.Threading.CancellationToken)">
      <summary>
        <para>Asynchronously accepts and executes a specified command with arguments.</para>
      </summary>
      <param name="command">A command to be accepted and executed.</param>
      <param name="args">Arguments the command accepts.</param>
      <param name="cancellationToken">A CancellationToken object that delivers a cancellation notice to the running operation.</param>
      <returns>A Task that returns an object. This object is the operation result.</returns>
    </member>
    <member name="T:DevExpress.Xpo.SortProperty">
      <summary>
        <para>An element in the <see cref="T:DevExpress.Xpo.SortingCollection"/>.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SortProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class with default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Xpo.SortProperty.#ctor(DevExpress.Data.Filtering.CriteriaOperator,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class.</para>
      </summary>
      <param name="property">A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression used to sort values. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Property"/> property.</param>
      <param name="direction">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the property&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Direction"/> property.</param>
    </member>
    <member name="M:DevExpress.Xpo.SortProperty.#ctor(System.String,DevExpress.Xpo.DB.SortingDirection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Xpo.SortProperty"/> class with a property name to sort against and the sort order.</para>
      </summary>
      <param name="propertyName">A <see cref="T:System.String"/> value which specifies the name of the property to sort against. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.PropertyName"/> property.</param>
      <param name="sorting">A <see cref="T:DevExpress.Xpo.SortDirection"/> enumeration value which specifies the property&#39;s sort order. This value is assigned to the <see cref="P:DevExpress.Xpo.SortProperty.Direction"/> property.</param>
    </member>
    <member name="P:DevExpress.Xpo.SortProperty.Direction">
      <summary>
        <para>Gets or sets the property&#39;s sort order.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Xpo.DB.SortingDirection"/> enumeration value which specifies the property&#39;s sort order.</value>
    </member>
    <member name="P:DevExpress.Xpo.SortProperty.Property">
      <summary>
        <para>Gets or sets the expression used to sort values.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Data.Filtering.CriteriaOperator"/> object that represents the expression used to sort values.</value>
    </member>
    <member name="P:DevExpress.Xpo.SortProperty.PropertyName">
      <summary>
        <para>Gets or sets the name of the property to sort against.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value which specifies the name of the property that identifies the sorted column in a data store. This value is case-sensitive.</value>
    </member>
    <member name="N:DevExpress.XtraEditors">
      <summary>
        <para>Contains editor classes. They provide the functionality for corresponding controls. Editor specific information is stored within the Persistent classes that are implemented in the <see cref="N:DevExpress.XtraEditors.Persistent"/> namespace.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraEditors.DXErrorProvider">
      <summary>
        <para>Contains classes that support the error handling mechanism.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo">
      <summary>
        <para>Encapsulates error information on a specific property.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> class with the default values.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.#ctor(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> class with the specified error information.</para>
      </summary>
      <param name="errorText">A string that specifies the error text. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText"/> property.</param>
      <param name="errorType">An error type. This value is used to initialize the <see cref="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType"/> property.</param>
    </member>
    <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorText">
      <summary>
        <para>Gets or sets the error text associated with the current property name.</para>
      </summary>
      <value>A string that represents the error text.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo.ErrorType">
      <summary>
        <para>Gets or sets the type of error associated with the current property name.</para>
      </summary>
      <value>An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType"/> value that represents the error type.</value>
    </member>
    <member name="T:DevExpress.XtraEditors.DXErrorProvider.ErrorType">
      <summary>
        <para>Enumerates error icon types.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Critical">
      <summary>
        <para>The &#39;Critical Error&#39; icon:</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Default">
      <summary>
        <para>The default error icon specified by the <see cref="P:DevExpress.XtraEditors.BaseEdit.ErrorIcon"/> property: The <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event is not raised when an error of the Default type is assigned to an editor.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Information">
      <summary>
        <para>The &#39;Information&#39; icon:</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.None">
      <summary>
        <para>Indicates that no error is associated with an editor or a cell.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User1">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User2">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User3">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User4">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User5">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User6">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User7">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User8">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.User9">
      <summary>
        <para>A user-defined icon to be provided via the <see cref="E:DevExpress.XtraEditors.DXErrorProvider.DXErrorProvider.GetErrorIcon"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.DXErrorProvider.ErrorType.Warning">
      <summary>
        <para>The &#39;Warning&#39; icon:</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo">
      <summary>
        <para>Provides methods to return error information for a business object&#39;s properties.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetError(DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
      <summary>
        <para>When implemented by a class, this method returns information on an error associated with a business object.</para>
      </summary>
      <param name="info">An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.DXErrorProvider.IDXDataErrorInfo.GetPropertyError(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
      <summary>
        <para>When implemented by a class, this method returns information on an error associated with a specific business object&#39;s property.</para>
      </summary>
      <param name="propertyName">A string that identifies the name of the property for which information on an error is to be returned.</param>
      <param name="info">An <see cref="T:DevExpress.XtraEditors.DXErrorProvider.ErrorInfo"/> object that contains information on an error.</param>
    </member>
    <member name="T:DevExpress.XtraEditors.FilterControlAllowAggregateEditing">
      <summary>
        <para>Contains values that specify if filters against List properties can be created.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterControlAllowAggregateEditing.Aggregate">
      <summary>
        <para>Allows filters to be created against properties that are List objects.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterControlAllowAggregateEditing.AggregateWithCondition">
      <summary>
        <para>Allows filters to be created against properties that are List objects, and against the List&#39;s children.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterControlAllowAggregateEditing.No">
      <summary>
        <para>Doesn&#39;t allow filters to be created against List properties and against their children.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.FilterDateType">
      <summary>
        <para>Enumerates filters that identify certain dates and date intervals.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.Beyond">
      <summary>
        <para>Dates that belong to the month in three months time and beyond.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.BeyondThisYear">
      <summary>
        <para>Dates that follow the current year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.Earlier">
      <summary>
        <para>Dates that belong to the month seven months ago and earlier.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.EarlierThisMonth">
      <summary>
        <para>Dates of the current month that are prior to the previous week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.EarlierThisWeek">
      <summary>
        <para>Dates of the current week that are prior to yesterday.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.EarlierThisYear">
      <summary>
        <para>Dates of the current year that are prior to the current month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.Empty">
      <summary>
        <para>Does not specify any condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.LastWeek">
      <summary>
        <para>Dates of the previous week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.LaterThisMonth">
      <summary>
        <para>Dates of the current month that follow the next week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.LaterThisWeek">
      <summary>
        <para>Dates of the current week starting from the day after tomorrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.LaterThisYear">
      <summary>
        <para>Dates of the current year starting from the following month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAfter1">
      <summary>
        <para>Dates that belong to the following month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAfter2">
      <summary>
        <para>Dates that belong to the month in two months time.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo1">
      <summary>
        <para>Dates that belong to the previous month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo2">
      <summary>
        <para>Dates that belong to the month two months ago.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo3">
      <summary>
        <para>Dates that belong to the month three months ago.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo4">
      <summary>
        <para>Dates that belong to the month four months ago.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo5">
      <summary>
        <para>Dates that belong to the month five months ago.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.MonthAgo6">
      <summary>
        <para>Dates that belong to the month six months ago.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.NextWeek">
      <summary>
        <para>Dates that belong to the following week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.None">
      <summary>
        <para>Does not specify any condition.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.PriorThisYear">
      <summary>
        <para>Dates that are prior to the current year.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.SpecificDate">
      <summary>
        <para>Not supported when setting the <see cref="P:DevExpress.XtraEditors.FormatConditionRuleDateOccuring.DateType"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.ThisMonth">
      <summary>
        <para>Dates that belong to the current month.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.ThisWeek">
      <summary>
        <para>Dates that belong to the current week.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.Today">
      <summary>
        <para>Today.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.Tomorrow">
      <summary>
        <para>Tomorrow.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.User">
      <summary>
        <para>Not supported when setting the <see cref="P:DevExpress.XtraEditors.FormatConditionRuleDateOccuring.DateType"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraEditors.FilterDateType.Yesterday">
      <summary>
        <para>Yesterday.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraEditors.IRangeControlClient">
      <summary>
        <para>The interface that a Range Control Client must implement to be embedded in Range Control (<see cref="T:DevExpress.XtraEditors.RangeControl"/> or <see cref="T:DevExpress.Xpf.Editors.RangeControl.RangeControl"/>).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.Calculate(System.Drawing.Rectangle)">
      <summary>
        <para>This method is fired when the RangeControl&#39;s state, size or settings are changed.</para>
      </summary>
      <param name="contentRect">A Rectangle that specifies the bounds of the Range Control&#39;s viewport.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.CalculateSelectionBounds(DevExpress.XtraEditors.RangeControlPaintEventArgs,System.Drawing.Rectangle)">
      <summary>
        <para></para>
      </summary>
      <param name="e"></param>
      <param name="rect"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.DrawContent(DevExpress.XtraEditors.RangeControlPaintEventArgs)">
      <summary>
        <para>Renders the Range Control&#39;s viewport.</para>
      </summary>
      <param name="e">A RangeControlPaintEventArgs value that contains data to paint the viewport.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.DrawRuler(DevExpress.XtraEditors.RangeControlPaintEventArgs)">
      <summary>
        <para>This method allows you to manually draw the ruler. It returns a value indicating whether the ruler has been drawn.</para>
      </summary>
      <param name="e">A RangeControlPaintEventArgs value that contains data to paint the ruler.</param>
      <returns>true if the Client draws the ruler itself; false if the ruler is painted by the Range Control.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.DrawSelection(DevExpress.XtraEditors.RangeControlPaintEventArgs)">
      <summary>
        <para></para>
      </summary>
      <param name="e"></param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetNormalizedValue(System.Object)">
      <summary>
        <para>Converts a ruler&#39;s regular value (between the total range&#39;s Minimum and Maximum) into a normalized value (between 0 and 1).</para>
      </summary>
      <param name="value">A ruler&#39;s regular value (between the total range&#39;s Minimum and Maximum)</param>
      <returns>A ruler&#39;s normalized value (between 0 and 1).</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetOptions">
      <summary>
        <para>The method should return an object that exposes the Client&#39;s customization options for the Range Control.</para>
      </summary>
      <returns>An object that exposes the Client&#39;s customization options for the Range Control.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetRuler(DevExpress.XtraEditors.RulerInfoArgs)">
      <summary>
        <para>This method should return custom ruler values if these values are not equally spaced.</para>
      </summary>
      <param name="e">A RulerInfoArgs object that contains the ruler related information.</param>
      <returns>A list of ruler values; null if the ruler has equally spaced increments specified by the <see cref="P:DevExpress.XtraEditors.IRangeControlClient.RulerDelta"/> property.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.GetValue(System.Double)">
      <summary>
        <para>Converts a ruler&#39;s normalized value (between 0 and 1) into a regular value (between the total range&#39;s Minimum and Maximum).</para>
      </summary>
      <param name="normalizedValue">A ruler&#39;s normalized value (between 0 and 1).</param>
      <returns>A ruler&#39;s regular value (between the total range&#39;s Minimum and Maximum).</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.InvalidText">
      <summary>
        <para>This property should specify the description of the Client&#39;s current invalid state.</para>
      </summary>
      <value>A string that is the description of the Client&#39;s current invalid state.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.IsCustomRuler">
      <summary>
        <para>This property should return a value indicating whether the Range Control must reserve space to paint the ruler.</para>
      </summary>
      <value>true if the Range Control must not reserve space to paint the ruler; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.IsValid">
      <summary>
        <para>This property should indicate whether the Client&#39;s state is valid and the Client should render itself within the viewport.</para>
      </summary>
      <value>true if the Client&#39;s state is valid and the Client should render itself within the viewport; false if the <see cref="P:DevExpress.XtraEditors.IRangeControlClient.InvalidText"/> message should be painted within the viewport.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.IsValidType(System.Type)">
      <summary>
        <para>This method indicates whether the specified type of ruler values is supported.</para>
      </summary>
      <param name="type">The type of ruler values being checked.</param>
      <returns>true if the specified type is supported; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.NormalizedRulerDelta">
      <summary>
        <para>This property should return the normalized distance between the ruler&#39;s adjacent tickmarks.</para>
      </summary>
      <value>An object that identifies the normalized distance between the ruler&#39;s adjacent tickmarks.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnClick(DevExpress.XtraEditors.RangeControlHitInfo)">
      <summary>
        <para>This method is called when an end-user clicks within the Range Control&#39;s viewport.</para>
      </summary>
      <param name="hitInfo">A RangeControlHitInfo object that allows you to identify the clicked element.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnRangeChanged(System.Object,System.Object)">
      <summary>
        <para>This method is called by the Range Control to notify the Client that the range has been changed.</para>
      </summary>
      <param name="rangeMinimum">The minimum value of the new range.</param>
      <param name="rangeMaximum">The maximum value of the new range.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnRangeControlChanged(DevExpress.XtraEditors.IRangeControl)">
      <summary>
        <para></para>
      </summary>
      <param name="rangeControl"></param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.OnResize">
      <summary>
        <para>This method is called when the Range Control&#39;s size is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.RangeBoxBottomIndent">
      <summary>
        <para>This property returns the bottom indent of the selection area within the viewport.</para>
      </summary>
      <value>The bottom indent of the selection area within the viewport.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.RangeBoxTopIndent">
      <summary>
        <para>This property returns the top indent of the selection area within the viewport.</para>
      </summary>
      <value>The top indent of the selection area within the viewport.</value>
    </member>
    <member name="E:DevExpress.XtraEditors.IRangeControlClient.RangeChanged">
      <summary>
        <para>This event must fire when the Client&#39;s range setting is changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraEditors.IRangeControlClient.RulerDelta">
      <summary>
        <para>This property returns the distance between the ruler&#39;s adjacent tickmarks.</para>
      </summary>
      <value>An object that identifies the distance between the ruler&#39;s adjacent tickmarks.</value>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.RulerToString(System.Int32)">
      <summary>
        <para>Returns the text representation of ruler values</para>
      </summary>
      <param name="ruleIndex">The zero-based index of a specific ruler value.</param>
      <returns>A string that is the text representation of the specified ruler value.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.SupportOrientation(System.Windows.Forms.Orientation)">
      <summary>
        <para>This method returns a value indicating whether the Client supports the horizontal and/or vertical orientations.</para>
      </summary>
      <param name="orientation">An orientation to be checked.</param>
      <returns>true if the Client supports the specified orientation; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.UpdateHotInfo(DevExpress.XtraEditors.RangeControlHitInfo)">
      <summary>
        <para>This method is fired when you move the mouse cursor over the viewport.</para>
      </summary>
      <param name="hitInfo">A RangeControlHitInfo object that contains information on the point being hovered over.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.UpdatePressedInfo(DevExpress.XtraEditors.RangeControlHitInfo)">
      <summary>
        <para>This method is fired when you press the mouse button within the viewport (without releasing the mouse button).</para>
      </summary>
      <param name="hitInfo">A RangeControlHitInfo object that contains information on the point being pressed.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.ValidateRange(DevExpress.XtraEditors.NormalizedRangeInfo)">
      <summary>
        <para>Validates a range when it is changed.</para>
      </summary>
      <param name="info">A NormalizedRangeInfo object that contains information on the current range.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.ValidateScale(System.Double)">
      <summary>
        <para>Validates a scale(zoom) factor.</para>
      </summary>
      <param name="newScale">A double value that is the new scale factor that is about to be applied.</param>
      <returns>The valid scale factor.</returns>
    </member>
    <member name="M:DevExpress.XtraEditors.IRangeControlClient.ValueToString(System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="normalizedValue"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.XtraEditors.RangeControlRange">
      <summary>
        <para>Contains information on a range of data.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.RangeControlRange.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.RangeControlRange"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.RangeControlRange.#ctor(System.Object,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.RangeControlRange"/> class with the specified range bounds.</para>
      </summary>
      <param name="minimum">The value to initialize the <see cref="P:DevExpress.XtraEditors.RangeControlRange.Minimum"/> property.</param>
      <param name="maximum">The value to initialize the <see cref="P:DevExpress.XtraEditors.RangeControlRange.Maximum"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraEditors.RangeControlRange.InternalSetMaximum(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:DevExpress.XtraEditors.RangeControlRange.InternalSetMinimum(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:DevExpress.XtraEditors.RangeControlRange.Maximum">
      <summary>
        <para>Gets or sets the end bound of a range.</para>
      </summary>
      <value>The end bound of a range.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.RangeControlRange.Minimum">
      <summary>
        <para>Gets or sets the start bound of a range.</para>
      </summary>
      <value>The start bound of a range.</value>
    </member>
    <member name="P:DevExpress.XtraEditors.RangeControlRange.Owner">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.XtraEditors.RangeControlRange.Reset">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraEditors.RangeControlRange.ShouldSerialize">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="N:DevExpress.XtraGrid">
      <summary>
        <para>Contains classes that provide information about the grid control, grid levels and implement the functionality for summaries, styles and style conditions.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraGrid.ColumnFilterMode">
      <summary>
        <para>Contains values that specify how a column&#39;s data is filtered via the auto filter row and filter dropdown.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnFilterMode.DisplayText">
      <summary>
        <para>A column&#39;s data is filtered by the display text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnFilterMode.Value">
      <summary>
        <para>A column&#39;s data is filtered by the edit values.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraGrid.ColumnGroupInterval">
      <summary>
        <para>Lists the values that specify how the data rows are combined into groups when in grouping mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Alphabetical">
      <summary>
        <para>Rows are grouped by the character that grouping column values start with.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Date">
      <summary>
        <para>This option is in effect only for columns that store date/time values. Rows are grouped by the date part of their values, the time portion is ignored in this grouping mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateMonth">
      <summary>
        <para>This option is in effect only for columns that store date/time values. Rows are grouped by the month part of their values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateRange">
      <summary>
        <para>This option is in effect for columns that store date/time values. Rows are combined into the following non-overlapping groups according to their date value as compared with today&#39;s date:  &quot;Beyond Next Month&quot;,  &quot;Next Month&quot;,  &quot;Later this Month&quot;,  &quot;Three Weeks Away&quot;,  &quot;Two Weeks Away&quot;,  &quot;Next Week&quot;,  &quot;Today&quot;,  &quot;Tomorrow&quot;,  &quot;Yesterday&quot;,  &quot;Sunday&quot;,  &quot;Monday&quot;,  &quot;Tuesday&quot;,  &quot;Wednesday&quot;,  &quot;Thursday&quot;,  &quot;Friday&quot;,  &quot;Saturday&quot;,  &quot;Last Week&quot;,  &quot;Two Weeks Ago&quot;,  &quot;Three Weeks Ago&quot;,  &quot;Earlier this Month&quot;,  &quot;Last Month&quot;,  &quot;Older&quot;.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DateYear">
      <summary>
        <para>This option is in effect only for columns that store date/time values. Rows are grouped by the year part of their values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Default">
      <summary>
        <para>For columns which store date/time values, this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Date"/> option. For non date/time columns this option is the same as the <see cref="F:DevExpress.XtraGrid.ColumnGroupInterval.Value"/> option.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.DisplayText">
      <summary>
        <para>Rows are grouped by display values of the grouping column.In specific instances, column cells can have different edit values, but the same display value. To combine these rows into the same group, use the DisplayText group mode.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnGroupInterval.Value">
      <summary>
        <para>Rows are grouped by values of grouping columns. The number of groups matches the number of unique values within the grouping column.For date/time columns, both the date and time portions are taken into account for value comparison. To specify how date/time values are presented in group rows in WinForms Data Grid, apply formatting to the grouping column (e.g., with the <see cref="P:DevExpress.XtraGrid.Columns.GridColumn.DisplayFormat"/> property).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraGrid.ColumnSortMode">
      <summary>
        <para>Lists the values that specify how a column&#39;s data should be sorted.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnSortMode.Custom">
      <summary>
        <para>Enables custom sorting of a column&#39;s data. To implement custom sorting, handle the <see cref="E:DevExpress.XtraGrid.Views.Base.ColumnView.CustomColumnSort"/> event in the GridControl, and the <see cref="E:DevExpress.XtraTreeList.TreeList.CompareNodeValues"/> event in the TreeList.In the GridControl, the Custom mode also enables custom grouping of rows when grouping is applied against the current column. To implement custom grouping, handle the <see cref="E:DevExpress.XtraGrid.Views.Grid.GridView.CustomColumnGroup"/> event.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnSortMode.Default">
      <summary>
        <para>Sorts the column&#39;s data according to the type of the editor assigned to the column. The Default option is equivalent to DisplayText for columns that use <see cref="T:DevExpress.XtraEditors.LookUpEdit"/>, <see cref="T:DevExpress.XtraEditors.ImageComboBoxEdit"/> and HypertextLabel (<see cref="T:DevExpress.XtraEditors.Repository.RepositoryItemHypertextLabel"/>) in&#0045;place editors.The Default option is equivalent to Value for other columns. Note that for certain editors (<see cref="T:DevExpress.XtraEditors.TextEdit"/>, <see cref="T:DevExpress.XtraEditors.ComboBoxEdit"/>, etc) the edit values match the display values.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnSortMode.DisplayText">
      <summary>
        <para>Sorts the column&#39;s data by the column&#39;s display text (the strings displayed within the column&#39;s cells).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraGrid.ColumnSortMode.Value">
      <summary>
        <para>Sorts the column&#39;s data by the column&#39;s edit values (these are synchronized with the bound data source&#39;s values).</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraPrinting">
      <summary>
        <para>Contains classes that provide the basic functionality for the XtraPrinting library (bricks, pages, document).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.BorderDashStyle">
      <summary>
        <para>Lists the values used to specify the border&#39;s dash style for an <see cref="T:DevExpress.XtraReports.UI.XRControl"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Dash">
      <summary>
        <para>Specifies a line consisting of dashes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderDashStyle.DashDot">
      <summary>
        <para>Specifies a line consisting of a repeating dash-dot pattern. Not supported in HTML (becomes visible as Dash)</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderDashStyle.DashDotDot">
      <summary>
        <para>Specifies a line consisting of a repeating dash-dot-dot pattern. Not supported in HTML (becomes visible as Dash)</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Dot">
      <summary>
        <para>Specifies a line consisting of dots.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Double">
      <summary>
        <para>Specifies a double solid line.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderDashStyle.Solid">
      <summary>
        <para>Specifies a solid line.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.BorderSide">
      <summary>
        <para>Specifies the borders displayed around a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderSide.All">
      <summary>
        <para>Applies all borders to a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderSide.Bottom">
      <summary>
        <para>Applies the bottom border to a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderSide.Left">
      <summary>
        <para>Applies the left border to a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderSide.None">
      <summary>
        <para>No borders are applied to a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderSide.Right">
      <summary>
        <para>Applies the right border to a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BorderSide.Top">
      <summary>
        <para>Applies the top border to a brick.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.BrickAlignment">
      <summary>
        <para>Specifies brick alignment relative to its layout rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickAlignment.Center">
      <summary>
        <para>Specifies whether a brick is aligned by the center of the layout rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickAlignment.Far">
      <summary>
        <para>Specifies whether a brick is aligned away from the original position of the layout rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickAlignment.Near">
      <summary>
        <para>Specifies that the text shall be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickAlignment.None">
      <summary>
        <para>Cancels brick alignment.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.BrickBorderStyle">
      <summary>
        <para>Specifies the border style for a brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Center">
      <summary>
        <para>The borders are drawn over the contour of the brick&#39;s rectangle, so that they are partially inside and outside of the brick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Inset">
      <summary>
        <para>The borders are drawn inside the brick&#39;s rectangle.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Outset">
      <summary>
        <para>The borders are drawn outside the brick&#39;s rectangle.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.BrickStringFormat">
      <summary>
        <para>Encapsulates text layout information (such as alignment, orientation and tab stops) and display manipulations (such as ellipsis insertion and national digit substitution).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the values of the specified source brick string format.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object whose values are used to initialize the item being created.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the values of the specified source brick string format. It also uses the specified text and line alignment settings.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object whose values are used to initialize the item being created.</param>
      <param name="alignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.</param>
      <param name="lineAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat,System.Drawing.StringFormatFlags)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the values of the specified source brick string format. It also uses the specified formatting settings.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object whose values are used to initialize the item being created.</param>
      <param name="options">A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(DevExpress.XtraPrinting.BrickStringFormat,System.Drawing.StringTrimming)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the values of the specified source brick string format. It also uses the specified trimming settings.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object whose values are used to initialize the item being created.</param>
      <param name="trimming">A <see cref="T:System.Drawing.StringTrimming"/> enumeration value representing the trimming mode. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified string alignment.</para>
      </summary>
      <param name="alignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified text and line alignment.</para>
      </summary>
      <param name="alignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.</param>
      <param name="lineAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringFormatFlags,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified text and line alignment, formatting settings, hotkey prefix and trimming mode.</para>
      </summary>
      <param name="alignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.</param>
      <param name="lineAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.</param>
      <param name="formatFlags">A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.</param>
      <param name="hotkeyPrefix">A <see cref="T:System.Drawing.Text.HotkeyPrefix"/> enumeration value representing the hotkey prefix. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.HotkeyPrefix"/> property.</param>
      <param name="trimming">A <see cref="T:System.Drawing.StringTrimming"/> enumeration value representing the trimming mode. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified source.</para>
      </summary>
      <param name="source">A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from which to initialize a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified formatting information.</para>
      </summary>
      <param name="options">A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value representing formatting information. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified formatting information, text and line alignment settings.</para>
      </summary>
      <param name="options">A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value representing formatting information. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.</param>
      <param name="alignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.</param>
      <param name="lineAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(System.Drawing.StringFormatFlags,System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringTrimming)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified settings.</para>
      </summary>
      <param name="options">A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.</param>
      <param name="alignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.</param>
      <param name="lineAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.</param>
      <param name="trimming">A <see cref="T:System.Drawing.StringTrimming"/> enumeration value. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming"/> property.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment">
      <summary>
        <para>Gets or sets text alignment information.</para>
      </summary>
      <value>A StringAlignment enumeration value that specifies text alignment information.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeAlignment(System.Drawing.StringAlignment)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object, with the new string alignment applied.</para>
      </summary>
      <param name="newAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value, representing new string alignment.</param>
      <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeAlignment(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object, with the new string and line alignment applied.</para>
      </summary>
      <param name="newAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value, representing new string alignment.</param>
      <param name="newLineAlignment">A <see cref="T:System.Drawing.StringAlignment"/> enumeration value, representing new line alignment.</param>
      <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeFormatFlags(System.Drawing.StringFormatFlags)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</para>
      </summary>
      <param name="options">A StringFormatFlags enumeration value containing formatting information.</param>
      <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeLineAlignment(System.Drawing.StringAlignment)">
      <summary>
        <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</para>
      </summary>
      <param name="newLineAlignment">A StringAlignment enumeration value representing line alignment.</param>
      <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Clone">
      <summary>
        <para>Creates an exact copy of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object created by this method.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Create(DevExpress.XtraPrinting.TextAlignment,System.Boolean)">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified settings.</para>
      </summary>
      <param name="textAlignment">A <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration value.</param>
      <param name="wordWrap">true to enable word-wrapping; otherwise, false.</param>
      <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance with the specified values.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Create(DevExpress.XtraPrinting.TextAlignment,System.Boolean,System.Drawing.StringTrimming)">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified settings.</para>
      </summary>
      <param name="textAlignment">A <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration value.</param>
      <param name="wordWrap">true to enable word-wrapping; otherwise, false.</param>
      <param name="trimming">A <see cref="T:System.Drawing.StringTrimming"/> enumeration value.</param>
      <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance with the specified values.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Create(DevExpress.XtraPrinting.TextAlignment,System.Boolean,System.Drawing.StringTrimming,System.Boolean)">
      <summary>
        <para>Creates a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance with the specified settings.</para>
      </summary>
      <param name="textAlignment">A <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration value.</param>
      <param name="wordWrap">true, to use the word wrap feature; otherwise false.</param>
      <param name="trimming">A <see cref="T:System.Drawing.StringTrimming"/> enumeration value.</param>
      <param name="rightToLeft">true, to use the right-to-left text orientation; otherwise false.</param>
      <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Create(DevExpress.XtraPrinting.TextAlignment,System.Drawing.StringFormatFlags,System.Drawing.StringTrimming)">
      <summary>
        <para>Creates a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class with the specified settings.</para>
      </summary>
      <param name="textAlignment">A <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration value.</param>
      <param name="formatFlags">A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value.</param>
      <param name="trimming">A <see cref="T:System.Drawing.StringTrimming"/> enumeration value.</param>
      <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance with the specified values.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Dispose">
      <summary>
        <para>Disposes of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance; otherwise false.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags">
      <summary>
        <para>Gets or sets a StringFormatFlags enumeration that contains formatting information.</para>
      </summary>
      <value>A StringFormatFlags enumeration that contains formatting information.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStringFormat.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.HotkeyPrefix">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Text.HotkeyPrefix"/> object for this <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.Text.HotkeyPrefix"/> enumeration value which represents the hotkey prefix for this <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment">
      <summary>
        <para>Gets or sets line alignment.</para>
      </summary>
      <value>A StringAlignment enumeration value that represents line alignment information.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.PrototypeKind">
      <summary>
        <para>Gets or sets a prototype string format for the current string format.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind"/> enumeration value which specifies the prototype string format.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.RightToLeft">
      <summary>
        <para>Gets a value indicating whether or not the right-to-left orientation is used.</para>
      </summary>
      <value>true, if the text orientation is right-to-left; otherwise false.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming">
      <summary>
        <para>Gets text trimming mode.</para>
      </summary>
      <value>A <see cref="T:System.Drawing.StringTrimming"/> enumeration value that specifies text trimming mode.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Value">
      <summary>
        <para>Gets the StringFormat instance representing current text formatting.</para>
      </summary>
      <value>Current text formatting.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStringFormat.WordWrap">
      <summary>
        <para>Gets a value, specifying whether or not word-wrapping is available for the brick&#39;s text.</para>
      </summary>
      <value>true if the word-wrapping is enabled; otherwise false.</value>
    </member>
    <member name="T:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind">
      <summary>
        <para>Specifies the prototype string format for the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.Default">
      <summary>
        <para>The current string format is based on the default string format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.GenericDefault">
      <summary>
        <para>The current string format is based on the generic default string format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind.GenericTypographic">
      <summary>
        <para>The current string format is based on the generic typographic string format.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.BrickStyle">
      <summary>
        <para>Represents a report drawing style.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(DevExpress.XtraPrinting.BorderSide,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,DevExpress.XtraPrinting.BrickStringFormat)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class with the specified settings.</para>
      </summary>
      <param name="sides">A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value, specifying the visible brick borders. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.Sides"/> property.</param>
      <param name="borderWidth">A <see cref="T:System.Single"/> value, specifying the border width. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth"/> property.</param>
      <param name="borderColor">A <see cref="T:System.Drawing.Color"/> structure, specifying the border color. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderColor"/> property.</param>
      <param name="backColor">A <see cref="T:System.Drawing.Color"/> structure, specifying the background color. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BackColor"/> property.</param>
      <param name="foreColor">A <see cref="T:System.Drawing.Color"/> structure, specifying the foreground color. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.ForeColor"/> property.</param>
      <param name="font">A <see cref="T:System.Drawing.Font"/> object, specifying the font settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.Font"/> property.</param>
      <param name="sf">A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object, specifying the text format. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStyle.StringFormat"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(DevExpress.XtraPrinting.BrickStyle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class and copies the settings from the object passed as the parameter.</para>
      </summary>
      <param name="src">A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object whose settings are used to initialize the created object&#39;s properties.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class with the specified dpi value.</para>
      </summary>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value for the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/>&#39;s padding.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.BackColor">
      <summary>
        <para>Gets or sets the background color.</para>
      </summary>
      <value>A Color representing the background color.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderColor">
      <summary>
        <para>Gets or sets the border color.</para>
      </summary>
      <value>A Color representing the border color.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderDashStyle">
      <summary>
        <para>Specifies the dash style for the brick&#39;s border.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.BorderDashStyle"/> enumeration value.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle">
      <summary>
        <para>Gets or sets the border style of a brick.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that represents the border style of a brick.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth">
      <summary>
        <para>Gets or sets the border width.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderWidthSerializable">
      <summary>
        <para>Gets or sets the string value used to support serialization of the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth"/> property.</para>
      </summary>
      <value>A <see cref="T:System.String"/> value.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ChangeAlignment(DevExpress.XtraPrinting.TextAlignment)">
      <summary>
        <para></para>
      </summary>
      <param name="alignment"></param>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.Clone">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.</para>
      </summary>
      <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.CreateDefault">
      <summary>
        <para>Creates the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance with the defaul settings.</para>
      </summary>
      <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object representing a new brick style.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.Default">
      <summary>
        <para>Gets the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object whose properties are set to their default values.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object representing a report drawing style.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.DefaultFont">
      <summary>
        <para>Gets the default font for a brick style.</para>
      </summary>
      <value>The default font for a brick style.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single)">
      <summary>
        <para>Deflates the specified rectangle by the specified width of the specified borders.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.</param>
      <param name="sides">One or more <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration values, specifying which sides of a brick have borders.</param>
      <param name="borderWidth">A <see cref="T:System.Single"/> value which specifies the width of borders.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single,DevExpress.XtraPrinting.BrickBorderStyle)">
      <summary>
        <para>Deflates the specified rectangle by the specified width of the specified borders using the specified border style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.</param>
      <param name="sides">One or more <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration values, specifying which sides of a brick have borders.</param>
      <param name="borderWidth">A <see cref="T:System.Single"/> value which specifies the width of borders.</param>
      <param name="borderStyle">A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that specifies the brick style.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single,System.Boolean)">
      <summary>
        <para>Deflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.</param>
      <param name="sides">One or more <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration values, specifying which sides of a brick have borders.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.</param>
      <param name="applyBorderStyle">true to apply the current border style; otherwise, false. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,System.Single)">
      <summary>
        <para>Deflates the specified rectangle by the width of borders represented by this brick style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(System.Drawing.RectangleF,System.Single,System.Boolean)">
      <summary>
        <para>Deflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.</param>
      <param name="applyBorderStyle">true to apply the current border style; otherwise, false. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.Dispose">
      <summary>
        <para>Disposes of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.Equals(System.Object)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance; otherwise false.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.Font">
      <summary>
        <para>Gets or sets the Font used to display text.</para>
      </summary>
      <value>The Font used to display text.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.ForeColor">
      <summary>
        <para>Gets or sets the foreground color.</para>
      </summary>
      <value>The foreground color.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>An integer value, specifying the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single)">
      <summary>
        <para>Inflates the specified rectangle by the specified width of specified borders.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.</param>
      <param name="sides">A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.</param>
      <param name="borderWidth">A <see cref="T:System.Single"/> value which specifies the width of borders.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,DevExpress.XtraPrinting.BorderSide,System.Single,DevExpress.XtraPrinting.BrickBorderStyle)">
      <summary>
        <para>Inflates the specified rectangle by the specified width of specified borders using the specified border style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.</param>
      <param name="sides">A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.</param>
      <param name="borderWidth">A <see cref="T:System.Single"/> value which specifies the width of borders.</param>
      <param name="borderStyle">A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that specifies the brick style.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,System.Single)">
      <summary>
        <para>Inflates the specified rectangle by the width of borders represented by this brick style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before inflating.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,System.Single,System.Boolean)">
      <summary>
        <para>Inflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before inflating.</param>
      <param name="applyBorderStyle">true to apply the current border style; otherwise, false. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(System.Drawing.RectangleF,System.Single,System.Boolean,DevExpress.XtraPrinting.BorderSide)">
      <summary>
        <para>For internal use.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value.</param>
      <param name="applyBorderStyle">A Boolean value.</param>
      <param name="sides">A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.IsJustified">
      <summary>
        <para>Specifies whether or not the brick&#39;s alignment is justified.</para>
      </summary>
      <value>true is the brick has a justified alignment; otherwise false.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.IsTransparent">
      <summary>
        <para>Gets a value indicating whether the brick style paints a transparent brick.</para>
      </summary>
      <value>true if the brick will be painted as transparent; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.IsValid">
      <summary>
        <para>Gets a value indicating whether the brick style is valid.</para>
      </summary>
      <value>true if the current brick style is valid; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.Padding">
      <summary>
        <para>Gets or sets the padding values of a brick.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object which contains the padding values of a brick.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBackColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BackColor"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorderColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BackColor"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorderDashStyle">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderDashStyle"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorders">
      <summary>
        <para>Resets all border settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetBorderWidth">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetFont">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.Font"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetForeColor">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.ForeColor"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetPadding">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.Padding"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.ResetTextAlignment">
      <summary>
        <para>Resets the <see cref="P:DevExpress.XtraPrinting.BrickStyle.TextAlignment"/> property value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.Scale(System.Single)">
      <summary>
        <para>Rescales the brick style to the specified ratio.</para>
      </summary>
      <param name="ratio">A <see cref="T:System.Single"/> value specifying the ratio to rescale the brick style.</param>
      <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object which represents the brick style with the scaling applied.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.BrickStyle.SetAlignment(DevExpress.Utils.HorzAlignment,DevExpress.Utils.VertAlignment)">
      <summary>
        <para>Sets the brick&#39;s alignment.</para>
      </summary>
      <param name="horzAlignment">A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value.</param>
      <param name="vertAlignment">A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.Sides">
      <summary>
        <para>Gets or sets a value defining which borders of the current brick are visible.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumerator value, defining visible brick borders.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.StringFormat">
      <summary>
        <para>Gets or sets a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance specifying text formatting and layout.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> specifying text formatting and layout.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.BrickStyle.TextAlignment">
      <summary>
        <para>Gets or sets the alignment of the text in the brick.</para>
      </summary>
      <value>One of the <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration&#39;s values that specifies how the text is aligned in the brick.</value>
    </member>
    <member name="T:DevExpress.XtraPrinting.ChangeEventArgs">
      <summary>
        <para>Provides data for the BeforeChange and AfterChange events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> class and sets its <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName"/> property to a specified value.</para>
      </summary>
      <param name="eventName">A <see cref="T:System.String"/> value, specifying the event name.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.Add(System.String,System.Object)">
      <summary>
        <para>Initializes a new instance of the DevExpress.XtraPrinting.ChangeEventArgs.EventInfo class with the specified name and value and adds it to the collection.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> specifying the event&#39;s name.</param>
      <param name="value">An <see cref="T:System.Object"/> specifying the value of the DevExpress.XtraPrinting.ChangeEventArgs.EventInfo object.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName">
      <summary>
        <para>Gets the event name that initiated a ChangeEvent.</para>
      </summary>
      <value>The event name that initiated a ChangeEvent.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.ValueOf(System.String)">
      <summary>
        <para>Returns an object, containing information about the event with the specified name.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> specifying the event name.</param>
      <returns>A DevExpress.XtraPrinting.ChangeEventArgs.EventInfo object with the specified name.</returns>
    </member>
    <member name="T:DevExpress.XtraPrinting.ChangeEventHandler">
      <summary>
        <para>A method that will handle the BeforeChange and AfterChange events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.</para>
      </summary>
      <param name="sender">The event source.</param>
      <param name="e">A <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> object that contains data related to the event.</param>
    </member>
    <member name="N:DevExpress.XtraPrinting.DataNodes">
      <summary>
        <para>Contains classes and interfaces that implement printing of visual data nodes.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.DataNodes.GroupUnion">
      <summary>
        <para>Specifies how groups of records should be split across pages, if required.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.None">
      <summary>
        <para>A group is printed so that it is split across several pages, if there isn&#39;t enough space on a page to print the entire group.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.WholePage">
      <summary>
        <para>A group is printed entirely on a single page (including its group header, rows and footer). This means that if there isn&#39;t enough space on a page to print the entire group, this group is printed on the following page.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.DataNodes.GroupUnion.WithFirstDetail">
      <summary>
        <para>A group is split across several pages &quot;as is&quot;. However, if there isn&#39;t enough space on a page to print a Group Header together with the following group row, they both are moved to the next page, so that a Group Header is never printed on a page alone (with no group rows below it).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.DataNodes.IRootDataNode">
      <summary>
        <para>For internal use. Exposes the printable content of a control to the DXPrinting engine.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.DataNodes.IRootDataNode.GetTotalDetailCount">
      <summary>
        <para>If implemented by a class, returns the total number of detail rows.</para>
      </summary>
      <returns>An integer value specifying the total detail count.</returns>
    </member>
    <member name="T:DevExpress.XtraPrinting.ExportTarget">
      <summary>
        <para>Lists the available export formats.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Csv">
      <summary>
        <para>The document is exported in the CSV format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Docx">
      <summary>
        <para>The document is exported in the DOCX format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Html">
      <summary>
        <para>The document is exported in the HTML format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Image">
      <summary>
        <para>The document is exported in an image format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Mht">
      <summary>
        <para>The document is exported in the MHT format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Pdf">
      <summary>
        <para>The document is exported in the PDF format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Rtf">
      <summary>
        <para>The document is exported in the RTF format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Text">
      <summary>
        <para>The document is exported in the text format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Xls">
      <summary>
        <para>The document is exported in the XLS format.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ExportTarget.Xlsx">
      <summary>
        <para>The document is exported in the XLSX format.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.GraphicsDpi">
      <summary>
        <para>Enables you to calculate the DPI values associated with specific units of measure (and vice versa).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.GraphicsDpi"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.DeviceIndependentPixel">
      <summary>
        <para>96f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Display">
      <summary>
        <para>75f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Document">
      <summary>
        <para>300f</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.DpiToUnit(System.Single)">
      <summary>
        <para>Converts the specified DPI value to a corresponding unit of measure.</para>
      </summary>
      <param name="dpi">A <see cref="T:System.Single"/> value.</param>
      <returns>A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.</returns>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.EMU">
      <summary>
        <para>914400f</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.GetGraphicsDpi(System.Drawing.Graphics)">
      <summary>
        <para>Gets the DPI value corresponding to the unit of measure of the specified Graphics object.</para>
      </summary>
      <param name="gr">A <see cref="T:System.Drawing.Graphics"/> object.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.GetSafeResolution(System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="resolution"></param>
      <returns></returns>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.HundredthsOfAnInch">
      <summary>
        <para>100f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Inch">
      <summary>
        <para>1f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Millimeter">
      <summary>
        <para>25.4f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Pixel">
      <summary>
        <para>96f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Point">
      <summary>
        <para>72f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.TenthsOfAMillimeter">
      <summary>
        <para>254f</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XtraPrinting.GraphicsDpi.Twips">
      <summary>
        <para>1440f</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.UnitToDpi(System.Drawing.GraphicsUnit)">
      <summary>
        <para>Converts the specified unit of measure to a corresponding DPI value.</para>
      </summary>
      <param name="unit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.UnitToDpiI(System.Drawing.GraphicsUnit)">
      <summary>
        <para>Converts the specified unit of measure to a corresponding DPI value.</para>
      </summary>
      <param name="unit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsDpi.UnitToString(System.Drawing.GraphicsUnit)">
      <summary>
        <para>Returns a string value, identifying the specified unit of measure.</para>
      </summary>
      <param name="unit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value.</param>
      <returns>A <see cref="T:System.String"/> value.</returns>
    </member>
    <member name="T:DevExpress.XtraPrinting.GraphicsUnitConverter">
      <summary>
        <para>Enables you to convert values that are calculated in some measure units to different measure units.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.GraphicsUnitConverter"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Drawing.MarginsFloat,System.Single,System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="val"></param>
      <param name="fromDpi"></param>
      <param name="toDpi"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.MarginsF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the document margins calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A DevExpress.XtraPrinting.Native.MarginsF object.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A DevExpress.XtraPrinting.Native.MarginsF object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.MarginsF,System.Single,System.Single)">
      <summary>
        <para>Adjusts the document margins calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A DevExpress.XtraPrinting.Native.MarginsF object.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A DevExpress.XtraPrinting.Native.MarginsF object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.RectangleDF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the location and size of a rectangle calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A DevExpress.XtraPrinting.Native.RectangleDF structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A DevExpress.XtraPrinting.Native.RectangleDF structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(DevExpress.XtraPrinting.Native.RectangleDF,System.Single,System.Single)">
      <summary>
        <para>Adjusts the location and size of a rectangle calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A DevExpress.XtraPrinting.Native.RectangleDF structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A DevExpress.XtraPrinting.Native.RectangleDF structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Point,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the coordinates of a point calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Point"/> structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Drawing.Point"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Point,System.Single,System.Single)">
      <summary>
        <para>Adjusts the coordinates of a point calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Point"/> structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.Point"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.PointF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the coordinates of a point calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.PointF"/> structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Drawing.PointF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.PointF,System.Single,System.Single)">
      <summary>
        <para>Adjusts the coordinates of a point calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.PointF"/> structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.PointF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Printing.Margins,System.Single,System.Single)">
      <summary>
        <para>Adjusts the document margins calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Printing.Margins"/> object.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.Printing.Margins"/> object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the location and size of a rectangle calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Rectangle"/> structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Adjusts the location and size of a rectangle calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Rectangle"/> structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the location and size of a rectangle calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Adjusts the location and size of a rectangle calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Size,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the size calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Size"/> structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.Size,System.Single,System.Single)">
      <summary>
        <para>Adjusts the size calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.Size"/> structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.Size"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.SizeF,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the size calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.SizeF"/> structure.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Drawing.SizeF,System.Single,System.Single)">
      <summary>
        <para>Adjusts the size calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.SizeF"/> structure.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Int32,System.Single,System.Single)">
      <summary>
        <para>Adjusts the integer value calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">An integer value.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>An integer value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Single,System.Drawing.GraphicsUnit,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Adjusts the floating-point value calculated for the specified unit of measure according to a new unit of measure.</para>
      </summary>
      <param name="val">A <see cref="T:System.Single"/> value.</param>
      <param name="fromUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the initial unit of measure.</param>
      <param name="toUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> enumeration value, specifying the required unit of measure.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Convert(System.Single,System.Single,System.Single)">
      <summary>
        <para>Adjusts the floating-point value calculated for the specified DPI according to a new DPI.</para>
      </summary>
      <param name="val">A <see cref="T:System.Single"/> value.</param>
      <param name="fromDpi">A <see cref="T:System.Single"/> value, specifying the initial DPI setting.</param>
      <param name="toDpi">A <see cref="T:System.Single"/> value, specifying the required DPI setting.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DipToDoc(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the location and size of a rectangle calculated in device-independent pixels (DIP) to a value calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DipToDoc(System.Drawing.SizeF)">
      <summary>
        <para>Converts the size calculated in device-independent pixels (DIP) to a size calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="size">A <see cref="T:System.Drawing.SizeF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DipToDoc(System.Single)">
      <summary>
        <para>Converts the floating-point value calculated in device-independent pixels (DIP) to a value calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="val">A <see cref="T:System.Single"/> value.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToDip(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the location and size of a rectangle calculated in document units (measured in 1/300 of an inch) to a value calculated in device-independent pixels (DIP).</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToDip(System.Single)">
      <summary>
        <para>Converts the floating-point value calculated in document units (measured in 1/300 of an inch) to a value calculated in device-independent pixels (DIP).</para>
      </summary>
      <param name="val">A <see cref="T:System.Single"/> value.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(DevExpress.XtraPrinting.Native.MarginsF)">
      <summary>
        <para>Converts the document margins calculated in document units (measured in 1/300 of an inch) to a value calculated in pixels.</para>
      </summary>
      <param name="val">A DevExpress.XtraPrinting.Native.MarginsF object.</param>
      <returns>A DevExpress.XtraPrinting.Native.MarginsF object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Drawing.PointF)">
      <summary>
        <para>Converts the coordinates of a point calculated in document units (measured in 1/300 of an inch) to a value calculated in pixels.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.PointF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.PointF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the location and size of a rectangle calculated in document units (measured in 1/300 of an inch) to a value calculated in pixels.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Drawing.SizeF)">
      <summary>
        <para>Converts the size calculated in document units (measured in 1/300 of an inch) to a size calculated in pixels.</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.SizeF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.DocToPixel(System.Single)">
      <summary>
        <para>Converts the floating-point value calculated in document units (measured in 1/300 of an inch) to a value calculated in pixels.</para>
      </summary>
      <param name="val">A <see cref="T:System.Single"/> value.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Drawing.PointF)">
      <summary>
        <para>Converts the coordinates of a point calculated in pixels to a value calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.PointF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.PointF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the location and size of a rectangle calculated in pixels to a value calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Drawing.SizeF)">
      <summary>
        <para>Converts the size calculated in pixels to a size calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="val">A <see cref="T:System.Drawing.SizeF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.PixelToDoc(System.Single)">
      <summary>
        <para>Converts the floating-point value calculated in pixels to a value calculated in document units (measured in 1/300 of an inch).</para>
      </summary>
      <param name="val">A <see cref="T:System.Single"/> value.</param>
      <returns>A <see cref="T:System.Single"/> value.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Round(System.Drawing.PointF)">
      <summary>
        <para>Adjusts the floating-point coordinates of a point to the nearest integer values.</para>
      </summary>
      <param name="point">A <see cref="T:System.Drawing.PointF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.Point"/> structure.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.GraphicsUnitConverter.Round(System.Drawing.RectangleF)">
      <summary>
        <para>Adjusts the floating-point dimensions of a rectangle to the nearest integer values.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> structure.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.</returns>
    </member>
    <member name="T:DevExpress.XtraPrinting.HorizontalContentSplitting">
      <summary>
        <para>Lists the available horizontal content splitting modes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.HorizontalContentSplitting.Exact">
      <summary>
        <para>When the brick dimensions do not fit into the bottom page margin, the rest of the brick content is split across two pages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.HorizontalContentSplitting.Smart">
      <summary>
        <para>When the brick dimensions do not fit into the bottom page margin, the brick content is moved to a new page in its entirety.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.IBasePrintable">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBasePrintable.CreateArea(System.String,DevExpress.XtraPrinting.IBrickGraphics)">
      <summary>
        <para>When implemented by a class, creates report elements (bricks) for a specific area.</para>
      </summary>
      <param name="areaName">The name of the report area (section) for which elements should be created.</param>
      <param name="graph">An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrickGraphics"/> interface, which is a graphical surface on which report elements will be drawn.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBasePrintable.Finalize(DevExpress.XtraPrinting.IPrintingSystem,DevExpress.XtraPrinting.ILink)">
      <summary>
        <para>If implemented by a class, finalizes the printing of the report.</para>
      </summary>
      <param name="ps">An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.</param>
      <param name="link">An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface, which refers to a control.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBasePrintable.Initialize(DevExpress.XtraPrinting.IPrintingSystem,DevExpress.XtraPrinting.ILink)">
      <summary>
        <para>When implemented by a class, initializes a control for report creation.</para>
      </summary>
      <param name="ps">An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.</param>
      <param name="link">An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface which refers to a control.</param>
    </member>
    <member name="T:DevExpress.XtraPrinting.IBrick">
      <summary>
        <para>Provides the basic functionality to draw visual bricks and specify their properties.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBrick.GetProperties">
      <summary>
        <para>Obtains the Hashtable collection of properties for the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.</para>
      </summary>
      <returns>A Hashtable object that contains properties of the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(System.Collections.Hashtable)">
      <summary>
        <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface
based on the specified Hashtable object.</para>
      </summary>
      <param name="properties">Identifies the Hashtable collection of property names and values that must be set.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(System.Object[0:,0:])">
      <summary>
        <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface based on the specified properties array.</para>
      </summary>
      <param name="properties">A two-dimesional array that identifies property names and values to set.</param>
    </member>
    <member name="T:DevExpress.XtraPrinting.IBrickGraphics">
      <summary>
        <para>Provides basic report drawing functions.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraPrinting.IBrickGraphics.DefaultBrickStyle">
      <summary>
        <para>If implemented by a class, gets and sets the default style for bricks.</para>
      </summary>
      <value>The default style for bricks.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBrickGraphics.DrawBrick(DevExpress.XtraPrinting.IBrick,System.Drawing.RectangleF)">
      <summary>
        <para>If implemented by a class, adds a brick to a report.</para>
      </summary>
      <param name="brick">The brick to be added to a report.</param>
      <param name="rect">A RectangleF structure that specifies the location and size of the current brick.</param>
      <returns>The brick added to a report.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IBrickGraphics.RaiseModifierChanged">
      <summary>
        <para>If implemented by a class, raises the ModifierChanged event.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.ILink">
      <summary>
        <para>Provides the basic functionality to create documents that are ready to print.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.ILink.CreateDocument">
      <summary>
        <para>If implemented by a class, initiates report generation.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.ILink.CreateDocument(System.Boolean)">
      <summary>
        <para>If implemented by a class, creates a document from the link, so the document can be displayed or printed.</para>
      </summary>
      <param name="buildForInstantPreview">A Boolean value. This value is ignored and has no effect on the document creation process.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.ILink.PrintingSystem">
      <summary>
        <para>Provides access to a link&#39;s printing system.</para>
      </summary>
      <value>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.</value>
    </member>
    <member name="T:DevExpress.XtraPrinting.ImageAlignment">
      <summary>
        <para>Specifies the alignment of a displayed image in relation to the container control&#39;s boundaries.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.BottomCenter">
      <summary>
        <para>An image is aligned to the bottom side of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.BottomLeft">
      <summary>
        <para>An image is aligned to the bottom left corner of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.BottomRight">
      <summary>
        <para>An image is aligned to the bottom right corner of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.Default">
      <summary>
        <para>The default image alignment is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.MiddleCenter">
      <summary>
        <para>An image is aligned to the middle of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.MiddleLeft">
      <summary>
        <para>An image is aligned to the left side of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.MiddleRight">
      <summary>
        <para>An image is aligned to the right side of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.TopCenter">
      <summary>
        <para>An image is aligned to the top side of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.TopLeft">
      <summary>
        <para>An image is aligned to the top left corner of a control.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageAlignment.TopRight">
      <summary>
        <para>An image is aligned to the top right corner of a control.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.ImageSizeMode">
      <summary>
        <para>Specifies how an image is positioned within a Picture Box.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.AutoSize">
      <summary>
        <para>The Picture Box size is adjusted to that of the image it contains.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.CenterImage">
      <summary>
        <para>This option is obsolete. To achieve the same result, set the <see cref="P:DevExpress.XtraReports.UI.XRPictureBox.Sizing"/> property of a Picture Box to <see cref="F:DevExpress.XtraPrinting.ImageSizeMode.Normal"/> and the <see cref="P:DevExpress.XtraReports.UI.XRPictureBox.ImageAlignment"/> property to <see cref="F:DevExpress.XtraPrinting.ImageAlignment.MiddleCenter"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Normal">
      <summary>
        <para>The image is placed in the upper-left corner of the Picture Box. The image is clipped if it does not fit into the control&#39;s bounds.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Squeeze">
      <summary>
        <para>If the Picture Box dimensions exceed that of the image it contains, the image is centered and shown full-size. Otherwise, the image is resized to fit into the control&#39;s dimensions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.StretchImage">
      <summary>
        <para>The image is stretched or shrunk to fit into the current Picture Box dimensions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Tile">
      <summary>
        <para>The image is replicated within the Picture Box starting from the upper-left corner. The image is clipped if it does not fit into the control&#39;s dimensions.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.ImageSizeMode.ZoomImage">
      <summary>
        <para>The image is sized proportionally (without clipping), so that it fits best within the Picture Box dimensions. If the height-to-width ratio of the control and the image are equal, the image will be resized to exactly fit into the control&#39;s dimensions. 
Otherwise, the closest matching image side (height or width) will be sized to the control, and the other side will be sized proportionally (possibly leaving empty space within the control).</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.IPrintable">
      <summary>
        <para>Defines methods to print different controls using the XtraPrinting Library.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.AcceptChanges">
      <summary>
        <para>If implemented by a class, applies all changes made by the Property editor when implemented by a class.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraPrinting.IPrintable.CreatesIntersectedBricks">
      <summary>
        <para>If implemented by a class, determines whether the created print document contains intersected bricks.</para>
      </summary>
      <value>true if the class creates intersected bricks; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.HasPropertyEditor">
      <summary>
        <para>If implemented by a class, determines whether the class provides the Property editor form.</para>
      </summary>
      <returns>true, if the class provides the Property editor; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.IPrintable.PropertyEditorControl">
      <summary>
        <para>If implemented by a class, returns a form which allows a user to set printing properties when implemented by a class.</para>
      </summary>
      <value>The Property editor form that allows customizing printing properties of a control.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.RejectChanges">
      <summary>
        <para>If implemented by a class, cancels changes made by a user in the Property editor when implemented by a class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.ShowHelp">
      <summary>
        <para>If implemented by a class, invokes the help system for the Property editor when implemented by a class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintable.SupportsHelp">
      <summary>
        <para>If implemented by a class, determines whether the help system is available for the Property editor when implemented by a class .</para>
      </summary>
      <returns>true if the help system is available for the Property editor; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.XtraPrinting.IPrintingSystem">
      <summary>
        <para>Provides the base functionality of the XtraPrinting Library.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange">
      <summary>
        <para>Occurs after certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object have been changed.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraPrinting.IPrintingSystem.AutoFitToPagesWidth">
      <summary>
        <para>For internal use. If implemented by a class, gets or sets the number of virtual pages which should be placed on one physical page, so their total width is the same as the width of a physical page.</para>
      </summary>
      <value>An integer value which represents the number of pages.</value>
    </member>
    <member name="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange">
      <summary>
        <para>Occurs before certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object are changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateBrick(System.String)">
      <summary>
        <para>If implemented by a class, creates a brick by its type name.</para>
      </summary>
      <param name="typeName">A <see cref="T:System.String"/> specifying the type name of the brick to be created.</param>
      <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateImageBrick">
      <summary>
        <para>If implemented by a class, creates an image brick.</para>
      </summary>
      <returns>An object implementing the DevExpress.XtraPrinting.IImageBrick interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreatePanelBrick">
      <summary>
        <para>If implemented by a class, creates a panel brick.</para>
      </summary>
      <returns>An object implementing the DevExpress.XtraPrinting.IPanelBrick interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateProgressBarBrick">
      <summary>
        <para>If implemented by a class, creates a progress bar brick.</para>
      </summary>
      <returns>An object implementing the DevExpress.XtraPrinting.IPanelBrick interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateRichTextBrick">
      <summary>
        <para>If implemented by a class, creates a rich text brick.</para>
      </summary>
      <returns>An object implementing the DevExpress.XtraPrinting.IRichTextBrick interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateTextBrick">
      <summary>
        <para>If implemented by a class, creates a text brick.</para>
      </summary>
      <returns>An object implementing the DevExpress.XtraPrinting.IPanelBrick interface.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateTrackBarBrick">
      <summary>
        <para>For internal use.</para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.IPrintingSystem.Images">
      <summary>
        <para>For internal use. If implemented by a class, contains a collection of images to be cached when creating a document.</para>
      </summary>
      <value>A DevExpress.XtraPrinting.Native.ImagesContainer object.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.InsertPageBreak(System.Single)">
      <summary>
        <para>If implemented by a class, inserts a page break at a specified position.</para>
      </summary>
      <param name="pos">A <see cref="T:System.Single"/> value which specifies the position to insert a page break.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.IPrintingSystem.SetCommandVisibility(DevExpress.XtraPrinting.PrintingSystemCommand,System.Boolean)">
      <summary>
        <para>If implemented by a class, changes the visibility of the specified printing system command.</para>
      </summary>
      <param name="command">A <see cref="T:DevExpress.XtraPrinting.PrintingSystemCommand"/> object specifying the command whose visibility needs to be changed.</param>
      <param name="visible">One of the <see cref="T:DevExpress.XtraPrinting.CommandVisibility"/> enumeration values specifying a new visibility state for the command.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.IPrintingSystem.Version">
      <summary>
        <para>Identifies the XtraPrinting Library version.</para>
      </summary>
      <value>A text string representing XtraPrinting Library&#39;s version info.</value>
    </member>
    <member name="N:DevExpress.XtraPrinting.Localization">
      <summary>
        <para>Contains classes and enumerations that are intended to localize the User Interface of the XtraPrinting Library.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.Localization.PreviewLocalizer">
      <summary>
        <para>A base class that provides necessary functionality for custom localizers of the Printing-Exporting Library.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.Localization.PreviewLocalizer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraPrinting.Localization.PreviewLocalizer.Active">
      <summary>
        <para>Specifies a localizer object providing localization of the XtraPrinting Library interface at runtime.</para>
      </summary>
      <value>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> descendant, used to localize the user interface at runtime.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.CreateDefaultLocalizer">
      <summary>
        <para>Returns a Localizer object storing resources based on the thread&#39;s language and regional settings (culture).</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object, storing resources based on the thread&#39;s language and regional settings (culture).</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.CreateResXLocalizer">
      <summary>
        <para>For internal use. Returns a Localizer object storing resources based on the thread&#39;s language and regional settings (culture).</para>
      </summary>
      <returns>An <see cref="T:DevExpress.Utils.Localization.XtraLocalizer`1"/> object, storing resources based on the thread&#39;s language and regional settings (culture).</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.Localization.PreviewLocalizer.GetString(DevExpress.XtraPrinting.Localization.PreviewStringId)">
      <summary>
        <para>Returns a localized string for the given string identifier.</para>
      </summary>
      <param name="id">A <see cref="T:DevExpress.XtraPrinting.Localization.PreviewStringId"/> enumeration value, identifying the string to localize.</param>
      <returns>A <see cref="T:System.String"/> value, corresponding to the specified identifier.</returns>
    </member>
    <member name="T:DevExpress.XtraPrinting.Localization.PreviewResLocalizer">
      <summary>
        <para>A default localizer to translate the XtraPrinting&#39;s resources.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.Localization.PreviewResLocalizer.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.Localization.PreviewResLocalizer"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.Localization.PreviewStringId">
      <summary>
        <para>Contains values corresponding to strings that can be localized for the print preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.BarText_MainMenu">
      <summary>
        <para>&quot;Main Menu&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.BarText_StatusBar">
      <summary>
        <para>&quot;Status Bar&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.BarText_Toolbar">
      <summary>
        <para>&quot;Toolbar&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Button_Apply">
      <summary>
        <para>&quot;Apply&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Button_Cancel">
      <summary>
        <para>&quot;Cancel&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Button_Help">
      <summary>
        <para>&quot;Help&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Button_Ok">
      <summary>
        <para>&quot;OK&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_CurrentMonth">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_CurrentQuarter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_CurrentWeek">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_CurrentYear">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_Last7Days">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_LastMonth">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_LastWeek">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_LastYear">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_PreviousQuarter">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_Today">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.DateRangeParameterEditor_Yesterday">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditorCategories_DateTime">
      <summary>
        <para>&quot;Date-Time&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditorCategories_Letters">
      <summary>
        <para>&quot;Letters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditorCategories_Numeric">
      <summary>
        <para>&quot;Numeric&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_Date">
      <summary>
        <para>&quot;Date&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_FixedPoint">
      <summary>
        <para>&quot;Fixed-Point&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_FixedPointPositive">
      <summary>
        <para>&quot;Fixed-Point Positive&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_Image">
      <summary>
        <para>&quot;Image&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_ImageAndSignature">
      <summary>
        <para>&quot;Image and Signature&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_Integer">
      <summary>
        <para>&quot;Integer&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_IntegerPositive">
      <summary>
        <para>&quot;Integer Positive&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_OnlyLatinLetters">
      <summary>
        <para>&quot;Only Latin Letters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_OnlyLetters">
      <summary>
        <para>&quot;Only Letters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_OnlyLowercaseLetters">
      <summary>
        <para>&quot;Only Lowercase Letters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_OnlyUppercaseLetters">
      <summary>
        <para>&quot;Only Uppercase Letters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EditingFieldEditors_Signature">
      <summary>
        <para>&quot;Signature&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.EMail_From">
      <summary>
        <para>&quot;From&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmationDoesNotMatchForm_Msg">
      <summary>
        <para>&quot;Confirmation password does not match. Please start over and enter the password again.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmOpenPasswordForm_Caption">
      <summary>
        <para>&quot;Confirm Document Open Password&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmOpenPasswordForm_Name">
      <summary>
        <para>&quot;Document Open Pa&#38;ssword:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmOpenPasswordForm_Note">
      <summary>
        <para>&quot;Please confirm the Document Open Password. Be sure to make a note of the password. It will be required to open the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmPermissionsPasswordForm_Caption">
      <summary>
        <para>&quot;Confirm Permissions Password&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmPermissionsPasswordForm_Name">
      <summary>
        <para>&quot;&#38;Permissions Password:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ConfirmPermissionsPasswordForm_Note">
      <summary>
        <para>&quot;Please confirm the Permissions Password. Be sure to make a note of the password. You will need it to change these settings in the future.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_CsvSeparator_UsingSystem">
      <summary>
        <para>&quot;(Using System Separator)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxExportMode">
      <summary>
        <para>&quot;Export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxExportMode_SingleFile">
      <summary>
        <para>&quot;Single file&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxExportMode_SingleFilePageByPage">
      <summary>
        <para>&quot;Single file page-by-page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxExportWatermarks">
      <summary>
        <para>&quot;Export watermarks&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxKeepRowHeight">
      <summary>
        <para>&quot;Keep row height&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_DocxTableLayout">
      <summary>
        <para>&quot;Table layout&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlCharacterSet">
      <summary>
        <para>&quot;Character set:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlEmbedImagesInHTML">
      <summary>
        <para>&quot;Embed images in HTML&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlExportMode">
      <summary>
        <para>&quot;Export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlExportMode_DifferentFiles">
      <summary>
        <para>&quot;Different files&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlExportMode_SingleFile">
      <summary>
        <para>&quot;Single file&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlExportMode_SingleFilePageByPage">
      <summary>
        <para>&quot;Single file page-by-page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlExportWatermarks">
      <summary>
        <para>&quot;Export watermarks&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlPageBorderColor">
      <summary>
        <para>&quot;Page border color:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlPageBorderWidth">
      <summary>
        <para>&quot;Page border width:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlRemoveSecondarySymbols">
      <summary>
        <para>&quot;Remove carriage returns&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlTableLayout">
      <summary>
        <para>&quot;Table layout&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_HtmlTitle">
      <summary>
        <para>&quot;Title:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImageExportMode">
      <summary>
        <para>&quot;Export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImageExportMode_DifferentFiles">
      <summary>
        <para>&quot;Different files&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImageExportMode_SingleFile">
      <summary>
        <para>&quot;Single file&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImageExportMode_SingleFilePageByPage">
      <summary>
        <para>&quot;Single file page-by-page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImageFormat">
      <summary>
        <para>&quot;Image format:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImagePageBorderColor">
      <summary>
        <para>&quot;Page border color:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImagePageBorderWidth">
      <summary>
        <para>&quot;Page border width:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImagePageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_ImageResolution">
      <summary>
        <para>&quot;Resolution (dpi):&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_NativeFormatCompressed">
      <summary>
        <para>&quot;Compressed&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfACompatibility">
      <summary>
        <para>&quot;PDF/A Compatibility:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfACompatibility_None">
      <summary>
        <para>&quot;None&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfACompatibility_PdfA1b">
      <summary>
        <para>&quot;PDF/A-1b&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfACompatibility_PdfA2b">
      <summary>
        <para>&quot;PDF/A-2b&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfACompatibility_PdfA3b">
      <summary>
        <para>&quot;PDF/A-3b&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfChangingPermissions_AnyExceptExtractingPages">
      <summary>
        <para>&quot;Any except extracting pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfChangingPermissions_CommentingFillingSigning">
      <summary>
        <para>&quot;Commenting, filling in form fields, and signing existing signature fields&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfChangingPermissions_FillingSigning">
      <summary>
        <para>&quot;Filling in form fields and signing existing signature fields&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfChangingPermissions_InsertingDeletingRotating">
      <summary>
        <para>&quot;Inserting, deleting and rotating pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfChangingPermissions_None">
      <summary>
        <para>&quot;None&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfConvertImagesToJpeg">
      <summary>
        <para>&quot;Convert Images to Jpeg&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfDocumentApplication">
      <summary>
        <para>&quot;Application:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfDocumentAuthor">
      <summary>
        <para>&quot;Author:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfDocumentKeywords">
      <summary>
        <para>&quot;Keywords:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfDocumentSubject">
      <summary>
        <para>&quot;Subject:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfDocumentTitle">
      <summary>
        <para>&quot;Title:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfExportEditingFieldsToAcroForms">
      <summary>
        <para>&quot;Export editing fields to AcroForms&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfImageQuality">
      <summary>
        <para>&quot;Images quality:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfImageQuality_High">
      <summary>
        <para>&quot;High&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfImageQuality_Highest">
      <summary>
        <para>&quot;Highest&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfImageQuality_Low">
      <summary>
        <para>&quot;Low&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfImageQuality_Lowest">
      <summary>
        <para>&quot;Lowest&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfImageQuality_Medium">
      <summary>
        <para>&quot;Medium&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfNeverEmbeddedFonts">
      <summary>
        <para>&quot;Don&#39;t embed these fonts:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPasswordSecurityOptions">
      <summary>
        <para>&quot;Password Security:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPasswordSecurityOptions_DocumentOpenPassword">
      <summary>
        <para>&quot;Document Open Password&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPasswordSecurityOptions_None">
      <summary>
        <para>&quot;(none)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPasswordSecurityOptions_Permissions">
      <summary>
        <para>&quot;Permissions&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPrintingPermissions_HighResolution">
      <summary>
        <para>&quot;High Resolution&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPrintingPermissions_LowResolution">
      <summary>
        <para>&quot;Low Resolution (150 dpi)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfPrintingPermissions_None">
      <summary>
        <para>&quot;None&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfShowPrintDialogOnOpen">
      <summary>
        <para>&quot;Show print dialog on open&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignature_EmptyCertificate">
      <summary>
        <para>&quot;None&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignature_Issuer">
      <summary>
        <para>&quot;Issuer:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignature_ValidRange">
      <summary>
        <para>&quot;Valid From: {0:d} to {1:d}&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignatureOptions">
      <summary>
        <para>&quot;Digital Signature:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignatureOptions_Certificate">
      <summary>
        <para>&quot;Certificate&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignatureOptions_ContactInfo">
      <summary>
        <para>&quot;Contact Info&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignatureOptions_Location">
      <summary>
        <para>&quot;Location&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignatureOptions_None">
      <summary>
        <para>&quot;(none)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_PdfSignatureOptions_Reason">
      <summary>
        <para>&quot;Reason&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_RtfExportMode">
      <summary>
        <para>&quot;Export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_RtfExportMode_SingleFile">
      <summary>
        <para>&quot;Single file&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_RtfExportMode_SingleFilePageByPage">
      <summary>
        <para>&quot;Single file page-by-page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_RtfExportWatermarks">
      <summary>
        <para>&quot;Export watermarks&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_RtfPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextEncoding">
      <summary>
        <para>&quot;Encoding:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextExportMode">
      <summary>
        <para>&quot;Text export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextExportMode_Text">
      <summary>
        <para>&quot;Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextExportMode_Value">
      <summary>
        <para>&quot;Value&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextQuoteStringsWithSeparators">
      <summary>
        <para>&quot;Quote strings with separators&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextSeparator">
      <summary>
        <para>&quot;Text separator:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_TextSeparator_TabAlias">
      <summary>
        <para>&quot;TAB&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsExportHyperlinks">
      <summary>
        <para>&quot;Export hyperlinks&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsExportMode">
      <summary>
        <para>&quot;Export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsExportMode_DifferentFiles">
      <summary>
        <para>&quot;Different files&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsExportMode_SingleFile">
      <summary>
        <para>&quot;Single file&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsExportMode_SingleFilePageByPage">
      <summary>
        <para>&quot;Single file page-by-page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsRawDataMode">
      <summary>
        <para>&quot;Raw data mode&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsSheetName">
      <summary>
        <para>&quot;Sheet name:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsShowGridLines">
      <summary>
        <para>&quot;Show grid lines&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsxExportMode">
      <summary>
        <para>&quot;Export mode:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsxExportMode_DifferentFiles">
      <summary>
        <para>&quot;Different files&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsxExportMode_SingleFile">
      <summary>
        <para>&quot;Single file&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsxExportMode_SingleFilePageByPage">
      <summary>
        <para>&quot;Single file page-by-page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XlsxPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsCompression">
      <summary>
        <para>&quot;Compression:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsCompression_Fast">
      <summary>
        <para>&quot;Fast&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsCompression_Maximum">
      <summary>
        <para>&quot;Maximum&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsCompression_Normal">
      <summary>
        <para>&quot;Normal&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsCompression_NotCompressed">
      <summary>
        <para>&quot;Not compressed&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsCompression_SuperFast">
      <summary>
        <para>&quot;Super fast&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentCategory">
      <summary>
        <para>&quot;Category:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentCreator">
      <summary>
        <para>&quot;Creator:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentDescription">
      <summary>
        <para>&quot;Description:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentKeywords">
      <summary>
        <para>&quot;Keywords:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentSubject">
      <summary>
        <para>&quot;Subject:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentTitle">
      <summary>
        <para>&quot;Title:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsDocumentVersion">
      <summary>
        <para>&quot;Version:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOption_XpsPageRange">
      <summary>
        <para>&quot;Page range:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionCsv">
      <summary>
        <para>&quot;CSV Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionDocx">
      <summary>
        <para>&quot;DOCX Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionHtml">
      <summary>
        <para>&quot;HTML Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionImage">
      <summary>
        <para>&quot;Image Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionMht">
      <summary>
        <para>&quot;MHT Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionNativeOptions">
      <summary>
        <para>&quot;Native Format Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionPdf">
      <summary>
        <para>&quot;PDF Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionRtf">
      <summary>
        <para>&quot;RTF Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionTxt">
      <summary>
        <para>&quot;Text Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionXls">
      <summary>
        <para>&quot;XLS Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionXlsx">
      <summary>
        <para>&quot;XLSX Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ExportOptionsForm_CaptionXps">
      <summary>
        <para>&quot;XPS Export Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.FolderBrowseDlg_ExportDirectory">
      <summary>
        <para>&quot;Select a folder to save the exported document to:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_Alignment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_BrushColor">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_BrushOptions">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_BrushSize">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_ChooseImage">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_Clear">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_LoadImage">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_Reset">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_SizeMode">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ImageEditingFieldEditor_SizeModeAndAlignment">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_BottomMargin">
      <summary>
        <para>&quot;Bottom Margin&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_Inch">
      <summary>
        <para>&quot;Inch&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_LeftMargin">
      <summary>
        <para>&quot;Left Margin&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_Millimeter">
      <summary>
        <para>&quot;mm&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_Pixel">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_RightMargin">
      <summary>
        <para>&quot;&quot;Right Margin&quot;&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Margin_TopMargin">
      <summary>
        <para>&quot;Top Margin&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_BackgrColor">
      <summary>
        <para>&quot;&#38;Color...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Background">
      <summary>
        <para>&quot;&#38;Background&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Copy">
      <summary>
        <para>&quot;Copy&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_CsvDocument">
      <summary>
        <para>&quot;CSV File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_DocxDocument">
      <summary>
        <para>&quot;DOCX File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Exit">
      <summary>
        <para>&quot;E&#38;xit&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Export">
      <summary>
        <para>&quot;&#38;Export To&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_File">
      <summary>
        <para>&quot;&#38;File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_GraphicDocument">
      <summary>
        <para>&quot;Image File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_HtmDocument">
      <summary>
        <para>&quot;HTML File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_MhtDocument">
      <summary>
        <para>&quot;MHT File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_PageLayout">
      <summary>
        <para>&quot;&#38;Page Layout&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_PageSetup">
      <summary>
        <para>&quot;Page Set&#38;up...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_PdfDocument">
      <summary>
        <para>&quot;PDF File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Print">
      <summary>
        <para>&quot;&#38;Print...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_PrintDirect">
      <summary>
        <para>&quot;P&#38;rint&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_PrintSelection">
      <summary>
        <para>&quot;Print...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_RtfDocument">
      <summary>
        <para>&quot;RTF File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Send">
      <summary>
        <para>&quot;Sen&#38;d As&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_TxtDocument">
      <summary>
        <para>&quot;Text File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_View">
      <summary>
        <para>&quot;&#38;View&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ViewContinuous">
      <summary>
        <para>&quot;&#38;Continuous&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ViewFacing">
      <summary>
        <para>&quot;&#38;Facing&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ViewStatusbar">
      <summary>
        <para>&quot;&#38;Statusbar&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ViewToolbar">
      <summary>
        <para>&quot;&#38;Toolbar&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_Watermark">
      <summary>
        <para>&quot;&#38;Watermark...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_XlsDocument">
      <summary>
        <para>&quot;XLS File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_XlsxDocument">
      <summary>
        <para>&quot;XLSX File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ZoomPageWidth">
      <summary>
        <para>&quot;Page Width&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ZoomTextWidth">
      <summary>
        <para>&quot;Text Width&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ZoomTwoPages">
      <summary>
        <para>&quot;Two Pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MenuItem_ZoomWholePage">
      <summary>
        <para>&quot;Whole Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.MPForm_Lbl_Pages">
      <summary>
        <para>&quot;Pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_BigBitmapToCreate">
      <summary>
        <para>&quot;The output file is too big. Please try to reduce the image resolution,\r\nor choose another export mode.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_BigFileToCreate">
      <summary>
        <para>&quot;The output file is too big. Try to reduce the number of its pages, or split it into several documents.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_BigFileToCreateJPEG">
      <summary>
        <para>&quot;The output file is too big to create a JPEG file. Please choose another image format or another export mode.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CannotAccessFile">
      <summary>
        <para>&quot;The process cannot access the file &quot;{0}&quot; because it is being used by another process.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CannotExportToDocx">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CannotFindFile">
      <summary>
        <para>&quot;Cannot perform the specified task. The following library is missing: &quot;{0}&quot;&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CannotLoadDocument">
      <summary>
        <para>&quot;The specified file cannot be loaded, because it either does not contain valid XML data or exceeds the allowed size.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CantFitBarcodeToControlBounds">
      <summary>
        <para>&quot;Control&#39;s boundaries are too small for the barcode&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_Caption">
      <summary>
        <para>&quot;Printing&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CreatingDocument">
      <summary>
        <para>&quot;Creating the document...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_CustomDrawWarning">
      <summary>
        <para>&quot;Warning!&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_EmptyDocument">
      <summary>
        <para>&quot;The document does not contain any pages.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_EmptyUsefulPageSizeError">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_ErrorTitle">
      <summary>
        <para>&quot;Error&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_ExportingDocument">
      <summary>
        <para>&quot;Exporting the document...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_FileAlreadyExists">
      <summary>
        <para>&quot;The output file already exists. Click OK to overwrite.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_FileDoesNotContainValidXml">
      <summary>
        <para>&quot;The specified file doesn&#39;t contain valid XML data in the PRNX format. Loading is stopped.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_FileDoesNotHavePrnxExtension">
      <summary>
        <para>&quot;The specified file doesn&#39;t have a PRNX extension. Proceed anyway?&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_FileReadOnly">
      <summary>
        <para>&quot;File &quot;{0}&quot; is set to read-only, try again with a different file name.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_FontInvalidNumber">
      <summary>
        <para>&quot;The font size cannot be set to zero or a negative number&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_GoToNonExistentPage">
      <summary>
        <para>&quot;There is no page numbered {0} in this document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_IgnoredSvgElements">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_ImageLoadError">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_IncompatibleBarcodeSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_IncompatibleLogoQRCodeSettings">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_IncorrectPageRange">
      <summary>
        <para>&quot;This is not a valid page range&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_IncorrectZoomFactor">
      <summary>
        <para>&quot;The number must be between {0} and {1}.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_InvalidatePath">
      <summary>
        <para>&quot;Cannot find the specified path.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_InvalidBarcodeData">
      <summary>
        <para>&quot;Binary data can&#39;t be longer than 1033 bytes.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_InvalidBarcodeText">
      <summary>
        <para>&quot;There are invalid characters in the text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_InvalidBarcodeTextFormat">
      <summary>
        <para>&quot;Invalid text format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_InvalidMeasurement">
      <summary>
        <para>&quot;This is not a valid measurement.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_InvPropName">
      <summary>
        <para>&quot;Invalid property name&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_NeedPrinter">
      <summary>
        <para>&quot;No printers installed.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_NoDifferentFilesInStream">
      <summary>
        <para>&quot;A document can&#39;t be exported to a stream in the DifferentFiles mode. Use the SingleFile or SingleFilePageByPage mode instead.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_NoParameters">
      <summary>
        <para>&quot;The specified parameters does not exist: {0}.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_NotSupportedFont">
      <summary>
        <para>&quot;This font is not yet supported&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_NotSupportedFontException">
      <summary>
        <para>&quot;The &quot;{0}&quot; cannot be used since this could be an unsupported OpenType font.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_OpenFileQuestion">
      <summary>
        <para>&quot;Do you want to open this file?&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_OpenFileQuestionCaption">
      <summary>
        <para>&quot;Export&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_PageMarginsWarning">
      <summary>
        <para>&quot;One or more margins are set outside the printable area of the page. Continue?&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_PathTooLong">
      <summary>
        <para>&quot;The path is too long.\r\nTry a shorter name.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_Search_Caption">
      <summary>
        <para>&quot;Search&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_SeparatorCannotBeEmptyString">
      <summary>
        <para>&quot;The separator cannot be an empty string.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_UnavailableNetPrinter">
      <summary>
        <para>&quot;The net printer is unavailable.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_WaitingForParameterValues">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_WrongPageSettings">
      <summary>
        <para>&quot;The current printer doesn&#39;t support the selected paper size.\r\nProceed with printing anyway?&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_WrongPrinter">
      <summary>
        <para>&quot;The printer name is invalid. Please check the printer settings.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_WrongPrinting">
      <summary>
        <para>&quot;An error occurred during printing a document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_XlsMoreThanMaxColumns">
      <summary>
        <para>&quot;The created XLS file is too big for the XLS format, because it contains more than 256 columns.\r\nPlease try to use the XLSX format, instead.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_XlsMoreThanMaxRows">
      <summary>
        <para>&quot;The created XLS file is too big for the XLS format, because it contains more than 65,536 rows.\r\nPlease try to use the XLSX format, instead.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_XlsxMoreThanMaxColumns">
      <summary>
        <para>&quot;The created XLSX file is too big for the XLSX format, because it contains more than 16,384 columns.\r\nPlease try to reduce the amount of columns in your report and export the report to XLSX again.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.Msg_XlsxMoreThanMaxRows">
      <summary>
        <para>&quot;The created XLSX file is too big for the XLSX format, because it contains more than 1,048,576 rows.\r\nPlease try to reduce the amount of rows in your report and export the report to XLSX again.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.NetworkPrinterFormat">
      <summary>
        <para>&quot;{0} on {1}&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.NoneString">
      <summary>
        <para>&quot;(none)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.OpenFileDialog_Filter">
      <summary>
        <para>&quot;Preview Document Files (&#0042;{0})|&#0042;{0}|All Files (&#0042;.&#0042;)|&#0042;.&#0042;&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.OpenFileDialog_Title">
      <summary>
        <para>&quot;Open&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PageInfo_PageDate">
      <summary>
        <para>&quot;[Date Printed]&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PageInfo_PageNumber">
      <summary>
        <para>&quot;[Page #]&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PageInfo_PageNumberOfTotal">
      <summary>
        <para>&quot;[Page # of Pages #]&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PageInfo_PageTime">
      <summary>
        <para>&quot;[Time Printed]&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PageInfo_PageTotal">
      <summary>
        <para>&quot;[Pages #]&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PageInfo_PageUserName">
      <summary>
        <para>&quot;[User Name]&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParameterLookUpSettingsNoLookUp">
      <summary>
        <para>&quot;No Look-Up&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParameterRangeSettingsNoRange">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParametersRequest_AllMultiValuesFormat">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParametersRequest_Caption">
      <summary>
        <para>&quot;Parameters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParametersRequest_NullValuePrompt">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParametersRequest_Reset">
      <summary>
        <para>&quot;Reset&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParametersRequest_SelectedMultiValuesFormat">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ParametersRequest_Submit">
      <summary>
        <para>&quot;Submit&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PreviewForm_Caption">
      <summary>
        <para>&quot;Preview&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrintDialog_Duplex_Horizontal">
      <summary>
        <para>&quot;Flip on Short Edge&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrintDialog_Duplex_Simplex">
      <summary>
        <para>&quot;None&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrintDialog_Duplex_Vertical">
      <summary>
        <para>&quot;Flip on Long Edge&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Busy">
      <summary>
        <para>&quot;The printer is busy.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_DoorOpen">
      <summary>
        <para>&quot;The printer door is open.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_DriverUpdateNeeded">
      <summary>
        <para>&quot;The printer driver needs to be updated.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Error">
      <summary>
        <para>&quot;Error&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Initializing">
      <summary>
        <para>&quot;Initializing the Preview...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_IOActive">
      <summary>
        <para>&quot;The printer&#39;s input/output is active.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_ManualFeed">
      <summary>
        <para>&quot;The manual feed is enabled.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_NotAvailable">
      <summary>
        <para>&quot;The printer is not available.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_NoToner">
      <summary>
        <para>&quot;The printer has no toner.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Offline">
      <summary>
        <para>&quot;The printer is offline.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_OutOfMemory">
      <summary>
        <para>&quot;The printer is out of memory.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_OutputBinFull">
      <summary>
        <para>&quot;The output bin is full.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_PagePunt">
      <summary>
        <para>&quot;A page punt has occurred.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_PaperJam">
      <summary>
        <para>&quot;The paper has jammed.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_PaperOut">
      <summary>
        <para>&quot;The printer is out of paper.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_PaperProblem">
      <summary>
        <para>&quot;A paper-related problem has occurred.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Paused">
      <summary>
        <para>&quot;The printer is paused.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_PendingDeletion">
      <summary>
        <para>&quot;Print task deletion is pending.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_PowerSave">
      <summary>
        <para>&quot;The power save mode is on.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Printing">
      <summary>
        <para>&quot;Printing...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Processing">
      <summary>
        <para>&quot;Processing...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Ready">
      <summary>
        <para>&quot;The printer is ready.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_ServerOffline">
      <summary>
        <para>&quot;The server is offline.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_ServerUnknown">
      <summary>
        <para>&quot;The server is unknown.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_TonerLow">
      <summary>
        <para>&quot;The toner is low.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_UserIntervention">
      <summary>
        <para>&quot;A user intervention has occurred.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_Waiting">
      <summary>
        <para>&quot;Waiting...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.PrinterStatus_WarmingUp">
      <summary>
        <para>&quot;The printer is warming up.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ClosePreview_Caption">
      <summary>
        <para>&quot;Close Print Preview&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ClosePreview_STipContent">
      <summary>
        <para>&quot;Close Print Preview of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ClosePreview_STipTitle">
      <summary>
        <para>&quot;Close Print Preview&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Customize_Caption">
      <summary>
        <para>&quot;Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Customize_STipContent">
      <summary>
        <para>&quot;Open the Print Options dialog, in which you can change printing options.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Customize_STipTitle">
      <summary>
        <para>&quot;Options&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_DocumentMap_Caption">
      <summary>
        <para>&quot;Bookmarks&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_DocumentMap_STipContent">
      <summary>
        <para>&quot;Open the Document Map, which allows you to navigate through a structural view of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_DocumentMap_STipTitle">
      <summary>
        <para>&quot;Document Map&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_EditPageHF_Caption">
      <summary>
        <para>&quot;Header/Footer&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_EditPageHF_STipContent">
      <summary>
        <para>&quot;Edit the header and footer of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_EditPageHF_STipTitle">
      <summary>
        <para>&quot;Header and Footer&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportCsv_Caption">
      <summary>
        <para>&quot;CSV File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportCsv_Description">
      <summary>
        <para>&quot;Comma-Separated Values Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportCsv_STipContent">
      <summary>
        <para>&quot;Export the document to CSV and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportCsv_STipTitle">
      <summary>
        <para>&quot;Export to CSV&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportDocx_Caption">
      <summary>
        <para>&quot;DOCX File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportDocx_Description">
      <summary>
        <para>&quot;Microsoft Word 2007 Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportDocx_STipContent">
      <summary>
        <para>&quot;Export the document to DOCX and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportDocx_STipTitle">
      <summary>
        <para>&quot;Export to DOCX&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportFile_Caption">
      <summary>
        <para>&quot;Export To&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportFile_STipContent">
      <summary>
        <para>&quot;Export the current document in one of the available formats, and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportFile_STipTitle">
      <summary>
        <para>&quot;Export To...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportGraphic_Caption">
      <summary>
        <para>&quot;Image File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportGraphic_Description">
      <summary>
        <para>&quot;BMP, GIF, JPEG, PNG, TIFF, EMF, WMF&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportGraphic_STipContent">
      <summary>
        <para>&quot;Export the document to Image and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportGraphic_STipTitle">
      <summary>
        <para>&quot;Export to Image&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportHtm_Caption">
      <summary>
        <para>&quot;HTML File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportHtm_Description">
      <summary>
        <para>&quot;Web Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportHtm_STipContent">
      <summary>
        <para>&quot;Export the document to HTML and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportHtm_STipTitle">
      <summary>
        <para>&quot;Export to HTML&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportMht_Caption">
      <summary>
        <para>&quot;MHT File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportMht_Description">
      <summary>
        <para>&quot;Single File Web Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportMht_STipContent">
      <summary>
        <para>&quot;Export the document to MHT and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportMht_STipTitle">
      <summary>
        <para>&quot;Export to MHT&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportPdf_Caption">
      <summary>
        <para>&quot;PDF File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportPdf_Description">
      <summary>
        <para>&quot;Adobe Portable Document Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportPdf_STipContent">
      <summary>
        <para>&quot;Export the document to PDF and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportPdf_STipTitle">
      <summary>
        <para>&quot;Export to PDF&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportRtf_Caption">
      <summary>
        <para>&quot;RTF File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportRtf_Description">
      <summary>
        <para>&quot;Rich Text Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportRtf_STipContent">
      <summary>
        <para>&quot;Export the document to RTF and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportRtf_STipTitle">
      <summary>
        <para>&quot;Export to RTF&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportTxt_Caption">
      <summary>
        <para>&quot;Text File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportTxt_Description">
      <summary>
        <para>&quot;Plain Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportTxt_STipContent">
      <summary>
        <para>&quot;Export the document to Text and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportTxt_STipTitle">
      <summary>
        <para>&quot;Export to Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXls_Caption">
      <summary>
        <para>&quot;XLS File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXls_Description">
      <summary>
        <para>&quot;Microsoft Excel 2000-2003 Workbook&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXls_STipContent">
      <summary>
        <para>&quot;Export the document to XLS and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXls_STipTitle">
      <summary>
        <para>&quot;Export to XLS&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXlsx_Caption">
      <summary>
        <para>&quot;XLSX File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXlsx_Description">
      <summary>
        <para>&quot;Microsoft Excel 2007 Workbook&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXlsx_STipContent">
      <summary>
        <para>&quot;Export the document to XLSX and save it to the file on a disk.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXlsx_STipTitle">
      <summary>
        <para>&quot;Export to XLSX&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXps_Caption">
      <summary>
        <para>&quot;XPS File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ExportXps_Description">
      <summary>
        <para>&quot;XPS&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_FillBackground_Caption">
      <summary>
        <para>&quot;Page Color&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_FillBackground_STipContent">
      <summary>
        <para>&quot;Choose a color for the background of the document pages.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_FillBackground_STipTitle">
      <summary>
        <para>&quot;Background Color&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Find_Caption">
      <summary>
        <para>&quot;Find&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Find_STipContent">
      <summary>
        <para>&quot;Show the Find dialog to find text in the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Find_STipTitle">
      <summary>
        <para>&quot;Find&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMargins_Description">
      <summary>
        <para>&quot;Top:\t\t{0}\t\tBottom:\t\t{1}\r\nLeft:\t\t {2}\t\tRight:\t\t   {3}&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsModerate_Caption">
      <summary>
        <para>&quot;Moderate&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsModerate_Description">
      <summary>
        <para>&quot;Moderate&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsNarrow_Caption">
      <summary>
        <para>&quot;Narrow&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsNarrow_Description">
      <summary>
        <para>&quot;Narrow&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsNormal_Caption">
      <summary>
        <para>&quot;Normal&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsNormal_Description">
      <summary>
        <para>&quot;Normal&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsWide_Caption">
      <summary>
        <para>&quot;Wide&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageMarginsWide_Description">
      <summary>
        <para>&quot;Wide&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageOrientationLandscape_Caption">
      <summary>
        <para>&quot;Landscape&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageOrientationLandscape_Description">
      <summary>
        <para>&quot;&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageOrientationPortrait_Caption">
      <summary>
        <para>&quot;Portrait&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PageOrientationPortrait_Description">
      <summary>
        <para>&quot;&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_GalleryItem_PaperSize_Description">
      <summary>
        <para>&quot;{0} x {1}&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_HandTool_Caption">
      <summary>
        <para>&quot;Hand Tool&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_HandTool_STipContent">
      <summary>
        <para>&quot;Invoke the Hand tool to manually scroll through pages.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_HandTool_STipTitle">
      <summary>
        <para>&quot;Hand Tool&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_HighlightEditingFields_Caption">
      <summary>
        <para>&quot;Editing Fields&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_HighlightEditingFields_STipContent">
      <summary>
        <para>&quot;Highlight all editing fields to quickly discover which of the document elements are editable.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_HighlightEditingFields_STipTitle">
      <summary>
        <para>&quot;Highlight Editing Fields&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Magnifier_Caption">
      <summary>
        <para>&quot;Magnifier&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Magnifier_STipContent">
      <summary>
        <para>&quot;Invoke the Magnifier tool.\r\n\r\nClicking once on a document zooms it so that a single page becomes entirely visible, while clicking another time zooms it to 100% of the normal size.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Magnifier_STipTitle">
      <summary>
        <para>&quot;Magnifier&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_MultiplePages_Caption">
      <summary>
        <para>&quot;Many Pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_MultiplePages_STipContent">
      <summary>
        <para>&quot;Choose the page layout to arrange the document pages in preview.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_MultiplePages_STipTitle">
      <summary>
        <para>&quot;View Many Pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Open_Caption">
      <summary>
        <para>&quot;Open&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Open_STipContent">
      <summary>
        <para>&quot;Open a document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Open_STipTitle">
      <summary>
        <para>&quot;Open (Ctrl + O)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Background">
      <summary>
        <para>&quot;Page Background&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Close">
      <summary>
        <para>&quot;Close&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Document">
      <summary>
        <para>&quot;Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Export">
      <summary>
        <para>&quot;Export&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Navigation">
      <summary>
        <para>&quot;Navigation&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_PageSetup">
      <summary>
        <para>&quot;Page Setup&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_PageSetup_STipContent">
      <summary>
        <para>&quot;Show the Page Setup dialog.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_PageSetup_STipTitle">
      <summary>
        <para>&quot;Page Setup&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Print">
      <summary>
        <para>&quot;Print&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageGroup_Zoom">
      <summary>
        <para>&quot;Zoom&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageMargins_Caption">
      <summary>
        <para>&quot;Margins&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageMargins_STipContent">
      <summary>
        <para>&quot;Select the margin sizes for the entire document.\r\n\r\nTo apply specific margin sizes to the document, click Custom Margins.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageMargins_STipTitle">
      <summary>
        <para>&quot;Page Margins&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageOrientation_Caption">
      <summary>
        <para>&quot;Orientation&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageOrientation_STipContent">
      <summary>
        <para>&quot;Switch the pages between portrait and landscape layouts.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageOrientation_STipTitle">
      <summary>
        <para>&quot;Page Orientation&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageSetup_Caption">
      <summary>
        <para>&quot;Custom Margins...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageSetup_STipContent">
      <summary>
        <para>&quot;Show the Page Setup dialog.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageSetup_STipTitle">
      <summary>
        <para>&quot;Page Setup&#39;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PageText">
      <summary>
        <para>&quot;Print Preview&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PaperSize_Caption">
      <summary>
        <para>&quot;Size&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PaperSize_STipContent">
      <summary>
        <para>&quot;Choose the paper size of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PaperSize_STipTitle">
      <summary>
        <para>&quot;Page Size&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Parameters_Caption">
      <summary>
        <para>&quot;Parameters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Parameters_STipContent">
      <summary>
        <para>&quot;Open the Parameters pane, which allows you to enter values for report parameters.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Parameters_STipTitle">
      <summary>
        <para>&quot;Parameters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Pointer_Caption">
      <summary>
        <para>&quot;Pointer&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Pointer_STipContent">
      <summary>
        <para>&quot;Show the mouse pointer.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Pointer_STipTitle">
      <summary>
        <para>&quot;Mouse Pointer&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Print_Caption">
      <summary>
        <para>&quot;Print&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Print_STipContent">
      <summary>
        <para>&quot;Select a printer, number of copies and other printing options before printing.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Print_STipTitle">
      <summary>
        <para>&quot;Print (Ctrl+P)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PrintDirect_Caption">
      <summary>
        <para>&quot;Quick Print&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PrintDirect_STipContent">
      <summary>
        <para>&quot;Send the document directly to the default printer without making changes.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_PrintDirect_STipTitle">
      <summary>
        <para>&quot;Quick Print&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Save_Caption">
      <summary>
        <para>&quot;Save&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Save_STipContent">
      <summary>
        <para>&quot;Save the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Save_STipTitle">
      <summary>
        <para>&quot;Save (Ctrl + S)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Scale_Caption">
      <summary>
        <para>&quot;Scale&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Scale_STipContent">
      <summary>
        <para>&quot;Stretch or shrink the printed output to a percentage of its actual size.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Scale_STipTitle">
      <summary>
        <para>&quot;Scale&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendCsv_Caption">
      <summary>
        <para>&quot;CSV File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendCsv_Description">
      <summary>
        <para>&quot;Comma-Separated Values Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendCsv_STipContent">
      <summary>
        <para>&quot;Export the document to CSV and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendCsv_STipTitle">
      <summary>
        <para>&quot;E-Mail As CSV&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendDocx_Caption">
      <summary>
        <para>&quot;DOCX File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendDocx_Description">
      <summary>
        <para>&quot;Microsoft Word 2007 Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendDocx_STipContent">
      <summary>
        <para>&quot;Export the document to DOCX and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendDocx_STipTitle">
      <summary>
        <para>&quot;E-Mail As DOCX&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendFile_Caption">
      <summary>
        <para>&quot;E-Mail As&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendFile_STipContent">
      <summary>
        <para>&quot;Export the current document in one of the available formats, and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendFile_STipTitle">
      <summary>
        <para>&quot;E-Mail As...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendGraphic_Caption">
      <summary>
        <para>&quot;Image File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendGraphic_Description">
      <summary>
        <para>&quot;BMP, GIF, JPEG, PNG, TIFF, EMF, WMF&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendGraphic_STipContent">
      <summary>
        <para>&quot;Export the document to Image and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendGraphic_STipTitle">
      <summary>
        <para>&quot;E-Mail As Image&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendMht_Caption">
      <summary>
        <para>&quot;MHT File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendMht_Description">
      <summary>
        <para>&quot;Single File Web Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendMht_STipContent">
      <summary>
        <para>&quot;Export the document to MHT and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendMht_STipTitle">
      <summary>
        <para>&quot;E-Mail As MHT&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendPdf_Caption">
      <summary>
        <para>&quot;PDF File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendPdf_Description">
      <summary>
        <para>&quot;Adobe Portable Document Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendPdf_STipContent">
      <summary>
        <para>&quot;Export the document to PDF and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendPdf_STipTitle">
      <summary>
        <para>&quot;E-Mail As PDF&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendRtf_Caption">
      <summary>
        <para>&quot;RTF File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendRtf_Description">
      <summary>
        <para>&quot;Rich Text Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendRtf_STipContent">
      <summary>
        <para>&quot;Export the document to RTF and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendRtf_STipTitle">
      <summary>
        <para>&quot;E-Mail As RTF&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendTxt_Caption">
      <summary>
        <para>&quot;Text File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendTxt_Description">
      <summary>
        <para>&quot;Plain Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendTxt_STipContent">
      <summary>
        <para>&quot;Export the document to Text and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendTxt_STipTitle">
      <summary>
        <para>&quot;E-Mail As Text&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXls_Caption">
      <summary>
        <para>&quot;XLS File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXls_Description">
      <summary>
        <para>&quot;Microsoft Excel 2000-2003 Workbook&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXls_STipContent">
      <summary>
        <para>&quot;Export the document to XLS and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXls_STipTitle">
      <summary>
        <para>&quot;E-Mail As XLS&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXlsx_Caption">
      <summary>
        <para>&quot;XLSX File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXlsx_Description">
      <summary>
        <para>&quot;Microsoft Excel 2007 Workbook&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXlsx_STipContent">
      <summary>
        <para>&quot;Export the document to XLSX and attach it to the e-mail.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXlsx_STipTitle">
      <summary>
        <para>&quot;E-Mail As XLSX&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXps_Caption">
      <summary>
        <para>&quot;XPS File&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_SendXps_Description">
      <summary>
        <para>&quot;XPS&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowFirstPage_Caption">
      <summary>
        <para>&quot;First Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowFirstPage_STipContent">
      <summary>
        <para>&quot;Navigate to the first page of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowFirstPage_STipTitle">
      <summary>
        <para>&quot;First Page (Ctrl+Home)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowLastPage_Caption">
      <summary>
        <para>&quot;Last  Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowLastPage_STipContent">
      <summary>
        <para>&quot;Navigate to the last page of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowLastPage_STipTitle">
      <summary>
        <para>&quot;Last Page (Ctrl+End)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowNextPage_Caption">
      <summary>
        <para>&quot;Next  Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowNextPage_STipContent">
      <summary>
        <para>&quot;Navigate to the next page of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowNextPage_STipTitle">
      <summary>
        <para>&quot;Next Page (PageDown)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowPrevPage_Caption">
      <summary>
        <para>&quot;Previous Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowPrevPage_STipContent">
      <summary>
        <para>&quot;Navigate to the previous page of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ShowPrevPage_STipTitle">
      <summary>
        <para>&quot;Previous Page (PageUp)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Thumbnails_Caption">
      <summary>
        <para>&quot;Thumbnails&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Thumbnails_STipContent">
      <summary>
        <para>&quot;Open the Thumbnails.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Thumbnails_STipTitle">
      <summary>
        <para>&quot;Thumbnails&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Watermark_Caption">
      <summary>
        <para>&quot;Watermark&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Watermark_STipContent">
      <summary>
        <para>&quot;Insert ghosted text or image behind the content of a page.\r\n\r\nThis is often used to indicate that a document is to be treated specially.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Watermark_STipTitle">
      <summary>
        <para>&quot;Watermark&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Zoom_Caption">
      <summary>
        <para>&quot;Zoom&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Zoom_STipContent">
      <summary>
        <para>&quot;Change the zoom level of the document preview.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_Zoom_STipTitle">
      <summary>
        <para>&quot;Zoom&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomExact_Caption">
      <summary>
        <para>&quot;Exact&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomIn_Caption">
      <summary>
        <para>&quot;Zoom In&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomIn_STipContent">
      <summary>
        <para>&quot;Zoom in to get a close-up view of the document.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomIn_STipTitle">
      <summary>
        <para>&quot;Zoom In&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomOut_Caption">
      <summary>
        <para>&quot;Zoom Out&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomOut_STipContent">
      <summary>
        <para>&quot;Zoom out to see more of the page at a reduced size.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.RibbonPreview_ZoomOut_STipTitle">
      <summary>
        <para>&quot;Zoom Out&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterBmp">
      <summary>
        <para>&quot;BMP Bitmap Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterCsv">
      <summary>
        <para>&quot;CSV Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterDocx">
      <summary>
        <para>&quot;DOCX Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterEmf">
      <summary>
        <para>&quot;EMF Enhanced Windows Metafile&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterGif">
      <summary>
        <para>&quot;GIF Graphics Interchange Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterHtm">
      <summary>
        <para>&quot;HTML Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterJpeg">
      <summary>
        <para>&quot;JPEG File Interchange Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterMht">
      <summary>
        <para>&quot;MHT Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterNativeFormat">
      <summary>
        <para>&quot;Native Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterPdf">
      <summary>
        <para>&quot;PDF Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterPng">
      <summary>
        <para>&quot;PNG Portable Network Graphics Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterRtf">
      <summary>
        <para>&quot;Rich Text Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterTiff">
      <summary>
        <para>&quot;TIFF Tag Image File Format&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterTxt">
      <summary>
        <para>&quot;Text Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterWmf">
      <summary>
        <para>&quot;WMF Windows Metafile&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterXls">
      <summary>
        <para>&quot;XLS Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterXlsx">
      <summary>
        <para>&quot;XLSX Document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_FilterXps">
      <summary>
        <para>&quot;XPS Document&quot;&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SaveDlg_Title">
      <summary>
        <para>&quot;Save As&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SB_PageInfo">
      <summary>
        <para>&quot;{0} of {1}&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SB_PageNone">
      <summary>
        <para>&quot;Nothing&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SB_PageOfPages">
      <summary>
        <para>&quot;Page {0} of {1}&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SB_PageOfPagesHint">
      <summary>
        <para>&quot;Page number in document. Click to open the Go To Page dialog.&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SB_TTip_Stop">
      <summary>
        <para>&quot;Stop&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.SB_ZoomFactor">
      <summary>
        <para>&quot;Zoom Factor:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ScalePopup_AdjustTo">
      <summary>
        <para>&quot;Adjust to:&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ScalePopup_FitTo">
      <summary>
        <para>&quot;Fit to&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ScalePopup_NormalSize">
      <summary>
        <para>&quot;% normal size&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ScalePopup_PagesWide">
      <summary>
        <para>&quot;pages wide&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.ScrollingInfo_Page">
      <summary>
        <para>&quot;Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Backgr">
      <summary>
        <para>&quot;Background&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Close">
      <summary>
        <para>&quot;Close Preview&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Customize">
      <summary>
        <para>&quot;Customize&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_EditPageHF">
      <summary>
        <para>&quot;Header And Footer&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Export">
      <summary>
        <para>&quot;Export Document...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_FirstPage">
      <summary>
        <para>&quot;First Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_HandTool">
      <summary>
        <para>&quot;Hand Tool&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_HighlightEditingFields">
      <summary>
        <para>&quot;Highlight Editing Fields&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_LastPage">
      <summary>
        <para>&quot;Last Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Magnifier">
      <summary>
        <para>&quot;Magnifier&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Map">
      <summary>
        <para>&quot;Document Map&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_MultiplePages">
      <summary>
        <para>&quot;Multiple Pages&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_NextPage">
      <summary>
        <para>&quot;Next Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Open">
      <summary>
        <para>&quot;Open a document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_PageSetup">
      <summary>
        <para>&quot;Page Setup&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Parameters">
      <summary>
        <para>&quot;Parameters&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_PreviousPage">
      <summary>
        <para>&quot;Previous Page&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Print">
      <summary>
        <para>&quot;Print&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_PrintDirect">
      <summary>
        <para>&quot;Quick Print&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Save">
      <summary>
        <para>&quot;Save the document&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Scale">
      <summary>
        <para>&quot;Scale&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Search">
      <summary>
        <para>&quot;Search&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Send">
      <summary>
        <para>&quot;Send via E-Mail...&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Thumbnails">
      <summary>
        <para>&quot;Thumbnails&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Watermark">
      <summary>
        <para>&quot;Watermark&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_Zoom">
      <summary>
        <para>&quot;Zoom&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_ZoomIn">
      <summary>
        <para>&quot;Zoom In&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.TB_TTip_ZoomOut">
      <summary>
        <para>&quot;Zoom Out&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WaitForm_Caption">
      <summary>
        <para>&quot;Please Wait&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WatermarkTypePicture">
      <summary>
        <para>&quot;(Picture)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WatermarkTypeText">
      <summary>
        <para>&quot;(Text)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Direction_BackwardDiagonal">
      <summary>
        <para>&quot;Backward Diagonal&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Direction_ForwardDiagonal">
      <summary>
        <para>&quot;Forward Diagonal&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Direction_Horizontal">
      <summary>
        <para>&quot;Horizontal&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Direction_Vertical">
      <summary>
        <para>&quot;Vertical&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_HorzAlign_Center">
      <summary>
        <para>&quot;Center&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_HorzAlign_Left">
      <summary>
        <para>&quot;Left&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_HorzAlign_Right">
      <summary>
        <para>&quot;Right&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_ImageClip">
      <summary>
        <para>&quot;Clip&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_ImageStretch">
      <summary>
        <para>&quot;Stretch&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_ImageZoom">
      <summary>
        <para>&quot;Zoom&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_PictureDlg_Title">
      <summary>
        <para>&quot;Select Picture&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_VertAlign_Bottom">
      <summary>
        <para>&quot;Bottom&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_VertAlign_Middle">
      <summary>
        <para>&quot;Middle&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_VertAlign_Top">
      <summary>
        <para>&quot;Top&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Asap">
      <summary>
        <para>&quot;ASAP&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Confidential">
      <summary>
        <para>&quot;CONFIDENTIAL&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Copy">
      <summary>
        <para>&quot;COPY&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_DoNotCopy">
      <summary>
        <para>&quot;DO NOT COPY&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Draft">
      <summary>
        <para>&quot;DRAFT&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Evaluation">
      <summary>
        <para>&quot;EVALUATION&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Original">
      <summary>
        <para>&quot;ORIGINAL&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Personal">
      <summary>
        <para>&quot;PERSONAL&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Sample">
      <summary>
        <para>&quot;SAMPLE&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_TopSecret">
      <summary>
        <para>&quot;TOP SECRET&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.Localization.PreviewStringId.WMForm_Watermark_Urgent">
      <summary>
        <para>&quot;URGENT&quot;</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.PaddingInfo">
      <summary>
        <para>Contains padding or margin information associated with a control or a brick.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(DevExpress.XtraPrinting.PaddingInfo,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class and copies the settings from the object passed as the parameter according to the specified dpi value.</para>
      </summary>
      <param name="src">A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object whose settings are used to initialize the created object&#39;s properties.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class with the dpi of the specified graphics unit.</para>
      </summary>
      <param name="graphicsUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class with the specified left, right, top and bottom values.</para>
      </summary>
      <param name="left">An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.</param>
      <param name="right">An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.</param>
      <param name="top">An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.</param>
      <param name="bottom">An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class with the specified left, right, top and bottom values, and the dpi of the specified graphics unit.</para>
      </summary>
      <param name="left">An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.</param>
      <param name="right">An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.</param>
      <param name="top">An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.</param>
      <param name="bottom">An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.</param>
      <param name="graphicsUnit">A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class with the specified left, right, top, bottom and dpi values.</para>
      </summary>
      <param name="left">An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.</param>
      <param name="right">An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.</param>
      <param name="top">An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.</param>
      <param name="bottom">An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Int32,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class with the specified settings.</para>
      </summary>
      <param name="all">An integer value, specifying the overall padding.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value, specifying the dpi.</param>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> class with the specified dpi value.</para>
      </summary>
      <param name="dpi">A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.All">
      <summary>
        <para>Specifies padding for all the element&#39;s sides.</para>
      </summary>
      <value>An integer value, representing the overall padding.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.Bottom">
      <summary>
        <para>Gets or sets the padding value for the bottom edge.</para>
      </summary>
      <value>An integer value which represents the padding value (in pixels) for the bottom edge.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(System.Drawing.RectangleF,System.Single)">
      <summary>
        <para>Deflates the specified rectangle by the rectangle of the current padding with the specified dpi.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(System.Drawing.SizeF,System.Single)">
      <summary>
        <para>Deflates the specified size by the size of the current padding with the specified dpi.</para>
      </summary>
      <param name="size">A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be deflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the deflated size.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(System.Single)">
      <summary>
        <para>Deflates the specified height value by the height of the current padding.</para>
      </summary>
      <param name="height">A <see cref="T:System.Single"/> value which specifies the height to be deflated.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the deflated height.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(System.Single,System.Single)">
      <summary>
        <para>Deflates the specified height value by the height of the current padding with the specified dpi.</para>
      </summary>
      <param name="height">A <see cref="T:System.Single"/> value which specifies the height to be deflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before deflating.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the deflated height.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(System.Single)">
      <summary>
        <para>Deflates the specified width value by the width of the current padding.</para>
      </summary>
      <param name="width">A <see cref="T:System.Single"/> value which specifies the width to be deflated.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the deflated width.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(System.Single,System.Single)">
      <summary>
        <para>Deflates the specified width value by the width of the current padding with the specified dpi.</para>
      </summary>
      <param name="width">A <see cref="T:System.Single"/> value which specifies the width to be deflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before deflating.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the deflated width.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.Dpi">
      <summary>
        <para>Gets or sets the dpi value used to perform internal calculations.</para>
      </summary>
      <value>A <see cref="T:System.Single"/> value which represents the dpi value for this padding.</value>
    </member>
    <member name="F:DevExpress.XtraPrinting.PaddingInfo.Empty">
      <summary>
        <para>Provides a <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object with no padding.</para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.Equals(DevExpress.XtraPrinting.PaddingInfo)">
      <summary>
        <para>Determines whether or not the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> instance.</para>
      </summary>
      <param name="other">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> instance; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object.</para>
      </summary>
      <returns>An integer value representing the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(System.Drawing.RectangleF,System.Single)">
      <summary>
        <para>Inflates the specified rectangle by the rectangle of the current padding with the specified dpi.</para>
      </summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.</param>
      <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(System.Drawing.SizeF,System.Single)">
      <summary>
        <para>Inflates the specified size by the size of the current padding with the specified dpi.</para>
      </summary>
      <param name="size">A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be inflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.</param>
      <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the inflated size.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(System.Single)">
      <summary>
        <para>Inflates the specified height value by the height of the current padding.</para>
      </summary>
      <param name="height">A <see cref="T:System.Single"/> value which specifies the height to be inflated.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the inflated height.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(System.Single,System.Single)">
      <summary>
        <para>Inflates the specified height value by the height of the current padding with the specified dpi.</para>
      </summary>
      <param name="height">A <see cref="T:System.Single"/> value which specifies the height to be inflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before inflating.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the inflated height.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(System.Single)">
      <summary>
        <para>Inflates the specified width value by the width of the current padding.</para>
      </summary>
      <param name="width">A <see cref="T:System.Single"/> value which specifies the width to be inflated.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the inflated width.</returns>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(System.Single,System.Single)">
      <summary>
        <para>Inflates the specified width value by the width of the current padding with the specified dpi.</para>
      </summary>
      <param name="width">A <see cref="T:System.Single"/> value which specifies the width to be inflated.</param>
      <param name="dpi">A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before inflating.</param>
      <returns>A <see cref="T:System.Single"/> value that represents the inflated width.</returns>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.IsEmpty">
      <summary>
        <para>Determines whether the padding is empty (all padding values are null).</para>
      </summary>
      <value>true if the padding is empty; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.Left">
      <summary>
        <para>Gets or sets the padding value for the left edge.</para>
      </summary>
      <value>An integer value which represents the padding value (in pixels) for the left edge.</value>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.Right">
      <summary>
        <para>Gets or sets the padding value for the right edge.</para>
      </summary>
      <value>An integer value which represents the padding value (in pixels) for the right edge.</value>
    </member>
    <member name="M:DevExpress.XtraPrinting.PaddingInfo.RotatePaddingCounterclockwise(System.Int32)">
      <summary>
        <para>Rotates padding values counterclockwise the specified number of times.</para>
      </summary>
      <param name="numberOfTimes">An integer value which specifies the number of times for padding values to rotate.</param>
    </member>
    <member name="P:DevExpress.XtraPrinting.PaddingInfo.Top">
      <summary>
        <para>Gets or sets the padding value for the top edge.</para>
      </summary>
      <value>An integer value which represents the padding value (in pixels) for the top edge.</value>
    </member>
    <member name="T:DevExpress.XtraPrinting.PageInfo">
      <summary>
        <para>Contains the values that define what kind of information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.DateTime">
      <summary>
        <para>Indicates that the current date and time are displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.None">
      <summary>
        <para>Indicates that the <see cref="P:DevExpress.XtraPrinting.PageInfoTextBrick.Format"/> property value is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoTextBrick"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.Number">
      <summary>
        <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.NumberOfTotal">
      <summary>
        <para>Indicates that both the current page number and the total number of pages in the current report are displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.RomHiNumber">
      <summary>
        <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in uppercase.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.RomLowNumber">
      <summary>
        <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in lowercase.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.Total">
      <summary>
        <para>Indicates that the total number of pages is displayed in the PageInfoBrick.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PageInfo.UserName">
      <summary>
        <para>Indicates that the user name for the current thread is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.PrintingSystemCommand">
      <summary>
        <para>Specifies the commands which can be executed in the printing system&#39;s document preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Background">
      <summary>
        <para>Identifies the Background menu item, which is a parent for the FillBackground and Watermark subitems. Use this value as a parameter for the  method, to hide or show the Background items from the menu of the Print Preview form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ClosePreview">
      <summary>
        <para>Closes the preview window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Copy">
      <summary>
        <para>Copies the selected document content to the Clipboard.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Customize">
      <summary>
        <para>Invokes the property editor of the component which is about to be printed. Note that this component should implement the IPrintable interface.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.DocumentMap">
      <summary>
        <para>Shows or hides the Document Map pane, which displays the hierarchy of bookmarks in a report document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.EditPageHF">
      <summary>
        <para>Invokes the Header/Footer Editor dialog. This dialog is used to insert standard page information into a report&#39;s headers and footers.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportCsv">
      <summary>
        <para>Exports a document to a CSV (comma-separated values) file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportDocx">
      <summary>
        <para>Exports the current document to a DOCX file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportFile">
      <summary>
        <para>Exports the current document to a file (a report can be exported to PDF, RTF, HTML, MHT, XLS, TXT, CSV and various image formats).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportGraphic">
      <summary>
        <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportHtm">
      <summary>
        <para>Exports the current document to an HTML file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportMht">
      <summary>
        <para>Exports the current document to an MHT file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportPdf">
      <summary>
        <para>Exports the current  document to a PDF file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportRtf">
      <summary>
        <para>Exports the current document to an RTF file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportTxt">
      <summary>
        <para>Exports the current document to a TXT file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXls">
      <summary>
        <para>Exports the current document to an XLS file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXlsx">
      <summary>
        <para>Exports the current document to an XLSX file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXps">
      <summary>
        <para>Exports the current document to an XPS file.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.File">
      <summary>
        <para>Identifies the File menu item, which is a parent for the PageSetup, Print, PrintDirect, ExportFile and SendFile subitems. Use this value as a parameter for the  method, to hide or show the File items from the menu of the Print Preview form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.FillBackground">
      <summary>
        <para>Invokes the Color dialog which allows the background color of the current document to be specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Find">
      <summary>
        <para>Invokes the Find dialog in the document&#39;s preview. This dialog provides a search dialog which allows end-users to search a report for specific text directly in the preview window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.GoToPage">
      <summary>
        <para>Raises the Go To Page dialog to jump to the specified page number.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.HandTool">
      <summary>
        <para>Invokes or hides the Hand Tool in the document&#39;s preview. This tool is used for scrolling the pages of the document being previewed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.HighlightEditingFields">
      <summary>
        <para>Highlights all available fields whose content can be edited.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Magnifier">
      <summary>
        <para>Invokes the preview magnifier. When the magnifier is activated the mouse cursor resembles a magnifying glass and a click on a preview page zooms in on it. There are two possible values for the magnification level. The first magnification value is always fixed and is equal to 100 %. The other value is calculated so that the entire preview page is visible at once without having to scroll it.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.MultiplePages">
      <summary>
        <para>Shows the layout of the document&#39;s preview across multiple pages. To specify a particular number of page rows and columns in a Print Control, use the  method.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.None">
      <summary>
        <para>Doesn&#39;t identify any command. This member is intended for internal use only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Open">
      <summary>
        <para>Opens a document. This command is represented both via the menu item and toolbar button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayout">
      <summary>
        <para>Identifies the item which is the parent to the PageLayoutContinuous and PageLayoutFacing subitems. Use this value as a parameter for the  method to hide or show the page layout items from the menu of the Preview Form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutContinuous">
      <summary>
        <para>Changes the view of the document&#39;s preview so that the pages are arranged as a continuous vertical column.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutFacing">
      <summary>
        <para>Changes the view of the document&#39;s preview so that the pages are arranged side-by-side.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageMargins">
      <summary>
        <para>Selects the margin sizes for the entire document. Note that this command is in use in the Ribbon Print Preview Form only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageOrientation">
      <summary>
        <para>Switches the pages between portrait and landscape layouts. Note that this command is in use in the Ribbon Print Preview Form only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageSetup">
      <summary>
        <para>Invokes the Page Setup dialog which allows some of the page&#39;s settings to be adjusted (orientation, margins, paper size and source).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PaperSize">
      <summary>
        <para>Chooses the paper size of the document. Note that this command is in use in the Ribbon Print Preview Form only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Parameters">
      <summary>
        <para>Shows or hides the Parameters pane, which enables end-users to enter parameter values, apply them to a report&#39;s data source and re-generate the report document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Pointer">
      <summary>
        <para>Shows the mouse pointer, when there is no need to show either the Hand Tool, or the Magnifier.  Note that this command is in use in the Ribbon Print Preview Form only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Print">
      <summary>
        <para>Invokes the Print dialog for the current document. This dialog allows the printer to be selected, its properties set, the number of copies entered and the range of pages to print to be specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PrintDirect">
      <summary>
        <para>Prints the document preview directly, without any dialogs. This is useful when the printer&#39;s settings don&#39;t need to be changed before a document is printed.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PrintSelection">
      <summary>
        <para>Prints the selected document content.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Save">
      <summary>
        <para>Saves a document to a file. This command is represented both via the menu item and toolbar button.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Scale">
      <summary>
        <para>Stretches or shrinks the document to a percentage of its actual size. Note that if you need to specify a particular scale factor or number of pages a document should be scaled to, the <see cref="P:DevExpress.XtraPrinting.Document.ScaleFactor"/> and <see cref="P:DevExpress.XtraPrinting.Document.AutoFitToPagesWidth"/> properties will be useful.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageDown">
      <summary>
        <para>Scrolls one page down, as when an end-user presses the PAGE DOWN key.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageUp">
      <summary>
        <para>Scrolls one page up, as when an end-user presses the PAGE UP key.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendCsv">
      <summary>
        <para>Exports the current document to a CSV (comma-separated values) file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendDocx">
      <summary>
        <para>Exports the current document to a DOCX file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendFile">
      <summary>
        <para>Exports the document in the preview window, then creates a new e-mail in the default system mailer and attaches the exported document to the e-mail. The exporting format can be specified via the drop-down list.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendGraphic">
      <summary>
        <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats) and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendMht">
      <summary>
        <para>Exports the current document to an MHT file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendPdf">
      <summary>
        <para>Exports the current document to a PDF file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendRtf">
      <summary>
        <para>Exports the current document to an RTF file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendTxt">
      <summary>
        <para>Exports the current document to a TXT file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXls">
      <summary>
        <para>Exports the current document to an XLS file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXlsx">
      <summary>
        <para>Exports the current document to an XLSX file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXps">
      <summary>
        <para>Exports the current document to a XPS file and sends it via e-mail.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowFirstPage">
      <summary>
        <para>Displays the first page in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowLastPage">
      <summary>
        <para>Displays the last page in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowNextPage">
      <summary>
        <para>Moves to the next page in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowPrevPage">
      <summary>
        <para>Moves to the previous page in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.StopPageBuilding">
      <summary>
        <para>Identifies the Stop button, which is displayed in the status bar to the right of the progress bar, and can be used to stop generating a document.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SubmitParameters">
      <summary>
        <para>Submits the parameters specified in the Parameters panel.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Thumbnails">
      <summary>
        <para>Toggles the Thumbnails panel visibility.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.View">
      <summary>
        <para>Identifies the View menu item, which is a parent for the PageLayout, Toolbar, Status Bar and Customize subitems. Use this value as a parameter for the  method, to hide or show the View items from the menu of the Print Preview form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ViewWholePage">
      <summary>
        <para>Zooms a document in or out so that only one entire page of the document is shown in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Watermark">
      <summary>
        <para>Invokes the Watermark dialog which can be used to specify either background text or a picture as a document&#39;s watermark. Note that a document&#39;s watermark can be accessed via the <see cref="P:DevExpress.XtraPrinting.PrintingSystemBase.Watermark"/> property.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Zoom">
      <summary>
        <para>Zooms in on a document by one of the predefined zoom factors. They are as follows: 10%, 25%, 50%, 75%, 100%, 150%, 200% and 500%.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomIn">
      <summary>
        <para>Zooms the preview in. Each time this command is performed, the preview gets zoomed in by approximately 10%.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomOut">
      <summary>
        <para>Zooms the preview out.  Each time this command is performed, the preview gets zoomed out by approximately 10%.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToPageWidth">
      <summary>
        <para>Zooms a document in or out as appropriate, so that the width of the current page fits the preview window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTextWidth">
      <summary>
        <para>Zooms a document in or out as appropriate, so that the width of the text in the current page fits the preview window.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTwoPages">
      <summary>
        <para>Zooms a document in or out as appropriate, so that only two entire pages of the document are shown in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToWholePage">
      <summary>
        <para>Zooms a document in or out as appropriate, so that only a single page of the document is shown in the preview.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomTrackBar">
      <summary>
        <para>Identifies the Zoom trackbar control, which is available in the bottom-right corner of the Print Preview Form with a Ribbon.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.TextAlignment">
      <summary>
        <para>Specifies how the text associated with the control should be aligned.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomCenter">
      <summary>
        <para>The text is vertically aligned at the bottom, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomJustify">
      <summary>
        <para>The text is vertically aligned at the bottom, and horizontally justified. This mode is ignored in Silverlight applications.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomLeft">
      <summary>
        <para>The text is vertically aligned at the bottom, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomRight">
      <summary>
        <para>The text is vertically aligned at the bottom, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleCenter">
      <summary>
        <para>The text is vertically aligned in the middle, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleJustify">
      <summary>
        <para>The text is vertically aligned in the middle, and horizontally justified. This mode is ignored in Silverlight applications.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleLeft">
      <summary>
        <para>The text is vertically aligned in the middle, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleRight">
      <summary>
        <para>The text is vertically aligned in the middle, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.TopCenter">
      <summary>
        <para>The text is vertically aligned at the top, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.TopJustify">
      <summary>
        <para>The text is vertically aligned at the top, and horizontally justified. This mode is ignored in Silverlight applications.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.TopLeft">
      <summary>
        <para>The text is vertically aligned at the top, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextAlignment.TopRight">
      <summary>
        <para>The text is vertically aligned at the top, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.TextRenderingMode">
      <summary>
        <para>Lists the values indicating the available text rendering modes.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextRenderingMode.AntiAlias">
      <summary>
        <para>Antialiased glyph bitmaps without hinting is used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextRenderingMode.AntiAliasGridFit">
      <summary>
        <para>Antialiased glyph bitmaps and hinting are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextRenderingMode.ClearTypeGridFit">
      <summary>
        <para>ClearType glyph bitmaps and hinting are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextRenderingMode.SingleBitPerPixel">
      <summary>
        <para>Glyph bitmaps without hinting are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextRenderingMode.SingleBitPerPixelGridFit">
      <summary>
        <para>Glyph bitmaps and hinting are used.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.TextRenderingMode.SystemDefault">
      <summary>
        <para>The system default rendering is used.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraPrinting.VerticalContentSplitting">
      <summary>
        <para>Specifies how content bricks are split if they are partially positioned outside the right page margin.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.VerticalContentSplitting.Exact">
      <summary>
        <para>When the brick dimensions do not fit into the right page margin, the rest of the brick content is split across two pages.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraPrinting.VerticalContentSplitting.Smart">
      <summary>
        <para>When the brick dimensions do not fit into the right page margin, the brick content is moved to a new page in its entirety.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraReports.Design">
      <summary>
        <para>Provides the functionality that is necessary for deep customization of the End-User Report Designer.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraReports.Design.ShowComplexProperties">
      <summary>
        <para>Lists the values that define the order in which complex properties are shown in the Field List.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.Design.ShowComplexProperties.Default">
      <summary>
        <para>The default order of showing complex properties in the Field List is preserved.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.Design.ShowComplexProperties.First">
      <summary>
        <para>The complex properties are shown at the top of the Field List.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.Design.ShowComplexProperties.Last">
      <summary>
        <para>The complex properties are shown at the bottom of the Field List.</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraReports.Parameters">
      <summary>
        <para>Contains classes that are used to handle parameters in XtraReports.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraReports.Parameters.Range`1">
      <summary>
        <para>A predefined value range item.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraReports.Parameters.Range`1.#ctor(`0,`0)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraReports.Parameters.Range`1"/> class with specified settings.</para>
      </summary>
      <param name="start">A range&#39;s start value.</param>
      <param name="end">A range&#39;s end value.</param>
    </member>
    <member name="P:DevExpress.XtraReports.Parameters.Range`1.End">
      <summary>
        <para>The range&#39;s end value.</para>
      </summary>
      <value>The range&#39;s end value.</value>
    </member>
    <member name="M:DevExpress.XtraReports.Parameters.Range`1.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current object.</para>
      </summary>
      <param name="obj">An object to compare with the current object.</param>
      <returns>true, if the specified object is equal to the current object; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraReports.Parameters.Range`1.GetHashCode">
      <summary>
        <para>Returns the hash code for the current object.</para>
      </summary>
      <returns>The hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XtraReports.Parameters.Range`1.Start">
      <summary>
        <para>The range&#39;s start value.</para>
      </summary>
      <value>The range&#39;s start value.</value>
    </member>
    <member name="N:DevExpress.XtraReports.UI">
      <summary>
        <para>Contains classes that implement the basic functionality of XtraReports.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraReports.UI.FieldType">
      <summary>
        <para>Specifies the type of the value returned by a calculated field.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Boolean">
      <summary>
        <para>Indicates that the field returns a Boolean (true or false) value (the <see cref="T:System.Boolean"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Byte">
      <summary>
        <para>Indicates that the field returns an 8-bit unsigned integer value (the <see cref="T:System.Byte"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.DateTime">
      <summary>
        <para>Indicates that the field returns a value expressed as a date and time of day (the <see cref="T:System.DateTime"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Decimal">
      <summary>
        <para>Indicates that the field returns a decimal value (the <see cref="T:System.Decimal"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Double">
      <summary>
        <para>Indicates that the field returns a double-precision floating-point value (the <see cref="T:System.Double"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Float">
      <summary>
        <para>Indicates that the field returns a single-precision floating-point value (the <see cref="T:System.Single"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Guid">
      <summary>
        <para>Indicates that the field returns a globally unique identifier value (the System.Guid type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Int16">
      <summary>
        <para>Indicates that the field returns a 16-bit signed integer value (the <see cref="T:System.Int16"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.Int32">
      <summary>
        <para>Indicates that the field returns a 32-bit signed integer value (the <see cref="T:System.Int32"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.None">
      <summary>
        <para>Indicates that the field&#39;s type is undefined and determined by evaluating the actually returned object during report generation.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.String">
      <summary>
        <para>Indicates that the field returns a string value as a sequence of UTF-16 code units (the <see cref="T:System.String"/> type).</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraReports.UI.FieldType.TimeSpan">
      <summary>
        <para>Indicates that the field returns a value as a time interval (the <see cref="T:System.TimeSpan"/> type).</para>
      </summary>
    </member>
    <member name="N:DevExpress.XtraSpellChecker">
      <summary>
        <para>Contains classes which are used to implement the main functionality of the XtraSpellChecker.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs">
      <summary>
        <para>Provides data for the AfterCheckWord event.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.#ctor(System.Object,System.String,System.String,DevExpress.XtraSpellChecker.SpellCheckOperation,DevExpress.XtraSpellChecker.Parser.Position)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs"/> class instance with specified settings.</para>
      </summary>
      <param name="editControl">An object, representing the control being checked.</param>
      <param name="originalWord">A string, representing a word before the check.</param>
      <param name="changedWord">A string, representing the word modified after the spell check.</param>
      <param name="result">A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type.</param>
      <param name="startPosition">A DevExpress.XtraSpellChecker.Parser.Position object, representing the position in the text where the checked word begins.</param>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.ChangedWord">
      <summary>
        <para>Gets the word which replaced the former one after the spelling check is performed.</para>
      </summary>
      <value>A string, representing the word modified after spelling check.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.EditControl">
      <summary>
        <para>Gets the control being checked.</para>
      </summary>
      <value>An object representing a control being checked.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.Operation">
      <summary>
        <para>Gets the type of operation performed with the word in a spell check.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckOperation"/> enumeration value, representing the operation type.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.OriginalWord">
      <summary>
        <para>Gets the word before the spell check is performed.</para>
      </summary>
      <value>A string, representing a word before the check.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs.StartPosition">
      <summary>
        <para>Gets the position of a checked word in a text.</para>
      </summary>
      <value>A DevExpress.XtraSpellChecker.Parser.Position object, representing the position in a text where the checked word begins.</value>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.AfterCheckWordEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.</para>
      </summary>
      <param name="sender">An object that triggers the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpellChecker.AfterCheckWordEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.AfterCheckWord"/> event.</param>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.CheckSpellingResultType">
      <summary>
        <para>Lists result types of spelling check.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Misspelling">
      <summary>
        <para>A misspelled word is found.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Repeating">
      <summary>
        <para>A repeating word is found.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.CheckSpellingResultType.Success">
      <summary>
        <para>No errors are found</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.ICheckSpellingResult">
      <summary>
        <para>Represents the result of the spelling check.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.HasError">
      <summary>
        <para>Gets whether the spelling error is found during a spelling check.</para>
      </summary>
      <value>true if a spelling error is found; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Index">
      <summary>
        <para>Gets the index of a checked word in a text.</para>
      </summary>
      <value>An integer representing the index of a word in a text.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Length">
      <summary>
        <para>Gets the length of a checked word.</para>
      </summary>
      <value>An integer representing the number of positions the checked word occupies.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Result">
      <summary>
        <para>Indicates the result of checking a word.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpellChecker.CheckSpellingResultType"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Text">
      <summary>
        <para>Gets the text being checked.</para>
      </summary>
      <value>A string containing the text being checked.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ICheckSpellingResult.Value">
      <summary>
        <para>Gets the checked word.</para>
      </summary>
      <value>A string representing the checked word.</value>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.IIgnoreList">
      <summary>
        <para>An interface used to represent a list of words ignored during spell check.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Add(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
      <summary>
        <para>Adds a specified word to a list of ignored words, so that it is ignored only in the specified location.</para>
      </summary>
      <param name="start">A DevExpress.XtraSpellChecker.Parser.Position object representing a position in the text.</param>
      <param name="end">A DevExpress.XtraSpellChecker.Parser.Position object representing a position in the text.</param>
      <param name="word">A string representing a word to be ignored if located between the start and the end positions.</param>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Add(System.String)">
      <summary>
        <para>Adds a specified word to a list of ignored words.</para>
      </summary>
      <param name="word">A string representing a word to be ignored.</param>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Clear">
      <summary>
        <para>Removes all items from the ignore list.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Contains(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
      <summary>
        <para>Determines whether a word is in the list of ignored words, ignored in the specified location.</para>
      </summary>
      <param name="start">A DevExpress.XtraSpellChecker.Parser.Position object representing a position in the text being checked.</param>
      <param name="end">A DevExpress.XtraSpellChecker.Parser.Position object representing a position in the text being checked.</param>
      <param name="word">A string to locate in the list of ignored words.</param>
      <returns>true if the word is found within the list and marked as effective in the specified location; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Contains(System.String)">
      <summary>
        <para>Determines whether a word is in the list of ignored words.</para>
      </summary>
      <param name="word">A string to locate in the list of ignored words.</param>
      <returns>true if the word is found within the list; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Remove(DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position,System.String)">
      <summary>
        <para>Removes a word from the list of words ignored only once.</para>
      </summary>
      <param name="start">A DevExpress.XtraSpellChecker.Parser.Position object representing a position in the text being checked.</param>
      <param name="end">A DevExpress.XtraSpellChecker.Parser.Position object representing a position in the text being checked.</param>
      <param name="word">A string representing a word to remove from the list.</param>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IIgnoreList.Remove(System.String)">
      <summary>
        <para>Removes a word from the list.</para>
      </summary>
      <param name="word">A string representing a word to remove form the list.</param>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.IOptionsSpellings">
      <summary>
        <para>The options used for the spelling check.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IOptionsSpellings.BeginUpdate">
      <summary>
        <para>Locks the <see cref="T:DevExpress.XtraSpellChecker.IOptionsSpellings"></see> object by preventing visual updates until the EndUpdate method is called.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.CheckFromCursorPos">
      <summary>
        <para>Start spelling check from the cursor position.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the spell checker should start checking from the cursor position.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.CheckSelectedTextFirst">
      <summary>
        <para>Spell check the selected text first.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether the spell checker should start checking the selected text first.</value>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.IOptionsSpellings.EndUpdate">
      <summary>
        <para>Unlocks the <see cref="T:DevExpress.XtraSpellChecker.IOptionsSpellings"></see> object after a call to the BeginUpdate method and causes an immediate visual update.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreEmails">
      <summary>
        <para>Gets or sets whether e-mail addresses should be excluded from the check.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether words that are e-mail addresses should be checked.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreMarkupTags">
      <summary>
        <para>Gets or sets whether text enclosed with specific markup tags should be checked.</para>
      </summary>
      <value>true to exclude text within tags from the check; otherwise, false.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreMixedCaseWords">
      <summary>
        <para>Gets or sets whether the spell checker ignores words containing different case letters in positions other than the first.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether mixed case words should be checked.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreRepeatedWords">
      <summary>
        <para>Gets or sets whether the spell checker ignores repeated words.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value specifying whether the text should be checked for repeated words.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreUpperCaseWords">
      <summary>
        <para>Gets or sets whether the spell checker ignores words in which all letters are uppercase.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words in which all letters are uppercase should be checked.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreUrls">
      <summary>
        <para>Gets or sets whether the spell checker ignores the URLs in text.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words which are URLs should be checked.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.IOptionsSpellings.IgnoreWordsWithNumbers">
      <summary>
        <para>Gets or sets whether the spell checker ignores words that contain numbers.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Utils.DefaultBoolean"/> enumeration value, specifying whether the words which contain numbers should be checked.</value>
    </member>
    <member name="E:DevExpress.XtraSpellChecker.IOptionsSpellings.OptionChanged">
      <summary>
        <para>Occurs when any of the spelling check options are changed.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.ISpellChecker">
      <summary>
        <para>The base interface for a spell checker.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.AddToDictionary(System.String)">
      <summary>
        <para>Add a word to a custom dictionary.</para>
      </summary>
      <param name="word">A word to add.</param>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.AddToDictionary(System.String,System.Globalization.CultureInfo)">
      <summary>
        <para>Add a word to a custom dictionary.</para>
      </summary>
      <param name="word">A word to add.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object used to select a dictionary for the specified word.</param>
    </member>
    <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.AfterCheckWord">
      <summary>
        <para>Occurs after a word is checked.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CanAddToDictionary">
      <summary>
        <para>Determines whether a word can be added to a custom dictionary.</para>
      </summary>
      <returns>true if a word can be added to the dictionary; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CanAddToDictionary(System.Globalization.CultureInfo)">
      <summary>
        <para>Determines whether words of the specified language can be added to the dictionary.</para>
      </summary>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object that specifies the language of the required dictionary.</param>
      <returns>true, if the words can be added to the dictionary; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Check(System.Object)">
      <summary>
        <para>Checks the specified control for spelling mistakes.</para>
      </summary>
      <param name="control">A <see cref="T:System.Windows.Forms.Control"/> object, representing a control to be checked for spelling mistakes.</param>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Check(System.Object,DevExpress.XtraSpellChecker.Parser.ISpellCheckTextController,DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position)">
      <summary>
        <para>Checks the spelling of the text available through the controller interface in the specified range and returns on the first error that occurrs.</para>
      </summary>
      <param name="control">An object that is a control to be checked for spelling mistakes.</param>
      <param name="controller">An object implementing the DevExpress.XtraSpellChecker.Parser.ISpellCheckTextController interface providing text to check.</param>
      <param name="from">A DevExpress.XtraSpellChecker.Parser.Position object containing information on the position where the check statrs.</param>
      <param name="to">A DevExpress.XtraSpellChecker.Parser.Position object containing information on the position where the check finishes.</param>
      <returns>An object with the <see cref="T:DevExpress.XtraSpellChecker.ISpellingErrorInfo"/> interface providing information on the error type and position.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.CheckText(System.Object,System.String,System.Int32,System.Globalization.CultureInfo)">
      <summary>
        <para>Checks the specified text in the specified control with the specified culture.</para>
      </summary>
      <param name="control">A control to check.</param>
      <param name="text">A string that is a text to check.</param>
      <param name="index">An integer specifying the start position within the string.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object that specifies the culture settings (the symbols encoding, language and phonetic specifics).</param>
      <returns>An object exposing the <see cref="T:DevExpress.XtraSpellChecker.ICheckSpellingResult"/> interface.</returns>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.Culture">
      <summary>
        <para>Gets or sets the culture-specific settings of the spell checker.</para>
      </summary>
      <value>A <see cref="T:System.Globalization.CultureInfo"/> object that specifies culture settings (the symbols encoding, language and phonetic specifics).</value>
    </member>
    <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.CultureChanged">
      <summary>
        <para>Occurs when the current culture setting of a spell checker is changed.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.CustomDictionaryChanged">
      <summary>
        <para>Occurs when a custom dictionary is modified by an end-user.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.GetOptions(System.Object)">
      <summary>
        <para>Provides access to spell checking options for a specified control.</para>
      </summary>
      <param name="control">A control for which spelling options are set.</param>
      <returns>An object exposing the <see cref="T:DevExpress.XtraSpellChecker.IOptionsSpellings"/> interface.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.GetSuggestions(System.String,System.Globalization.CultureInfo)">
      <summary>
        <para>Constructs an ordered list of suggestions for a given word.</para>
      </summary>
      <param name="word">A System.String representing a word for which the suggestions should be calculated.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object specifying the culture, ensuring that the proper dictionaries are loaded.</param>
      <returns>A <see cref="T:DevExpress.XtraSpellChecker.SuggestionCollection"/> object representing a sorted list of suggested words.</returns>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.Ignore(System.Object,System.String,DevExpress.XtraSpellChecker.Parser.Position,DevExpress.XtraSpellChecker.Parser.Position)">
      <summary>
        <para>Disregards a word in a text.</para>
      </summary>
      <param name="control">A control whose content is checked.</param>
      <param name="word">A word to ignore while checking.</param>
      <param name="start">The position from which to start ignoring the word.</param>
      <param name="end">Position to finish ignoring the word.</param>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.IgnoreAll(System.Object,System.String)">
      <summary>
        <para>Skips the specified word throughout the entire content of the specified control.</para>
      </summary>
      <param name="control">A control whose content is checked.</param>
      <param name="word">A word to ignore.</param>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.IsChecking">
      <summary>
        <para>Gets whether the spell checker is checking the content.</para>
      </summary>
      <value>true if a spell checker is checking the content; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.RegisterIgnoreList(System.Object,DevExpress.XtraSpellChecker.IIgnoreList)">
      <summary>
        <para>Registers a list of words as the words to ignore while checking.</para>
      </summary>
      <param name="control">A control whose content is checked.</param>
      <param name="ignoreList">An object exposing the <see cref="T:DevExpress.XtraSpellChecker.IIgnoreList"/> interface and representing a list of words to skip.</param>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellChecker.SpellCheckMode">
      <summary>
        <para>Gets or sets the spell check mode.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellCheckMode"/> enumeration member.</value>
    </member>
    <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.SpellCheckModeChanged">
      <summary>
        <para>Occurs when the SpellCheckMode is changed.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.ISpellChecker.UnregisterIgnoreList(System.Object)">
      <summary>
        <para>Unregisters the previously registered list of words which should be skipped while checking.</para>
      </summary>
      <param name="control">A control whose content is checked.</param>
    </member>
    <member name="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded">
      <summary>
        <para>Occurs after a word is added to a custom dictionary.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.ISpellingErrorInfo">
      <summary>
        <para>Comprises erroneous word, error type and location.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.Error">
      <summary>
        <para>Gets the error type.</para>
      </summary>
      <value>A <see cref="T:DevExpress.XtraSpellChecker.SpellingError"/> enumeration member.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.Word">
      <summary>
        <para>Gets a misspelled word.</para>
      </summary>
      <value>A string that is the misspelled word.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.WordEndPosition">
      <summary>
        <para>Gets the end position of a misspelled word.</para>
      </summary>
      <value>A DevExpress.XtraSpellChecker.Parser.Position object containing information on the position of the word.</value>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.ISpellingErrorInfo.WordStartPosition">
      <summary>
        <para>Gets the start position of a misspelled word.</para>
      </summary>
      <value>A DevExpress.XtraSpellChecker.Parser.Position object containing information on the position of the word.</value>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.SpellCheckMode">
      <summary>
        <para>Lists available operation modes of the spell checker.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.AsYouType">
      <summary>
        <para>Starts spelling check when you finish typing the word or move the cursor after changing it.This operation mode underlines the misspelled word and allows you to select a suggestion from the context menu, invoked by right-clicking the word.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckMode.OnDemand">
      <summary>
        <para>Starts spelling check and invokes the spelling form for making corrections.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.SpellCheckOperation">
      <summary>
        <para>Lists implemented spell checker operations.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.AddToDictionary">
      <summary>
        <para>Replaces a word in the text with the user input, and adds the replacement to the custom dictionary.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Cancel">
      <summary>
        <para>Stops the spelling checker operation, resets the checking strategy and closes the spelling form.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Change">
      <summary>
        <para>Replaces the current word in the text being checked with the suggested word.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.ChangeAll">
      <summary>
        <para>Replaces all occurences of the current word in the text being checked with the suggested word.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Custom">
      <summary>
        <para>This enumeration member is intended for internal use only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Delete">
      <summary>
        <para>Deletes the current word from the text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Ignore">
      <summary>
        <para>Disregards the current word and proceeds to the next one.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.IgnoreAll">
      <summary>
        <para>Disregards the current word and all its occurences in the text.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.None">
      <summary>
        <para>This enumeration member is intended for internal use only.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Options">
      <summary>
        <para>Invokes the spelling options form. After closing the form, re-checks the text with new spelling options starting with the last checked word.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Recheck">
      <summary>
        <para>Forces the spell checker to check the last checked word again.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentChange">
      <summary>
        <para>Replaces the current word in the text being checked with the suggested word. For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.SilentIgnore">
      <summary>
        <para>Disregards the current word and proceeds to the next one. For internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellCheckOperation.Undo">
      <summary>
        <para>Cancels the effect of the last operation, restoring the text to its previous state.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.SpellingError">
      <summary>
        <para>Lists error types found during a spell check.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellingError.Misspelling">
      <summary>
        <para>Erroneously spelled word.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellingError.Repeating">
      <summary>
        <para>Repeated word.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellingError.Syntax">
      <summary>
        <para>Reserved for internal use.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XtraSpellChecker.SpellingError.Unknown">
      <summary>
        <para>Error type unlisted in enumeration. Use it for custom error handling.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.WordAddedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> and <see cref="E:DevExpress.XtraSpellChecker.SpellCheckerBase.WordAdded"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XtraSpellChecker.WordAddedEventArgs.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XtraSpellChecker.WordAddedEventArgs"/> class with the specified settings.</para>
      </summary>
      <param name="word">A word that has been added to the custom dictionary.</param>
    </member>
    <member name="P:DevExpress.XtraSpellChecker.WordAddedEventArgs.Word">
      <summary>
        <para>Gets a word added to the dictionary.</para>
      </summary>
      <value>A string representing a word added to the dictionary.</value>
    </member>
    <member name="T:DevExpress.XtraSpellChecker.WordAddedEventHandler">
      <summary>
        <para>Represents a method that will handle the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.</para>
      </summary>
      <param name="sender">An object of any type that triggers the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.</param>
      <param name="e">A <see cref="T:DevExpress.XtraSpellChecker.WordAddedEventArgs"/> object that provides data for the <see cref="E:DevExpress.XtraSpellChecker.ISpellChecker.WordAdded"/> event.</param>
    </member>
  </members>
</doc>